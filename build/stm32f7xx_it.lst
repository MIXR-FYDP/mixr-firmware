ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_it.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.NMI_Handler,"ax",%progbits
  17              		.align	1
  18              		.global	NMI_Handler
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	NMI_Handler:
  26              	.LFB141:
  27              		.file 1 "Src/stm32f7xx_it.c"
   1:Src/stm32f7xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f7xx_it.c **** /**
   3:Src/stm32f7xx_it.c ****   ******************************************************************************
   4:Src/stm32f7xx_it.c ****   * @file    stm32f7xx_it.c
   5:Src/stm32f7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f7xx_it.c ****   ******************************************************************************
   7:Src/stm32f7xx_it.c ****   * @attention
   8:Src/stm32f7xx_it.c ****   *
   9:Src/stm32f7xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32f7xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f7xx_it.c ****   *
  12:Src/stm32f7xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/stm32f7xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/stm32f7xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Src/stm32f7xx_it.c ****   *                             www.st.com/SLA0044
  16:Src/stm32f7xx_it.c ****   *
  17:Src/stm32f7xx_it.c ****   ******************************************************************************
  18:Src/stm32f7xx_it.c ****   */
  19:Src/stm32f7xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f7xx_it.c **** 
  21:Src/stm32f7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f7xx_it.c **** #include "main.h"
  23:Src/stm32f7xx_it.c **** #include "stm32f7xx_it.h"
  24:Src/stm32f7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f7xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f7xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32f7xx_it.c ****   
  28:Src/stm32f7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f7xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f7xx_it.c **** 
  31:Src/stm32f7xx_it.c **** /* USER CODE END TD */
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s 			page 2


  32:Src/stm32f7xx_it.c **** 
  33:Src/stm32f7xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32f7xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32f7xx_it.c ****  
  36:Src/stm32f7xx_it.c **** /* USER CODE END PD */
  37:Src/stm32f7xx_it.c **** 
  38:Src/stm32f7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32f7xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32f7xx_it.c **** 
  41:Src/stm32f7xx_it.c **** /* USER CODE END PM */
  42:Src/stm32f7xx_it.c **** 
  43:Src/stm32f7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32f7xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32f7xx_it.c **** 
  46:Src/stm32f7xx_it.c **** /* USER CODE END PV */
  47:Src/stm32f7xx_it.c **** 
  48:Src/stm32f7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32f7xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32f7xx_it.c **** 
  51:Src/stm32f7xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32f7xx_it.c **** 
  53:Src/stm32f7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32f7xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32f7xx_it.c **** 
  56:Src/stm32f7xx_it.c **** /* USER CODE END 0 */
  57:Src/stm32f7xx_it.c **** 
  58:Src/stm32f7xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Src/stm32f7xx_it.c **** extern I2S_HandleTypeDef hi2s1;
  60:Src/stm32f7xx_it.c **** extern DMA_HandleTypeDef hdma_sdmmc2_tx;
  61:Src/stm32f7xx_it.c **** extern DMA_HandleTypeDef hdma_sdmmc2_rx;
  62:Src/stm32f7xx_it.c **** extern SD_HandleTypeDef hsd2;
  63:Src/stm32f7xx_it.c **** /* USER CODE BEGIN EV */
  64:Src/stm32f7xx_it.c **** 
  65:Src/stm32f7xx_it.c **** /* USER CODE END EV */
  66:Src/stm32f7xx_it.c **** 
  67:Src/stm32f7xx_it.c **** /******************************************************************************/
  68:Src/stm32f7xx_it.c **** /*           Cortex-M7 Processor Interruption and Exception Handlers          */ 
  69:Src/stm32f7xx_it.c **** /******************************************************************************/
  70:Src/stm32f7xx_it.c **** /**
  71:Src/stm32f7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  72:Src/stm32f7xx_it.c ****   */
  73:Src/stm32f7xx_it.c **** void NMI_Handler(void)
  74:Src/stm32f7xx_it.c **** {
  28              		.loc 1 74 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  75:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  76:Src/stm32f7xx_it.c **** 
  77:Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  78:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  79:Src/stm32f7xx_it.c **** 
  80:Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Src/stm32f7xx_it.c **** }
  33              		.loc 1 81 1 view .LVU1
  34 0000 7047     		bx	lr
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s 			page 3


  35              		.cfi_endproc
  36              	.LFE141:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv5-d16
  46              	HardFault_Handler:
  47              	.LFB142:
  82:Src/stm32f7xx_it.c **** 
  83:Src/stm32f7xx_it.c **** /**
  84:Src/stm32f7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Src/stm32f7xx_it.c ****   */
  86:Src/stm32f7xx_it.c **** void HardFault_Handler(void)
  87:Src/stm32f7xx_it.c **** {
  48              		.loc 1 87 1 view -0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  88:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Src/stm32f7xx_it.c **** 
  90:Src/stm32f7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Src/stm32f7xx_it.c ****   while (1)
  55              		.loc 1 91 3 discriminator 1 view .LVU3
  92:Src/stm32f7xx_it.c ****   {
  93:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:Src/stm32f7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Src/stm32f7xx_it.c ****   }
  56              		.loc 1 95 3 discriminator 1 view .LVU4
  57 0000 FEE7     		b	.L3
  58              		.cfi_endproc
  59              	.LFE142:
  61              		.section	.text.MemManage_Handler,"ax",%progbits
  62              		.align	1
  63              		.global	MemManage_Handler
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu fpv5-d16
  69              	MemManage_Handler:
  70              	.LFB143:
  96:Src/stm32f7xx_it.c **** }
  97:Src/stm32f7xx_it.c **** 
  98:Src/stm32f7xx_it.c **** /**
  99:Src/stm32f7xx_it.c ****   * @brief This function handles Memory management fault.
 100:Src/stm32f7xx_it.c ****   */
 101:Src/stm32f7xx_it.c **** void MemManage_Handler(void)
 102:Src/stm32f7xx_it.c **** {
  71              		.loc 1 102 1 view -0
  72              		.cfi_startproc
  73              		@ Volatile: function does not return.
  74              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s 			page 4


  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77              	.L5:
 103:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 104:Src/stm32f7xx_it.c **** 
 105:Src/stm32f7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 106:Src/stm32f7xx_it.c ****   while (1)
  78              		.loc 1 106 3 discriminator 1 view .LVU6
 107:Src/stm32f7xx_it.c ****   {
 108:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 109:Src/stm32f7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 110:Src/stm32f7xx_it.c ****   }
  79              		.loc 1 110 3 discriminator 1 view .LVU7
  80 0000 FEE7     		b	.L5
  81              		.cfi_endproc
  82              	.LFE143:
  84              		.section	.text.BusFault_Handler,"ax",%progbits
  85              		.align	1
  86              		.global	BusFault_Handler
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  90              		.fpu fpv5-d16
  92              	BusFault_Handler:
  93              	.LFB144:
 111:Src/stm32f7xx_it.c **** }
 112:Src/stm32f7xx_it.c **** 
 113:Src/stm32f7xx_it.c **** /**
 114:Src/stm32f7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 115:Src/stm32f7xx_it.c ****   */
 116:Src/stm32f7xx_it.c **** void BusFault_Handler(void)
 117:Src/stm32f7xx_it.c **** {
  94              		.loc 1 117 1 view -0
  95              		.cfi_startproc
  96              		@ Volatile: function does not return.
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		@ link register save eliminated.
 100              	.L7:
 118:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 119:Src/stm32f7xx_it.c **** 
 120:Src/stm32f7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 121:Src/stm32f7xx_it.c ****   while (1)
 101              		.loc 1 121 3 discriminator 1 view .LVU9
 122:Src/stm32f7xx_it.c ****   {
 123:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 124:Src/stm32f7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 125:Src/stm32f7xx_it.c ****   }
 102              		.loc 1 125 3 discriminator 1 view .LVU10
 103 0000 FEE7     		b	.L7
 104              		.cfi_endproc
 105              	.LFE144:
 107              		.section	.text.UsageFault_Handler,"ax",%progbits
 108              		.align	1
 109              		.global	UsageFault_Handler
 110              		.syntax unified
 111              		.thumb
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s 			page 5


 112              		.thumb_func
 113              		.fpu fpv5-d16
 115              	UsageFault_Handler:
 116              	.LFB145:
 126:Src/stm32f7xx_it.c **** }
 127:Src/stm32f7xx_it.c **** 
 128:Src/stm32f7xx_it.c **** /**
 129:Src/stm32f7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 130:Src/stm32f7xx_it.c ****   */
 131:Src/stm32f7xx_it.c **** void UsageFault_Handler(void)
 132:Src/stm32f7xx_it.c **** {
 117              		.loc 1 132 1 view -0
 118              		.cfi_startproc
 119              		@ Volatile: function does not return.
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.L9:
 133:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 134:Src/stm32f7xx_it.c **** 
 135:Src/stm32f7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 136:Src/stm32f7xx_it.c ****   while (1)
 124              		.loc 1 136 3 discriminator 1 view .LVU12
 137:Src/stm32f7xx_it.c ****   {
 138:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 139:Src/stm32f7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 140:Src/stm32f7xx_it.c ****   }
 125              		.loc 1 140 3 discriminator 1 view .LVU13
 126 0000 FEE7     		b	.L9
 127              		.cfi_endproc
 128              	.LFE145:
 130              		.section	.text.SVC_Handler,"ax",%progbits
 131              		.align	1
 132              		.global	SVC_Handler
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv5-d16
 138              	SVC_Handler:
 139              	.LFB146:
 141:Src/stm32f7xx_it.c **** }
 142:Src/stm32f7xx_it.c **** 
 143:Src/stm32f7xx_it.c **** /**
 144:Src/stm32f7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 145:Src/stm32f7xx_it.c ****   */
 146:Src/stm32f7xx_it.c **** void SVC_Handler(void)
 147:Src/stm32f7xx_it.c **** {
 140              		.loc 1 147 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 148:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 149:Src/stm32f7xx_it.c **** 
 150:Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 151:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 152:Src/stm32f7xx_it.c **** 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s 			page 6


 153:Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 154:Src/stm32f7xx_it.c **** }
 145              		.loc 1 154 1 view .LVU15
 146 0000 7047     		bx	lr
 147              		.cfi_endproc
 148              	.LFE146:
 150              		.section	.text.DebugMon_Handler,"ax",%progbits
 151              		.align	1
 152              		.global	DebugMon_Handler
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 156              		.fpu fpv5-d16
 158              	DebugMon_Handler:
 159              	.LFB147:
 155:Src/stm32f7xx_it.c **** 
 156:Src/stm32f7xx_it.c **** /**
 157:Src/stm32f7xx_it.c ****   * @brief This function handles Debug monitor.
 158:Src/stm32f7xx_it.c ****   */
 159:Src/stm32f7xx_it.c **** void DebugMon_Handler(void)
 160:Src/stm32f7xx_it.c **** {
 160              		.loc 1 160 1 view -0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 161:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 162:Src/stm32f7xx_it.c **** 
 163:Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 164:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 165:Src/stm32f7xx_it.c **** 
 166:Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 167:Src/stm32f7xx_it.c **** }
 165              		.loc 1 167 1 view .LVU17
 166 0000 7047     		bx	lr
 167              		.cfi_endproc
 168              	.LFE147:
 170              		.section	.text.PendSV_Handler,"ax",%progbits
 171              		.align	1
 172              		.global	PendSV_Handler
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu fpv5-d16
 178              	PendSV_Handler:
 179              	.LFB148:
 168:Src/stm32f7xx_it.c **** 
 169:Src/stm32f7xx_it.c **** /**
 170:Src/stm32f7xx_it.c ****   * @brief This function handles Pendable request for system service.
 171:Src/stm32f7xx_it.c ****   */
 172:Src/stm32f7xx_it.c **** void PendSV_Handler(void)
 173:Src/stm32f7xx_it.c **** {
 180              		.loc 1 173 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s 			page 7


 174:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 175:Src/stm32f7xx_it.c **** 
 176:Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 177:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 178:Src/stm32f7xx_it.c **** 
 179:Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 180:Src/stm32f7xx_it.c **** }
 185              		.loc 1 180 1 view .LVU19
 186 0000 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE148:
 190              		.section	.text.SysTick_Handler,"ax",%progbits
 191              		.align	1
 192              		.global	SysTick_Handler
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 196              		.fpu fpv5-d16
 198              	SysTick_Handler:
 199              	.LFB149:
 181:Src/stm32f7xx_it.c **** 
 182:Src/stm32f7xx_it.c **** /**
 183:Src/stm32f7xx_it.c ****   * @brief This function handles System tick timer.
 184:Src/stm32f7xx_it.c ****   */
 185:Src/stm32f7xx_it.c **** void SysTick_Handler(void)
 186:Src/stm32f7xx_it.c **** {
 200              		.loc 1 186 1 view -0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204 0000 08B5     		push	{r3, lr}
 205              	.LCFI0:
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 3, -8
 208              		.cfi_offset 14, -4
 187:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 188:Src/stm32f7xx_it.c **** 
 189:Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 190:Src/stm32f7xx_it.c ****   HAL_IncTick();
 209              		.loc 1 190 3 view .LVU21
 210 0002 FFF7FEFF 		bl	HAL_IncTick
 211              	.LVL0:
 191:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 192:Src/stm32f7xx_it.c **** 
 193:Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 194:Src/stm32f7xx_it.c **** }
 212              		.loc 1 194 1 is_stmt 0 view .LVU22
 213 0006 08BD     		pop	{r3, pc}
 214              		.cfi_endproc
 215              	.LFE149:
 217              		.section	.text.SPI1_IRQHandler,"ax",%progbits
 218              		.align	1
 219              		.global	SPI1_IRQHandler
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s 			page 8


 225              	SPI1_IRQHandler:
 226              	.LFB150:
 195:Src/stm32f7xx_it.c **** 
 196:Src/stm32f7xx_it.c **** /******************************************************************************/
 197:Src/stm32f7xx_it.c **** /* STM32F7xx Peripheral Interrupt Handlers                                    */
 198:Src/stm32f7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 199:Src/stm32f7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 200:Src/stm32f7xx_it.c **** /* please refer to the startup file (startup_stm32f7xx.s).                    */
 201:Src/stm32f7xx_it.c **** /******************************************************************************/
 202:Src/stm32f7xx_it.c **** 
 203:Src/stm32f7xx_it.c **** /**
 204:Src/stm32f7xx_it.c ****   * @brief This function handles SPI1 global interrupt.
 205:Src/stm32f7xx_it.c ****   */
 206:Src/stm32f7xx_it.c **** void SPI1_IRQHandler(void)
 207:Src/stm32f7xx_it.c **** {
 227              		.loc 1 207 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231 0000 08B5     		push	{r3, lr}
 232              	.LCFI1:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 3, -8
 235              		.cfi_offset 14, -4
 208:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 0 */
 209:Src/stm32f7xx_it.c **** 
 210:Src/stm32f7xx_it.c ****   /* USER CODE END SPI1_IRQn 0 */
 211:Src/stm32f7xx_it.c ****   HAL_I2S_IRQHandler(&hi2s1);
 236              		.loc 1 211 3 view .LVU24
 237 0002 0248     		ldr	r0, .L17
 238 0004 FFF7FEFF 		bl	HAL_I2S_IRQHandler
 239              	.LVL1:
 212:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 1 */
 213:Src/stm32f7xx_it.c **** 
 214:Src/stm32f7xx_it.c ****   /* USER CODE END SPI1_IRQn 1 */
 215:Src/stm32f7xx_it.c **** }
 240              		.loc 1 215 1 is_stmt 0 view .LVU25
 241 0008 08BD     		pop	{r3, pc}
 242              	.L18:
 243 000a 00BF     		.align	2
 244              	.L17:
 245 000c 00000000 		.word	hi2s1
 246              		.cfi_endproc
 247              	.LFE150:
 249              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 250              		.align	1
 251              		.global	DMA2_Stream0_IRQHandler
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu fpv5-d16
 257              	DMA2_Stream0_IRQHandler:
 258              	.LFB151:
 216:Src/stm32f7xx_it.c **** 
 217:Src/stm32f7xx_it.c **** /**
 218:Src/stm32f7xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 219:Src/stm32f7xx_it.c ****   */
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s 			page 9


 220:Src/stm32f7xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 221:Src/stm32f7xx_it.c **** {
 259              		.loc 1 221 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 08B5     		push	{r3, lr}
 264              	.LCFI2:
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 3, -8
 267              		.cfi_offset 14, -4
 222:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 223:Src/stm32f7xx_it.c **** 
 224:Src/stm32f7xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 225:Src/stm32f7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_sdmmc2_tx);
 268              		.loc 1 225 3 view .LVU27
 269 0002 0248     		ldr	r0, .L21
 270 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 271              	.LVL2:
 226:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */
 227:Src/stm32f7xx_it.c **** 
 228:Src/stm32f7xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 1 */
 229:Src/stm32f7xx_it.c **** }
 272              		.loc 1 229 1 is_stmt 0 view .LVU28
 273 0008 08BD     		pop	{r3, pc}
 274              	.L22:
 275 000a 00BF     		.align	2
 276              	.L21:
 277 000c 00000000 		.word	hdma_sdmmc2_tx
 278              		.cfi_endproc
 279              	.LFE151:
 281              		.section	.text.DMA2_Stream5_IRQHandler,"ax",%progbits
 282              		.align	1
 283              		.global	DMA2_Stream5_IRQHandler
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 287              		.fpu fpv5-d16
 289              	DMA2_Stream5_IRQHandler:
 290              	.LFB152:
 230:Src/stm32f7xx_it.c **** 
 231:Src/stm32f7xx_it.c **** /**
 232:Src/stm32f7xx_it.c ****   * @brief This function handles DMA2 stream5 global interrupt.
 233:Src/stm32f7xx_it.c ****   */
 234:Src/stm32f7xx_it.c **** void DMA2_Stream5_IRQHandler(void)
 235:Src/stm32f7xx_it.c **** {
 291              		.loc 1 235 1 is_stmt 1 view -0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295 0000 08B5     		push	{r3, lr}
 296              	.LCFI3:
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 3, -8
 299              		.cfi_offset 14, -4
 236:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream5_IRQn 0 */
 237:Src/stm32f7xx_it.c **** 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s 			page 10


 238:Src/stm32f7xx_it.c ****   /* USER CODE END DMA2_Stream5_IRQn 0 */
 239:Src/stm32f7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_sdmmc2_rx);
 300              		.loc 1 239 3 view .LVU30
 301 0002 0248     		ldr	r0, .L25
 302 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 303              	.LVL3:
 240:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream5_IRQn 1 */
 241:Src/stm32f7xx_it.c **** 
 242:Src/stm32f7xx_it.c ****   /* USER CODE END DMA2_Stream5_IRQn 1 */
 243:Src/stm32f7xx_it.c **** }
 304              		.loc 1 243 1 is_stmt 0 view .LVU31
 305 0008 08BD     		pop	{r3, pc}
 306              	.L26:
 307 000a 00BF     		.align	2
 308              	.L25:
 309 000c 00000000 		.word	hdma_sdmmc2_rx
 310              		.cfi_endproc
 311              	.LFE152:
 313              		.section	.text.SDMMC2_IRQHandler,"ax",%progbits
 314              		.align	1
 315              		.global	SDMMC2_IRQHandler
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu fpv5-d16
 321              	SDMMC2_IRQHandler:
 322              	.LFB153:
 244:Src/stm32f7xx_it.c **** 
 245:Src/stm32f7xx_it.c **** /**
 246:Src/stm32f7xx_it.c ****   * @brief This function handles SDMMC2 global interrupt.
 247:Src/stm32f7xx_it.c ****   */
 248:Src/stm32f7xx_it.c **** void SDMMC2_IRQHandler(void)
 249:Src/stm32f7xx_it.c **** {
 323              		.loc 1 249 1 is_stmt 1 view -0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327 0000 08B5     		push	{r3, lr}
 328              	.LCFI4:
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 3, -8
 331              		.cfi_offset 14, -4
 250:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SDMMC2_IRQn 0 */
 251:Src/stm32f7xx_it.c **** 
 252:Src/stm32f7xx_it.c ****   /* USER CODE END SDMMC2_IRQn 0 */
 253:Src/stm32f7xx_it.c ****   HAL_SD_IRQHandler(&hsd2);
 332              		.loc 1 253 3 view .LVU33
 333 0002 0248     		ldr	r0, .L29
 334 0004 FFF7FEFF 		bl	HAL_SD_IRQHandler
 335              	.LVL4:
 254:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SDMMC2_IRQn 1 */
 255:Src/stm32f7xx_it.c **** 
 256:Src/stm32f7xx_it.c ****   /* USER CODE END SDMMC2_IRQn 1 */
 257:Src/stm32f7xx_it.c **** }
 336              		.loc 1 257 1 is_stmt 0 view .LVU34
 337 0008 08BD     		pop	{r3, pc}
 338              	.L30:
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s 			page 11


 339 000a 00BF     		.align	2
 340              	.L29:
 341 000c 00000000 		.word	hsd2
 342              		.cfi_endproc
 343              	.LFE153:
 345              		.text
 346              	.Letext0:
 347              		.file 2 "/Users/evan/mixr/software/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machin
 348              		.file 3 "/Users/evan/mixr/software/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_s
 349              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 350              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 351              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f769xx.h"
 352              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 353              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 354              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2s.h"
 355              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 356              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 357              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_it.c
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:17     .text.NMI_Handler:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:39     .text.HardFault_Handler:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:46     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:62     .text.MemManage_Handler:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:69     .text.MemManage_Handler:0000000000000000 MemManage_Handler
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:85     .text.BusFault_Handler:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:92     .text.BusFault_Handler:0000000000000000 BusFault_Handler
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:108    .text.UsageFault_Handler:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:115    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:131    .text.SVC_Handler:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:138    .text.SVC_Handler:0000000000000000 SVC_Handler
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:151    .text.DebugMon_Handler:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:158    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:171    .text.PendSV_Handler:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:178    .text.PendSV_Handler:0000000000000000 PendSV_Handler
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:191    .text.SysTick_Handler:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:198    .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:218    .text.SPI1_IRQHandler:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:225    .text.SPI1_IRQHandler:0000000000000000 SPI1_IRQHandler
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:245    .text.SPI1_IRQHandler:000000000000000c $d
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:250    .text.DMA2_Stream0_IRQHandler:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:257    .text.DMA2_Stream0_IRQHandler:0000000000000000 DMA2_Stream0_IRQHandler
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:277    .text.DMA2_Stream0_IRQHandler:000000000000000c $d
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:282    .text.DMA2_Stream5_IRQHandler:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:289    .text.DMA2_Stream5_IRQHandler:0000000000000000 DMA2_Stream5_IRQHandler
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:309    .text.DMA2_Stream5_IRQHandler:000000000000000c $d
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:314    .text.SDMMC2_IRQHandler:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:321    .text.SDMMC2_IRQHandler:0000000000000000 SDMMC2_IRQHandler
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccbi7t4o.s:341    .text.SDMMC2_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_I2S_IRQHandler
hi2s1
HAL_DMA_IRQHandler
hdma_sdmmc2_tx
hdma_sdmmc2_rx
HAL_SD_IRQHandler
hsd2
