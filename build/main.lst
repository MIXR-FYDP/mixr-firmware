ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MX_SDMMC2_SD_Init,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	MX_SDMMC2_SD_Init:
  25              	.LFB149:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****   * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                             www.st.com/SLA0044
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "fatfs.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** #include <stdio.h>
  28:Src/main.c    **** #include <string.h>
  29:Src/main.c    **** #include <stdarg.h>
  30:Src/main.c    **** 
  31:Src/main.c    **** #include "SEGGER_RTT.h"
  32:Src/main.c    **** 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 2


  33:Src/main.c    **** /* USER CODE END Includes */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PTD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* USER CODE END PTD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PD */
  42:Src/main.c    **** #define SAMPLE_BUFFER_SIZE 10000
  43:Src/main.c    **** /* USER CODE END PD */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  46:Src/main.c    **** /* USER CODE BEGIN PM */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END PM */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  51:Src/main.c    **** 
  52:Src/main.c    **** I2S_HandleTypeDef hi2s1;
  53:Src/main.c    **** 
  54:Src/main.c    **** QSPI_HandleTypeDef hqspi;
  55:Src/main.c    **** 
  56:Src/main.c    **** SD_HandleTypeDef hsd2;
  57:Src/main.c    **** 
  58:Src/main.c    **** SPI_HandleTypeDef hspi4;
  59:Src/main.c    **** 
  60:Src/main.c    **** UART_HandleTypeDef huart1;
  61:Src/main.c    **** UART_HandleTypeDef huart2;
  62:Src/main.c    **** 
  63:Src/main.c    **** PCD_HandleTypeDef hpcd_USB_OTG_FS;
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN PV */
  66:Src/main.c    **** char buffer[256];
  67:Src/main.c    **** 
  68:Src/main.c    **** uint32_t I2S_RxBuffer_L[SAMPLE_BUFFER_SIZE];
  69:Src/main.c    **** uint32_t I2S_RxBuffer_R[SAMPLE_BUFFER_SIZE];
  70:Src/main.c    **** uint32_t I2S_RxBuffer_L_Index = 0;
  71:Src/main.c    **** uint32_t I2S_RxBuffer_R_Index = 0;
  72:Src/main.c    **** /* USER CODE END PV */
  73:Src/main.c    **** 
  74:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  75:Src/main.c    **** void SystemClock_Config(void);
  76:Src/main.c    **** static void MX_GPIO_Init(void);
  77:Src/main.c    **** static void MX_I2S1_Init(void);
  78:Src/main.c    **** static void MX_QUADSPI_Init(void);
  79:Src/main.c    **** static void MX_SDMMC2_SD_Init(void);
  80:Src/main.c    **** static void MX_SPI4_Init(void);
  81:Src/main.c    **** static void MX_USART1_UART_Init(void);
  82:Src/main.c    **** static void MX_USART2_UART_Init(void);
  83:Src/main.c    **** static void MX_USB_OTG_FS_PCD_Init(void);
  84:Src/main.c    **** /* USER CODE BEGIN PFP */
  85:Src/main.c    **** void myprintf(const char *fmt, ...);
  86:Src/main.c    **** FRESULT scan_files (char* path);
  87:Src/main.c    **** 
  88:Src/main.c    **** /* USER CODE END PFP */
  89:Src/main.c    **** 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 3


  90:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  91:Src/main.c    **** /* USER CODE BEGIN 0 */
  92:Src/main.c    **** 
  93:Src/main.c    **** /* USER CODE END 0 */
  94:Src/main.c    **** 
  95:Src/main.c    **** /**
  96:Src/main.c    ****   * @brief  The application entry point.
  97:Src/main.c    ****   * @retval int
  98:Src/main.c    ****   */
  99:Src/main.c    **** int main(void)
 100:Src/main.c    **** {
 101:Src/main.c    ****   /* USER CODE BEGIN 1 */
 102:Src/main.c    ****   //Fatfs object
 103:Src/main.c    ****   FATFS FatFs;
 104:Src/main.c    ****   //File object
 105:Src/main.c    ****   FIL fil;
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE END 1 */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Enable I-Cache---------------------------------------------------------*/
 110:Src/main.c    ****   SCB_EnableICache();
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* Enable D-Cache---------------------------------------------------------*/
 113:Src/main.c    ****   SCB_EnableDCache();
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 118:Src/main.c    ****   HAL_Init();
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE BEGIN Init */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* USER CODE END Init */
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* Configure the system clock */
 125:Src/main.c    ****   SystemClock_Config();
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* USER CODE END SysInit */
 130:Src/main.c    **** 
 131:Src/main.c    ****   /* Initialize all configured peripherals */
 132:Src/main.c    ****   MX_GPIO_Init();
 133:Src/main.c    ****   MX_I2S1_Init();
 134:Src/main.c    ****   // MX_QUADSPI_Init();
 135:Src/main.c    ****   MX_SDMMC2_SD_Init();
 136:Src/main.c    ****   // MX_SPI4_Init();
 137:Src/main.c    ****   // MX_USART1_UART_Init();
 138:Src/main.c    ****   // MX_USART2_UART_Init();
 139:Src/main.c    ****   // MX_USB_OTG_FS_PCD_Init();
 140:Src/main.c    ****   MX_FATFS_Init();
 141:Src/main.c    ****   /* USER CODE BEGIN 2 */
 142:Src/main.c    ****     
 143:Src/main.c    ****   /* I2S Acquisition */
 144:Src/main.c    ****   uint16_t count = 0;
 145:Src/main.c    ****   uint8_t channel = 0;
 146:Src/main.c    ****   uint8_t last_channel = 0;
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 4


 147:Src/main.c    ****   uint16_t data[2] = {0};
 148:Src/main.c    ****   uint16_t status[2] = {0};
 149:Src/main.c    **** 
 150:Src/main.c    ****   while(count < SAMPLE_BUFFER_SIZE) {
 151:Src/main.c    ****     HAL_I2S_Receive(&hi2s1, data, status, 1, 100);
 152:Src/main.c    ****     if(status[0] == status[1]) {
 153:Src/main.c    ****       channel = (uint8_t) status[0] & 0x4;
 154:Src/main.c    ****       if(channel != last_channel) {
 155:Src/main.c    ****         switch(channel) {
 156:Src/main.c    ****           case 0x0:
 157:Src/main.c    ****             I2S_RxBuffer_L[I2S_RxBuffer_L_Index++] = ((int32_t) data[0] << 16 | data[1]) >> 8;
 158:Src/main.c    ****             break;
 159:Src/main.c    ****           case 0x4:
 160:Src/main.c    ****             I2S_RxBuffer_R[I2S_RxBuffer_R_Index++] = ((int32_t) data[0] << 16 | data[1]) >> 8; 
 161:Src/main.c    ****             break;
 162:Src/main.c    ****         }
 163:Src/main.c    ****         last_channel = channel;
 164:Src/main.c    ****       }
 165:Src/main.c    ****     }
 166:Src/main.c    ****     count++;
 167:Src/main.c    ****   }
 168:Src/main.c    **** 
 169:Src/main.c    ****   count = 0;
 170:Src/main.c    ****   uint32_t limit = (I2S_RxBuffer_L_Index > I2S_RxBuffer_R_Index) ? I2S_RxBuffer_R_Index : I2S_RxBuf
 171:Src/main.c    ****   while(count < limit) {
 172:Src/main.c    ****     SEGGER_RTT_printf(0, "%d, %d, %d\r\n", count, I2S_RxBuffer_L[count], I2S_RxBuffer_R[count]);
 173:Src/main.c    ****     HAL_Delay(1);
 174:Src/main.c    ****     count++;
 175:Src/main.c    ****   }
 176:Src/main.c    **** 
 177:Src/main.c    ****   /* SD Card Initialization and test. */
 178:Src/main.c    ****   FRESULT fres;
 179:Src/main.c    **** 
 180:Src/main.c    ****   BSP_SD_Init();
 181:Src/main.c    ****   HAL_Delay(1000);
 182:Src/main.c    **** 
 183:Src/main.c    ****   HAL_SD_CardStateTypeDef sd_status = HAL_SD_GetCardState(&hsd2);
 184:Src/main.c    ****   SEGGER_RTT_printf(0, "Status: %d\n", sd_status );
 185:Src/main.c    **** 
 186:Src/main.c    ****   /* USER CODE END 2 */
 187:Src/main.c    **** 
 188:Src/main.c    ****   /* Infinite loop */
 189:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 190:Src/main.c    ****   /* USER CODE END WHILE */
 191:Src/main.c    **** 
 192:Src/main.c    ****   /* USER CODE BEGIN 3 */
 193:Src/main.c    ****   fres = f_mount(&FatFs, "/", 1); //1=mount now
 194:Src/main.c    ****   if (fres != FR_OK) {
 195:Src/main.c    ****     myprintf("f_mount error (%i)\r\n", fres);
 196:Src/main.c    ****     while(1);
 197:Src/main.c    ****   }
 198:Src/main.c    **** 
 199:Src/main.c    ****   DWORD free_clusters, free_sectors, total_sectors;
 200:Src/main.c    **** 
 201:Src/main.c    ****   FATFS* getFreeFs;
 202:Src/main.c    **** 
 203:Src/main.c    ****   fres = f_getfree("", &free_clusters, &getFreeFs);
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 5


 204:Src/main.c    ****   if (fres != FR_OK) {
 205:Src/main.c    ****     myprintf("f_getfree error (%i)\r\n", fres);
 206:Src/main.c    ****     while(1);
 207:Src/main.c    ****   }
 208:Src/main.c    **** 
 209:Src/main.c    ****   total_sectors = (getFreeFs->n_fatent - 2) * getFreeFs->csize;
 210:Src/main.c    ****   free_sectors = free_clusters * getFreeFs->csize;
 211:Src/main.c    **** 
 212:Src/main.c    ****   myprintf("SD card stats:\r\n%10lu KiB total drive space.\r\n%10lu KiB available.\r\n", total_sect
 213:Src/main.c    **** 
 214:Src/main.c    ****   if (fres == FR_OK) {
 215:Src/main.c    ****       strcpy(buffer, "/");
 216:Src/main.c    ****       fres = scan_files(buffer);
 217:Src/main.c    ****   }
 218:Src/main.c    **** 
 219:Src/main.c    ****   //Try to open file
 220:Src/main.c    ****   fres = f_open(&fil, "test.txt", FA_READ);
 221:Src/main.c    ****   if (fres != FR_OK) {
 222:Src/main.c    ****     myprintf("f_open error (%i)\r\n", fres);
 223:Src/main.c    ****     while(1);
 224:Src/main.c    ****   }
 225:Src/main.c    ****   myprintf("I was able to open 'test.txt' for reading!\r\n");
 226:Src/main.c    **** 
 227:Src/main.c    ****   BYTE readBuf[30];
 228:Src/main.c    ****   
 229:Src/main.c    ****   //We can either use f_read OR f_gets to get data out of files
 230:Src/main.c    ****   //f_gets is a wrapper on f_read that does some string formatting for us
 231:Src/main.c    ****   TCHAR* rres = f_gets((TCHAR*)readBuf, 30, &fil);
 232:Src/main.c    ****   if(rres != 0) {
 233:Src/main.c    ****     myprintf("Read string from 'test.txt' contents: ");
 234:Src/main.c    ****     SEGGER_RTT_WriteString(0, readBuf);
 235:Src/main.c    ****     SEGGER_RTT_WriteString(0, "\r\n");
 236:Src/main.c    **** 
 237:Src/main.c    ****   } else {
 238:Src/main.c    ****     myprintf("f_gets error (%i)\r\n", fres);
 239:Src/main.c    ****   }
 240:Src/main.c    ****   
 241:Src/main.c    ****   //Close file, don't forget this!
 242:Src/main.c    ****   f_close(&fil);
 243:Src/main.c    **** 
 244:Src/main.c    ****   fres = f_open(&fil, "write.txt", FA_WRITE | FA_OPEN_ALWAYS | FA_CREATE_ALWAYS);
 245:Src/main.c    ****   if(fres == FR_OK) {
 246:Src/main.c    ****     myprintf("I was able to open 'write.txt' for writing\r\n");
 247:Src/main.c    ****   } else {
 248:Src/main.c    ****     myprintf("f_open error (%i)\r\n", fres);
 249:Src/main.c    ****   }
 250:Src/main.c    **** 
 251:Src/main.c    ****   strncpy((char*)readBuf, "hello from mixr!", 19);
 252:Src/main.c    ****   UINT bytesWrote; 
 253:Src/main.c    ****   fres = f_write(&fil, readBuf, 19, &bytesWrote);
 254:Src/main.c    ****   if(fres == FR_OK) {
 255:Src/main.c    ****     myprintf("Wrote %i bytes to 'write.txt'!\r\n", bytesWrote);
 256:Src/main.c    ****   } else {
 257:Src/main.c    ****     myprintf("f_write error (%i)\r\n");
 258:Src/main.c    ****   }
 259:Src/main.c    **** 
 260:Src/main.c    ****   //Close file, don't forget this!
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 6


 261:Src/main.c    ****   f_close(&fil);
 262:Src/main.c    **** 
 263:Src/main.c    ****   //De-mount drive
 264:Src/main.c    ****   f_mount(NULL, "", 0);
 265:Src/main.c    ****   
 266:Src/main.c    ****   while (1)
 267:Src/main.c    ****   {
 268:Src/main.c    ****     /* USER CODE END WHILE */
 269:Src/main.c    ****     HAL_GPIO_TogglePin(DEBUG_LED_0_GPIO_Port, DEBUG_LED_0_Pin);
 270:Src/main.c    ****     HAL_Delay(500);
 271:Src/main.c    ****     /* USER CODE BEGIN 3 */
 272:Src/main.c    ****   }
 273:Src/main.c    **** 
 274:Src/main.c    ****   /* USER CODE END 3 */
 275:Src/main.c    **** }
 276:Src/main.c    **** 
 277:Src/main.c    **** FRESULT scan_files (
 278:Src/main.c    ****     char* path        /* Start node to be scanned (***also used as work area***) */
 279:Src/main.c    **** )
 280:Src/main.c    **** {
 281:Src/main.c    ****     FRESULT res;
 282:Src/main.c    ****     DIR dir;
 283:Src/main.c    ****     UINT i;
 284:Src/main.c    ****     static FILINFO fno;
 285:Src/main.c    **** 
 286:Src/main.c    **** 
 287:Src/main.c    ****     res = f_opendir(&dir, path);                       /* Open the directory */
 288:Src/main.c    ****     if (res == FR_OK) {
 289:Src/main.c    ****         for (;;) {
 290:Src/main.c    ****             res = f_readdir(&dir, &fno);                   /* Read a directory item */
 291:Src/main.c    ****             if (res != FR_OK || fno.fname[0] == 0) break;  /* Break on error or end of dir */
 292:Src/main.c    ****             // if (fno.fattrib & AM_DIR) {                    /* It is a directory */
 293:Src/main.c    ****             //     i = strlen(path);
 294:Src/main.c    ****             //     sprintf(&path[i], "/%s", fno.fname);
 295:Src/main.c    ****             //     myprintf("%s\n", fno.fname);
 296:Src/main.c    ****             //     res = scan_files(path);                    /* Enter the directory */
 297:Src/main.c    ****             //     if (res != FR_OK) break;
 298:Src/main.c    ****             //     path[i] = 0;
 299:Src/main.c    ****             // } else {                                       /* It is a file. */
 300:Src/main.c    ****             SEGGER_RTT_WriteString(0, fno.fname);
 301:Src/main.c    ****             SEGGER_RTT_WriteString(0, "\r\n");
 302:Src/main.c    ****             //}
 303:Src/main.c    ****         }
 304:Src/main.c    ****         f_closedir(&dir);
 305:Src/main.c    ****     }
 306:Src/main.c    **** 
 307:Src/main.c    ****     return res;
 308:Src/main.c    **** }
 309:Src/main.c    **** 
 310:Src/main.c    **** /**
 311:Src/main.c    ****   * @brief System Clock Configuration
 312:Src/main.c    ****   * @retval None
 313:Src/main.c    ****   */
 314:Src/main.c    **** void SystemClock_Config(void)
 315:Src/main.c    **** {
 316:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 317:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 7


 318:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 319:Src/main.c    **** 
 320:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 321:Src/main.c    ****   */
 322:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 323:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 324:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 325:Src/main.c    ****   */
 326:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 327:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 328:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 329:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 330:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 331:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 192;
 332:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 333:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 334:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 335:Src/main.c    ****   {
 336:Src/main.c    ****     Error_Handler();
 337:Src/main.c    ****   }
 338:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 339:Src/main.c    ****   */
 340:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 341:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 342:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 343:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 344:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 345:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV8;
 346:Src/main.c    **** 
 347:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 348:Src/main.c    ****   {
 349:Src/main.c    ****     Error_Handler();
 350:Src/main.c    ****   }
 351:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_USART2
 352:Src/main.c    ****                               |RCC_PERIPHCLK_SDMMC2|RCC_PERIPHCLK_I2S
 353:Src/main.c    ****                               |RCC_PERIPHCLK_CLK48;
 354:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SN = 192;
 355:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SP = RCC_PLLP_DIV2;
 356:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 357:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 358:Src/main.c    ****   PeriphClkInitStruct.PLLI2SDivQ = 1;
 359:Src/main.c    ****   PeriphClkInitStruct.I2sClockSelection = RCC_I2SCLKSOURCE_PLLI2S;
 360:Src/main.c    ****   PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 361:Src/main.c    ****   PeriphClkInitStruct.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 362:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 363:Src/main.c    ****   PeriphClkInitStruct.Sdmmc2ClockSelection = RCC_SDMMC2CLKSOURCE_SYSCLK;
 364:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 365:Src/main.c    ****   {
 366:Src/main.c    ****     Error_Handler();
 367:Src/main.c    ****   }
 368:Src/main.c    **** }
 369:Src/main.c    **** 
 370:Src/main.c    **** /**
 371:Src/main.c    ****   * @brief I2S1 Initialization Function
 372:Src/main.c    ****   * @param None
 373:Src/main.c    ****   * @retval None
 374:Src/main.c    ****   */
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 8


 375:Src/main.c    **** static void MX_I2S1_Init(void)
 376:Src/main.c    **** {
 377:Src/main.c    **** 
 378:Src/main.c    ****   /* USER CODE BEGIN I2S1_Init 0 */
 379:Src/main.c    **** 
 380:Src/main.c    ****   /* USER CODE END I2S1_Init 0 */
 381:Src/main.c    **** 
 382:Src/main.c    ****   /* USER CODE BEGIN I2S1_Init 1 */
 383:Src/main.c    **** 
 384:Src/main.c    ****   /* USER CODE END I2S1_Init 1 */
 385:Src/main.c    ****   hi2s1.Instance = SPI1;
 386:Src/main.c    ****   hi2s1.Init.Mode = I2S_MODE_MASTER_RX;
 387:Src/main.c    ****   hi2s1.Init.Standard = I2S_STANDARD_PHILIPS;
 388:Src/main.c    ****   hi2s1.Init.DataFormat = I2S_DATAFORMAT_24B;
 389:Src/main.c    ****   hi2s1.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 390:Src/main.c    ****   hi2s1.Init.AudioFreq = I2S_AUDIOFREQ_44K;
 391:Src/main.c    ****   hi2s1.Init.CPOL = I2S_CPOL_LOW;
 392:Src/main.c    ****   hi2s1.Init.ClockSource = I2S_CLOCK_PLL;
 393:Src/main.c    ****   if (HAL_I2S_Init(&hi2s1) != HAL_OK)
 394:Src/main.c    ****   {
 395:Src/main.c    ****     Error_Handler();
 396:Src/main.c    ****   }
 397:Src/main.c    ****   /* USER CODE BEGIN I2S1_Init 2 */
 398:Src/main.c    **** 
 399:Src/main.c    ****   /* USER CODE END I2S1_Init 2 */
 400:Src/main.c    **** 
 401:Src/main.c    **** }
 402:Src/main.c    **** 
 403:Src/main.c    **** /**
 404:Src/main.c    ****   * @brief QUADSPI Initialization Function
 405:Src/main.c    ****   * @param None
 406:Src/main.c    ****   * @retval None
 407:Src/main.c    ****   */
 408:Src/main.c    **** static void MX_QUADSPI_Init(void)
 409:Src/main.c    **** {
 410:Src/main.c    **** 
 411:Src/main.c    ****   /* USER CODE BEGIN QUADSPI_Init 0 */
 412:Src/main.c    **** 
 413:Src/main.c    ****   /* USER CODE END QUADSPI_Init 0 */
 414:Src/main.c    **** 
 415:Src/main.c    ****   /* USER CODE BEGIN QUADSPI_Init 1 */
 416:Src/main.c    **** 
 417:Src/main.c    ****   /* USER CODE END QUADSPI_Init 1 */
 418:Src/main.c    ****   /* QUADSPI parameter configuration*/
 419:Src/main.c    ****   hqspi.Instance = QUADSPI;
 420:Src/main.c    ****   hqspi.Init.ClockPrescaler = 255;
 421:Src/main.c    ****   hqspi.Init.FifoThreshold = 1;
 422:Src/main.c    ****   hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 423:Src/main.c    ****   hqspi.Init.FlashSize = 1;
 424:Src/main.c    ****   hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 425:Src/main.c    ****   hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 426:Src/main.c    ****   hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 427:Src/main.c    ****   hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 428:Src/main.c    ****   if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 429:Src/main.c    ****   {
 430:Src/main.c    ****     Error_Handler();
 431:Src/main.c    ****   }
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 9


 432:Src/main.c    ****   /* USER CODE BEGIN QUADSPI_Init 2 */
 433:Src/main.c    **** 
 434:Src/main.c    ****   /* USER CODE END QUADSPI_Init 2 */
 435:Src/main.c    **** 
 436:Src/main.c    **** }
 437:Src/main.c    **** 
 438:Src/main.c    **** /**
 439:Src/main.c    ****   * @brief SDMMC2 Initialization Function
 440:Src/main.c    ****   * @param None
 441:Src/main.c    ****   * @retval None
 442:Src/main.c    ****   */
 443:Src/main.c    **** static void MX_SDMMC2_SD_Init(void)
 444:Src/main.c    **** {
  27              		.loc 1 444 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 445:Src/main.c    **** 
 446:Src/main.c    ****   /* USER CODE BEGIN SDMMC2_Init 0 */
 447:Src/main.c    **** 
 448:Src/main.c    ****   /* USER CODE END SDMMC2_Init 0 */
 449:Src/main.c    **** 
 450:Src/main.c    ****   /* USER CODE BEGIN SDMMC2_Init 1 */
 451:Src/main.c    **** 
 452:Src/main.c    ****   /* USER CODE END SDMMC2_Init 1 */
 453:Src/main.c    ****   hsd2.Instance = SDMMC2;
  32              		.loc 1 453 3 view .LVU1
  33              		.loc 1 453 17 is_stmt 0 view .LVU2
  34 0000 054B     		ldr	r3, .L2
  35 0002 064A     		ldr	r2, .L2+4
  36 0004 1A60     		str	r2, [r3]
 454:Src/main.c    ****   hsd2.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
  37              		.loc 1 454 3 is_stmt 1 view .LVU3
  38              		.loc 1 454 23 is_stmt 0 view .LVU4
  39 0006 0022     		movs	r2, #0
  40 0008 5A60     		str	r2, [r3, #4]
 455:Src/main.c    ****   hsd2.Init.ClockBypass = SDMMC_CLOCK_BYPASS_DISABLE;
  41              		.loc 1 455 3 is_stmt 1 view .LVU5
  42              		.loc 1 455 25 is_stmt 0 view .LVU6
  43 000a 9A60     		str	r2, [r3, #8]
 456:Src/main.c    ****   hsd2.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
  44              		.loc 1 456 3 is_stmt 1 view .LVU7
  45              		.loc 1 456 28 is_stmt 0 view .LVU8
  46 000c DA60     		str	r2, [r3, #12]
 457:Src/main.c    ****   hsd2.Init.BusWide = SDMMC_BUS_WIDE_1B;
  47              		.loc 1 457 3 is_stmt 1 view .LVU9
  48              		.loc 1 457 21 is_stmt 0 view .LVU10
  49 000e 1A61     		str	r2, [r3, #16]
 458:Src/main.c    ****   hsd2.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
  50              		.loc 1 458 3 is_stmt 1 view .LVU11
  51              		.loc 1 458 33 is_stmt 0 view .LVU12
  52 0010 5A61     		str	r2, [r3, #20]
 459:Src/main.c    ****   hsd2.Init.ClockDiv = 0;
  53              		.loc 1 459 3 is_stmt 1 view .LVU13
  54              		.loc 1 459 22 is_stmt 0 view .LVU14
  55 0012 9A61     		str	r2, [r3, #24]
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 10


 460:Src/main.c    ****   /* USER CODE BEGIN SDMMC2_Init 2 */
 461:Src/main.c    **** 
 462:Src/main.c    ****   /* USER CODE END SDMMC2_Init 2 */
 463:Src/main.c    **** 
 464:Src/main.c    **** }
  56              		.loc 1 464 1 view .LVU15
  57 0014 7047     		bx	lr
  58              	.L3:
  59 0016 00BF     		.align	2
  60              	.L2:
  61 0018 00000000 		.word	hsd2
  62 001c 001C0140 		.word	1073814528
  63              		.cfi_endproc
  64              	.LFE149:
  66              		.section	.text.MX_GPIO_Init,"ax",%progbits
  67              		.align	1
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu fpv5-d16
  73              	MX_GPIO_Init:
  74              	.LFB154:
 465:Src/main.c    **** 
 466:Src/main.c    **** /**
 467:Src/main.c    ****   * @brief SPI4 Initialization Function
 468:Src/main.c    ****   * @param None
 469:Src/main.c    ****   * @retval None
 470:Src/main.c    ****   */
 471:Src/main.c    **** static void MX_SPI4_Init(void)
 472:Src/main.c    **** {
 473:Src/main.c    **** 
 474:Src/main.c    ****   /* USER CODE BEGIN SPI4_Init 0 */
 475:Src/main.c    **** 
 476:Src/main.c    ****   /* USER CODE END SPI4_Init 0 */
 477:Src/main.c    **** 
 478:Src/main.c    ****   /* USER CODE BEGIN SPI4_Init 1 */
 479:Src/main.c    **** 
 480:Src/main.c    ****   /* USER CODE END SPI4_Init 1 */
 481:Src/main.c    ****   /* SPI4 parameter configuration*/
 482:Src/main.c    ****   hspi4.Instance = SPI4;
 483:Src/main.c    ****   hspi4.Init.Mode = SPI_MODE_MASTER;
 484:Src/main.c    ****   hspi4.Init.Direction = SPI_DIRECTION_2LINES;
 485:Src/main.c    ****   hspi4.Init.DataSize = SPI_DATASIZE_4BIT;
 486:Src/main.c    ****   hspi4.Init.CLKPolarity = SPI_POLARITY_LOW;
 487:Src/main.c    ****   hspi4.Init.CLKPhase = SPI_PHASE_1EDGE;
 488:Src/main.c    ****   hspi4.Init.NSS = SPI_NSS_HARD_OUTPUT;
 489:Src/main.c    ****   hspi4.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 490:Src/main.c    ****   hspi4.Init.FirstBit = SPI_FIRSTBIT_MSB;
 491:Src/main.c    ****   hspi4.Init.TIMode = SPI_TIMODE_DISABLE;
 492:Src/main.c    ****   hspi4.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 493:Src/main.c    ****   hspi4.Init.CRCPolynomial = 7;
 494:Src/main.c    ****   hspi4.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 495:Src/main.c    ****   hspi4.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 496:Src/main.c    ****   if (HAL_SPI_Init(&hspi4) != HAL_OK)
 497:Src/main.c    ****   {
 498:Src/main.c    ****     Error_Handler();
 499:Src/main.c    ****   }
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 11


 500:Src/main.c    ****   /* USER CODE BEGIN SPI4_Init 2 */
 501:Src/main.c    **** 
 502:Src/main.c    ****   /* USER CODE END SPI4_Init 2 */
 503:Src/main.c    **** 
 504:Src/main.c    **** }
 505:Src/main.c    **** 
 506:Src/main.c    **** /**
 507:Src/main.c    ****   * @brief USART1 Initialization Function
 508:Src/main.c    ****   * @param None
 509:Src/main.c    ****   * @retval None
 510:Src/main.c    ****   */
 511:Src/main.c    **** static void MX_USART1_UART_Init(void)
 512:Src/main.c    **** {
 513:Src/main.c    **** 
 514:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 515:Src/main.c    **** 
 516:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 517:Src/main.c    **** 
 518:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 519:Src/main.c    **** 
 520:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 521:Src/main.c    ****   huart1.Instance = USART1;
 522:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 523:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 524:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 525:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 526:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 527:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 528:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 529:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 530:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 531:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 532:Src/main.c    ****   {
 533:Src/main.c    ****     Error_Handler();
 534:Src/main.c    ****   }
 535:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 536:Src/main.c    **** 
 537:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 538:Src/main.c    **** 
 539:Src/main.c    **** }
 540:Src/main.c    **** 
 541:Src/main.c    **** /**
 542:Src/main.c    ****   * @brief USART2 Initialization Function
 543:Src/main.c    ****   * @param None
 544:Src/main.c    ****   * @retval None
 545:Src/main.c    ****   */
 546:Src/main.c    **** static void MX_USART2_UART_Init(void)
 547:Src/main.c    **** {
 548:Src/main.c    **** 
 549:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 550:Src/main.c    **** 
 551:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 552:Src/main.c    **** 
 553:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 554:Src/main.c    **** 
 555:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 556:Src/main.c    ****   huart2.Instance = USART2;
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 12


 557:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 558:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 559:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 560:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 561:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 562:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 563:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 564:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 565:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 566:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 567:Src/main.c    ****   {
 568:Src/main.c    ****     Error_Handler();
 569:Src/main.c    ****   }
 570:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 571:Src/main.c    **** 
 572:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 573:Src/main.c    **** 
 574:Src/main.c    **** }
 575:Src/main.c    **** 
 576:Src/main.c    **** /**
 577:Src/main.c    ****   * @brief USB_OTG_FS Initialization Function
 578:Src/main.c    ****   * @param None
 579:Src/main.c    ****   * @retval None
 580:Src/main.c    ****   */
 581:Src/main.c    **** static void MX_USB_OTG_FS_PCD_Init(void)
 582:Src/main.c    **** {
 583:Src/main.c    **** 
 584:Src/main.c    ****   /* USER CODE BEGIN USB_OTG_FS_Init 0 */
 585:Src/main.c    **** 
 586:Src/main.c    ****   /* USER CODE END USB_OTG_FS_Init 0 */
 587:Src/main.c    **** 
 588:Src/main.c    ****   /* USER CODE BEGIN USB_OTG_FS_Init 1 */
 589:Src/main.c    **** 
 590:Src/main.c    ****   /* USER CODE END USB_OTG_FS_Init 1 */
 591:Src/main.c    ****   hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 592:Src/main.c    ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 593:Src/main.c    ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 594:Src/main.c    ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 595:Src/main.c    ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 596:Src/main.c    ****   hpcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 597:Src/main.c    ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 598:Src/main.c    ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 599:Src/main.c    ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
 600:Src/main.c    ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 601:Src/main.c    ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 602:Src/main.c    ****   {
 603:Src/main.c    ****     Error_Handler();
 604:Src/main.c    ****   }
 605:Src/main.c    ****   /* USER CODE BEGIN USB_OTG_FS_Init 2 */
 606:Src/main.c    **** 
 607:Src/main.c    ****   /* USER CODE END USB_OTG_FS_Init 2 */
 608:Src/main.c    **** 
 609:Src/main.c    **** }
 610:Src/main.c    **** 
 611:Src/main.c    **** /**
 612:Src/main.c    ****   * @brief GPIO Initialization Function
 613:Src/main.c    ****   * @param None
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 13


 614:Src/main.c    ****   * @retval None
 615:Src/main.c    ****   */
 616:Src/main.c    **** static void MX_GPIO_Init(void)
 617:Src/main.c    **** {
  75              		.loc 1 617 1 is_stmt 1 view -0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 56
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  80              	.LCFI0:
  81              		.cfi_def_cfa_offset 20
  82              		.cfi_offset 4, -20
  83              		.cfi_offset 5, -16
  84              		.cfi_offset 6, -12
  85              		.cfi_offset 7, -8
  86              		.cfi_offset 14, -4
  87 0002 8FB0     		sub	sp, sp, #60
  88              	.LCFI1:
  89              		.cfi_def_cfa_offset 80
 618:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  90              		.loc 1 618 3 view .LVU17
  91              		.loc 1 618 20 is_stmt 0 view .LVU18
  92 0004 0024     		movs	r4, #0
  93 0006 0994     		str	r4, [sp, #36]
  94 0008 0A94     		str	r4, [sp, #40]
  95 000a 0B94     		str	r4, [sp, #44]
  96 000c 0C94     		str	r4, [sp, #48]
  97 000e 0D94     		str	r4, [sp, #52]
 619:Src/main.c    **** 
 620:Src/main.c    ****   /* GPIO Ports Clock Enable */
 621:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  98              		.loc 1 621 3 is_stmt 1 view .LVU19
  99              	.LBB36:
 100              		.loc 1 621 3 view .LVU20
 101              		.loc 1 621 3 view .LVU21
 102 0010 3C4B     		ldr	r3, .L6
 103 0012 1A6B     		ldr	r2, [r3, #48]
 104 0014 42F01002 		orr	r2, r2, #16
 105 0018 1A63     		str	r2, [r3, #48]
 106              		.loc 1 621 3 view .LVU22
 107 001a 1A6B     		ldr	r2, [r3, #48]
 108 001c 02F01002 		and	r2, r2, #16
 109 0020 0192     		str	r2, [sp, #4]
 110              		.loc 1 621 3 view .LVU23
 111 0022 019A     		ldr	r2, [sp, #4]
 112              	.LBE36:
 622:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 113              		.loc 1 622 3 view .LVU24
 114              	.LBB37:
 115              		.loc 1 622 3 view .LVU25
 116              		.loc 1 622 3 view .LVU26
 117 0024 1A6B     		ldr	r2, [r3, #48]
 118 0026 42F00402 		orr	r2, r2, #4
 119 002a 1A63     		str	r2, [r3, #48]
 120              		.loc 1 622 3 view .LVU27
 121 002c 1A6B     		ldr	r2, [r3, #48]
 122 002e 02F00402 		and	r2, r2, #4
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 14


 123 0032 0292     		str	r2, [sp, #8]
 124              		.loc 1 622 3 view .LVU28
 125 0034 029A     		ldr	r2, [sp, #8]
 126              	.LBE37:
 623:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 127              		.loc 1 623 3 view .LVU29
 128              	.LBB38:
 129              		.loc 1 623 3 view .LVU30
 130              		.loc 1 623 3 view .LVU31
 131 0036 1A6B     		ldr	r2, [r3, #48]
 132 0038 42F02002 		orr	r2, r2, #32
 133 003c 1A63     		str	r2, [r3, #48]
 134              		.loc 1 623 3 view .LVU32
 135 003e 1A6B     		ldr	r2, [r3, #48]
 136 0040 02F02002 		and	r2, r2, #32
 137 0044 0392     		str	r2, [sp, #12]
 138              		.loc 1 623 3 view .LVU33
 139 0046 039A     		ldr	r2, [sp, #12]
 140              	.LBE38:
 624:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 141              		.loc 1 624 3 view .LVU34
 142              	.LBB39:
 143              		.loc 1 624 3 view .LVU35
 144              		.loc 1 624 3 view .LVU36
 145 0048 1A6B     		ldr	r2, [r3, #48]
 146 004a 42F08002 		orr	r2, r2, #128
 147 004e 1A63     		str	r2, [r3, #48]
 148              		.loc 1 624 3 view .LVU37
 149 0050 1A6B     		ldr	r2, [r3, #48]
 150 0052 02F08002 		and	r2, r2, #128
 151 0056 0492     		str	r2, [sp, #16]
 152              		.loc 1 624 3 view .LVU38
 153 0058 049A     		ldr	r2, [sp, #16]
 154              	.LBE39:
 625:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 155              		.loc 1 625 3 view .LVU39
 156              	.LBB40:
 157              		.loc 1 625 3 view .LVU40
 158              		.loc 1 625 3 view .LVU41
 159 005a 1A6B     		ldr	r2, [r3, #48]
 160 005c 42F00102 		orr	r2, r2, #1
 161 0060 1A63     		str	r2, [r3, #48]
 162              		.loc 1 625 3 view .LVU42
 163 0062 1A6B     		ldr	r2, [r3, #48]
 164 0064 02F00102 		and	r2, r2, #1
 165 0068 0592     		str	r2, [sp, #20]
 166              		.loc 1 625 3 view .LVU43
 167 006a 059A     		ldr	r2, [sp, #20]
 168              	.LBE40:
 626:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 169              		.loc 1 626 3 view .LVU44
 170              	.LBB41:
 171              		.loc 1 626 3 view .LVU45
 172              		.loc 1 626 3 view .LVU46
 173 006c 1A6B     		ldr	r2, [r3, #48]
 174 006e 42F00202 		orr	r2, r2, #2
 175 0072 1A63     		str	r2, [r3, #48]
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 15


 176              		.loc 1 626 3 view .LVU47
 177 0074 1A6B     		ldr	r2, [r3, #48]
 178 0076 02F00202 		and	r2, r2, #2
 179 007a 0692     		str	r2, [sp, #24]
 180              		.loc 1 626 3 view .LVU48
 181 007c 069A     		ldr	r2, [sp, #24]
 182              	.LBE41:
 627:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 183              		.loc 1 627 3 view .LVU49
 184              	.LBB42:
 185              		.loc 1 627 3 view .LVU50
 186              		.loc 1 627 3 view .LVU51
 187 007e 1A6B     		ldr	r2, [r3, #48]
 188 0080 42F00802 		orr	r2, r2, #8
 189 0084 1A63     		str	r2, [r3, #48]
 190              		.loc 1 627 3 view .LVU52
 191 0086 1A6B     		ldr	r2, [r3, #48]
 192 0088 02F00802 		and	r2, r2, #8
 193 008c 0792     		str	r2, [sp, #28]
 194              		.loc 1 627 3 view .LVU53
 195 008e 079A     		ldr	r2, [sp, #28]
 196              	.LBE42:
 628:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 197              		.loc 1 628 3 view .LVU54
 198              	.LBB43:
 199              		.loc 1 628 3 view .LVU55
 200              		.loc 1 628 3 view .LVU56
 201 0090 1A6B     		ldr	r2, [r3, #48]
 202 0092 42F04002 		orr	r2, r2, #64
 203 0096 1A63     		str	r2, [r3, #48]
 204              		.loc 1 628 3 view .LVU57
 205 0098 1B6B     		ldr	r3, [r3, #48]
 206 009a 03F04003 		and	r3, r3, #64
 207 009e 0893     		str	r3, [sp, #32]
 208              		.loc 1 628 3 view .LVU58
 209 00a0 089B     		ldr	r3, [sp, #32]
 210              	.LBE43:
 629:Src/main.c    **** 
 630:Src/main.c    ****   /*Configure GPIO pin Output Level */
 631:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, DEBUG_LED_0_Pin|LED_1_Pin|LED_2_Pin|LED_3_Pin 
 211              		.loc 1 631 3 view .LVU59
 212 00a2 194F     		ldr	r7, .L6+4
 213 00a4 2246     		mov	r2, r4
 214 00a6 2F21     		movs	r1, #47
 215 00a8 3846     		mov	r0, r7
 216 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 217              	.LVL0:
 632:Src/main.c    ****                           |FLASH_NRESET_Pin, GPIO_PIN_RESET);
 633:Src/main.c    **** 
 634:Src/main.c    ****   /*Configure GPIO pin Output Level */
 635:Src/main.c    ****   HAL_GPIO_WritePin(ADC_nRESET_GPIO_Port, ADC_nRESET_Pin, GPIO_PIN_SET);
 218              		.loc 1 635 3 view .LVU60
 219 00ae 174E     		ldr	r6, .L6+8
 220 00b0 0122     		movs	r2, #1
 221 00b2 1146     		mov	r1, r2
 222 00b4 3046     		mov	r0, r6
 223 00b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 16


 224              	.LVL1:
 636:Src/main.c    **** 
 637:Src/main.c    ****   /*Configure GPIO pins : DEBUG_LED_0_Pin LED_1_Pin LED_2_Pin LED_3_Pin 
 638:Src/main.c    ****                            FLASH_NRESET_Pin */
 639:Src/main.c    ****   GPIO_InitStruct.Pin = DEBUG_LED_0_Pin|LED_1_Pin|LED_2_Pin|LED_3_Pin 
 225              		.loc 1 639 3 view .LVU61
 226              		.loc 1 639 23 is_stmt 0 view .LVU62
 227 00ba 2F23     		movs	r3, #47
 228 00bc 0993     		str	r3, [sp, #36]
 640:Src/main.c    ****                           |FLASH_NRESET_Pin;
 641:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 229              		.loc 1 641 3 is_stmt 1 view .LVU63
 230              		.loc 1 641 24 is_stmt 0 view .LVU64
 231 00be 0125     		movs	r5, #1
 232 00c0 0A95     		str	r5, [sp, #40]
 642:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 233              		.loc 1 642 3 is_stmt 1 view .LVU65
 234              		.loc 1 642 24 is_stmt 0 view .LVU66
 235 00c2 0B94     		str	r4, [sp, #44]
 643:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 236              		.loc 1 643 3 is_stmt 1 view .LVU67
 237              		.loc 1 643 25 is_stmt 0 view .LVU68
 238 00c4 0C94     		str	r4, [sp, #48]
 644:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 239              		.loc 1 644 3 is_stmt 1 view .LVU69
 240 00c6 09A9     		add	r1, sp, #36
 241 00c8 3846     		mov	r0, r7
 242 00ca FFF7FEFF 		bl	HAL_GPIO_Init
 243              	.LVL2:
 645:Src/main.c    **** 
 646:Src/main.c    ****   /*Configure GPIO pins : INST0_CLIPPING_Pin INST1_CLIPPING_Pin */
 647:Src/main.c    ****   GPIO_InitStruct.Pin = INST0_CLIPPING_Pin|INST1_CLIPPING_Pin;
 244              		.loc 1 647 3 view .LVU70
 245              		.loc 1 647 23 is_stmt 0 view .LVU71
 246 00ce 0C23     		movs	r3, #12
 247 00d0 0993     		str	r3, [sp, #36]
 648:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 248              		.loc 1 648 3 is_stmt 1 view .LVU72
 249              		.loc 1 648 24 is_stmt 0 view .LVU73
 250 00d2 0A94     		str	r4, [sp, #40]
 649:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 251              		.loc 1 649 3 is_stmt 1 view .LVU74
 252              		.loc 1 649 24 is_stmt 0 view .LVU75
 253 00d4 0B94     		str	r4, [sp, #44]
 650:Src/main.c    ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 254              		.loc 1 650 3 is_stmt 1 view .LVU76
 255 00d6 09A9     		add	r1, sp, #36
 256 00d8 0D48     		ldr	r0, .L6+12
 257 00da FFF7FEFF 		bl	HAL_GPIO_Init
 258              	.LVL3:
 651:Src/main.c    **** 
 652:Src/main.c    ****   /*Configure GPIO pin : ADC_nRESET_Pin */
 653:Src/main.c    ****   GPIO_InitStruct.Pin = ADC_nRESET_Pin;
 259              		.loc 1 653 3 view .LVU77
 260              		.loc 1 653 23 is_stmt 0 view .LVU78
 261 00de 0995     		str	r5, [sp, #36]
 654:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 17


 262              		.loc 1 654 3 is_stmt 1 view .LVU79
 263              		.loc 1 654 24 is_stmt 0 view .LVU80
 264 00e0 0A95     		str	r5, [sp, #40]
 655:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 265              		.loc 1 655 3 is_stmt 1 view .LVU81
 266              		.loc 1 655 24 is_stmt 0 view .LVU82
 267 00e2 0B94     		str	r4, [sp, #44]
 656:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 268              		.loc 1 656 3 is_stmt 1 view .LVU83
 269              		.loc 1 656 25 is_stmt 0 view .LVU84
 270 00e4 0C94     		str	r4, [sp, #48]
 657:Src/main.c    ****   HAL_GPIO_Init(ADC_nRESET_GPIO_Port, &GPIO_InitStruct);
 271              		.loc 1 657 3 is_stmt 1 view .LVU85
 272 00e6 09A9     		add	r1, sp, #36
 273 00e8 3046     		mov	r0, r6
 274 00ea FFF7FEFF 		bl	HAL_GPIO_Init
 275              	.LVL4:
 658:Src/main.c    **** 
 659:Src/main.c    ****   /*Configure GPIO pins : SD_DETECT_Pin ESP32_IO25_STM32_SD_ACCESS_EN_Pin */
 660:Src/main.c    ****   GPIO_InitStruct.Pin = SD_DETECT_Pin|ESP32_IO25_STM32_SD_ACCESS_EN_Pin;
 276              		.loc 1 660 3 view .LVU86
 277              		.loc 1 660 23 is_stmt 0 view .LVU87
 278 00ee 4FF4C043 		mov	r3, #24576
 279 00f2 0993     		str	r3, [sp, #36]
 661:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 280              		.loc 1 661 3 is_stmt 1 view .LVU88
 281              		.loc 1 661 24 is_stmt 0 view .LVU89
 282 00f4 0A94     		str	r4, [sp, #40]
 662:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 283              		.loc 1 662 3 is_stmt 1 view .LVU90
 284              		.loc 1 662 24 is_stmt 0 view .LVU91
 285 00f6 0B94     		str	r4, [sp, #44]
 663:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 286              		.loc 1 663 3 is_stmt 1 view .LVU92
 287 00f8 09A9     		add	r1, sp, #36
 288 00fa 0648     		ldr	r0, .L6+16
 289 00fc FFF7FEFF 		bl	HAL_GPIO_Init
 290              	.LVL5:
 664:Src/main.c    **** 
 665:Src/main.c    **** }
 291              		.loc 1 665 1 is_stmt 0 view .LVU93
 292 0100 0FB0     		add	sp, sp, #60
 293              	.LCFI2:
 294              		.cfi_def_cfa_offset 20
 295              		@ sp needed
 296 0102 F0BD     		pop	{r4, r5, r6, r7, pc}
 297              	.L7:
 298              		.align	2
 299              	.L6:
 300 0104 00380240 		.word	1073887232
 301 0108 00140240 		.word	1073878016
 302 010c 00040240 		.word	1073873920
 303 0110 001C0240 		.word	1073880064
 304 0114 00180240 		.word	1073879040
 305              		.cfi_endproc
 306              	.LFE154:
 308              		.section	.text.MX_I2S1_Init,"ax",%progbits
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 18


 309              		.align	1
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 313              		.fpu fpv5-d16
 315              	MX_I2S1_Init:
 316              	.LFB147:
 376:Src/main.c    **** 
 317              		.loc 1 376 1 is_stmt 1 view -0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321 0000 08B5     		push	{r3, lr}
 322              	.LCFI3:
 323              		.cfi_def_cfa_offset 8
 324              		.cfi_offset 3, -8
 325              		.cfi_offset 14, -4
 385:Src/main.c    ****   hi2s1.Init.Mode = I2S_MODE_MASTER_RX;
 326              		.loc 1 385 3 view .LVU95
 385:Src/main.c    ****   hi2s1.Init.Mode = I2S_MODE_MASTER_RX;
 327              		.loc 1 385 18 is_stmt 0 view .LVU96
 328 0002 0B48     		ldr	r0, .L10
 329 0004 0B4B     		ldr	r3, .L10+4
 330 0006 0360     		str	r3, [r0]
 386:Src/main.c    ****   hi2s1.Init.Standard = I2S_STANDARD_PHILIPS;
 331              		.loc 1 386 3 is_stmt 1 view .LVU97
 386:Src/main.c    ****   hi2s1.Init.Standard = I2S_STANDARD_PHILIPS;
 332              		.loc 1 386 19 is_stmt 0 view .LVU98
 333 0008 4FF44073 		mov	r3, #768
 334 000c 4360     		str	r3, [r0, #4]
 387:Src/main.c    ****   hi2s1.Init.DataFormat = I2S_DATAFORMAT_24B;
 335              		.loc 1 387 3 is_stmt 1 view .LVU99
 387:Src/main.c    ****   hi2s1.Init.DataFormat = I2S_DATAFORMAT_24B;
 336              		.loc 1 387 23 is_stmt 0 view .LVU100
 337 000e 0023     		movs	r3, #0
 338 0010 8360     		str	r3, [r0, #8]
 388:Src/main.c    ****   hi2s1.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 339              		.loc 1 388 3 is_stmt 1 view .LVU101
 388:Src/main.c    ****   hi2s1.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 340              		.loc 1 388 25 is_stmt 0 view .LVU102
 341 0012 0322     		movs	r2, #3
 342 0014 C260     		str	r2, [r0, #12]
 389:Src/main.c    ****   hi2s1.Init.AudioFreq = I2S_AUDIOFREQ_44K;
 343              		.loc 1 389 3 is_stmt 1 view .LVU103
 389:Src/main.c    ****   hi2s1.Init.AudioFreq = I2S_AUDIOFREQ_44K;
 344              		.loc 1 389 25 is_stmt 0 view .LVU104
 345 0016 4FF40072 		mov	r2, #512
 346 001a 0261     		str	r2, [r0, #16]
 390:Src/main.c    ****   hi2s1.Init.CPOL = I2S_CPOL_LOW;
 347              		.loc 1 390 3 is_stmt 1 view .LVU105
 390:Src/main.c    ****   hi2s1.Init.CPOL = I2S_CPOL_LOW;
 348              		.loc 1 390 24 is_stmt 0 view .LVU106
 349 001c 4AF64442 		movw	r2, #44100
 350 0020 4261     		str	r2, [r0, #20]
 391:Src/main.c    ****   hi2s1.Init.ClockSource = I2S_CLOCK_PLL;
 351              		.loc 1 391 3 is_stmt 1 view .LVU107
 391:Src/main.c    ****   hi2s1.Init.ClockSource = I2S_CLOCK_PLL;
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 19


 352              		.loc 1 391 19 is_stmt 0 view .LVU108
 353 0022 8361     		str	r3, [r0, #24]
 392:Src/main.c    ****   if (HAL_I2S_Init(&hi2s1) != HAL_OK)
 354              		.loc 1 392 3 is_stmt 1 view .LVU109
 392:Src/main.c    ****   if (HAL_I2S_Init(&hi2s1) != HAL_OK)
 355              		.loc 1 392 26 is_stmt 0 view .LVU110
 356 0024 0223     		movs	r3, #2
 357 0026 C361     		str	r3, [r0, #28]
 393:Src/main.c    ****   {
 358              		.loc 1 393 3 is_stmt 1 view .LVU111
 393:Src/main.c    ****   {
 359              		.loc 1 393 7 is_stmt 0 view .LVU112
 360 0028 FFF7FEFF 		bl	HAL_I2S_Init
 361              	.LVL6:
 401:Src/main.c    **** 
 362              		.loc 1 401 1 view .LVU113
 363 002c 08BD     		pop	{r3, pc}
 364              	.L11:
 365 002e 00BF     		.align	2
 366              	.L10:
 367 0030 00000000 		.word	hi2s1
 368 0034 00300140 		.word	1073819648
 369              		.cfi_endproc
 370              	.LFE147:
 372              		.section	.text.scan_files,"ax",%progbits
 373              		.align	1
 374              		.global	scan_files
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv5-d16
 380              	scan_files:
 381              	.LVL7:
 382              	.LFB145:
 280:Src/main.c    ****     FRESULT res;
 383              		.loc 1 280 1 is_stmt 1 view -0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 48
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 280:Src/main.c    ****     FRESULT res;
 387              		.loc 1 280 1 is_stmt 0 view .LVU115
 388 0000 10B5     		push	{r4, lr}
 389              	.LCFI4:
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 4, -8
 392              		.cfi_offset 14, -4
 393 0002 8CB0     		sub	sp, sp, #48
 394              	.LCFI5:
 395              		.cfi_def_cfa_offset 56
 281:Src/main.c    ****     DIR dir;
 396              		.loc 1 281 5 is_stmt 1 view .LVU116
 282:Src/main.c    ****     UINT i;
 397              		.loc 1 282 5 view .LVU117
 283:Src/main.c    ****     static FILINFO fno;
 398              		.loc 1 283 5 view .LVU118
 284:Src/main.c    **** 
 399              		.loc 1 284 5 view .LVU119
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 20


 287:Src/main.c    ****     if (res == FR_OK) {
 400              		.loc 1 287 5 view .LVU120
 287:Src/main.c    ****     if (res == FR_OK) {
 401              		.loc 1 287 11 is_stmt 0 view .LVU121
 402 0004 0146     		mov	r1, r0
 403 0006 6846     		mov	r0, sp
 404              	.LVL8:
 287:Src/main.c    ****     if (res == FR_OK) {
 405              		.loc 1 287 11 view .LVU122
 406 0008 FFF7FEFF 		bl	f_opendir
 407              	.LVL9:
 288:Src/main.c    ****         for (;;) {
 408              		.loc 1 288 5 is_stmt 1 view .LVU123
 288:Src/main.c    ****         for (;;) {
 409              		.loc 1 288 8 is_stmt 0 view .LVU124
 410 000c 0446     		mov	r4, r0
 411 000e 98B9     		cbnz	r0, .L13
 412              	.LVL10:
 413              	.L15:
 289:Src/main.c    ****             res = f_readdir(&dir, &fno);                   /* Read a directory item */
 414              		.loc 1 289 9 is_stmt 1 view .LVU125
 290:Src/main.c    ****             if (res != FR_OK || fno.fname[0] == 0) break;  /* Break on error or end of dir */
 415              		.loc 1 290 13 view .LVU126
 290:Src/main.c    ****             if (res != FR_OK || fno.fname[0] == 0) break;  /* Break on error or end of dir */
 416              		.loc 1 290 19 is_stmt 0 view .LVU127
 417 0010 0B49     		ldr	r1, .L17
 418 0012 6846     		mov	r0, sp
 419 0014 FFF7FEFF 		bl	f_readdir
 420              	.LVL11:
 291:Src/main.c    ****             // if (fno.fattrib & AM_DIR) {                    /* It is a directory */
 421              		.loc 1 291 13 is_stmt 1 view .LVU128
 291:Src/main.c    ****             // if (fno.fattrib & AM_DIR) {                    /* It is a directory */
 422              		.loc 1 291 16 is_stmt 0 view .LVU129
 423 0018 0446     		mov	r4, r0
 424 001a 50B9     		cbnz	r0, .L14
 291:Src/main.c    ****             // if (fno.fattrib & AM_DIR) {                    /* It is a directory */
 425              		.loc 1 291 42 discriminator 1 view .LVU130
 426 001c 084B     		ldr	r3, .L17
 427 001e 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 291:Src/main.c    ****             // if (fno.fattrib & AM_DIR) {                    /* It is a directory */
 428              		.loc 1 291 30 discriminator 1 view .LVU131
 429 0020 3BB1     		cbz	r3, .L14
 300:Src/main.c    ****             SEGGER_RTT_WriteString(0, "\r\n");
 430              		.loc 1 300 13 is_stmt 1 view .LVU132
 431 0022 0849     		ldr	r1, .L17+4
 432 0024 FFF7FEFF 		bl	SEGGER_RTT_WriteString
 433              	.LVL12:
 301:Src/main.c    ****             //}
 434              		.loc 1 301 13 view .LVU133
 435 0028 0749     		ldr	r1, .L17+8
 436 002a 0020     		movs	r0, #0
 437 002c FFF7FEFF 		bl	SEGGER_RTT_WriteString
 438              	.LVL13:
 290:Src/main.c    ****             if (res != FR_OK || fno.fname[0] == 0) break;  /* Break on error or end of dir */
 439              		.loc 1 290 17 is_stmt 0 view .LVU134
 440 0030 EEE7     		b	.L15
 441              	.LVL14:
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 21


 442              	.L14:
 304:Src/main.c    ****     }
 443              		.loc 1 304 9 is_stmt 1 view .LVU135
 444 0032 6846     		mov	r0, sp
 445              	.LVL15:
 304:Src/main.c    ****     }
 446              		.loc 1 304 9 is_stmt 0 view .LVU136
 447 0034 FFF7FEFF 		bl	f_closedir
 448              	.LVL16:
 449              	.L13:
 307:Src/main.c    **** }
 450              		.loc 1 307 5 is_stmt 1 view .LVU137
 308:Src/main.c    **** 
 451              		.loc 1 308 1 is_stmt 0 view .LVU138
 452 0038 2046     		mov	r0, r4
 453 003a 0CB0     		add	sp, sp, #48
 454              	.LCFI6:
 455              		.cfi_def_cfa_offset 8
 456              		@ sp needed
 457 003c 10BD     		pop	{r4, pc}
 458              	.LVL17:
 459              	.L18:
 308:Src/main.c    **** 
 460              		.loc 1 308 1 view .LVU139
 461 003e 00BF     		.align	2
 462              	.L17:
 463 0040 00000000 		.word	.LANCHOR0
 464 0044 09000000 		.word	.LANCHOR0+9
 465 0048 00000000 		.word	.LC0
 466              		.cfi_endproc
 467              	.LFE145:
 469              		.section	.text.SystemClock_Config,"ax",%progbits
 470              		.align	1
 471              		.global	SystemClock_Config
 472              		.syntax unified
 473              		.thumb
 474              		.thumb_func
 475              		.fpu fpv5-d16
 477              	SystemClock_Config:
 478              	.LFB146:
 315:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 479              		.loc 1 315 1 is_stmt 1 view -0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 224
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 484              	.LCFI7:
 485              		.cfi_def_cfa_offset 20
 486              		.cfi_offset 4, -20
 487              		.cfi_offset 5, -16
 488              		.cfi_offset 6, -12
 489              		.cfi_offset 7, -8
 490              		.cfi_offset 14, -4
 491 0002 B9B0     		sub	sp, sp, #228
 492              	.LCFI8:
 493              		.cfi_def_cfa_offset 248
 316:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 22


 494              		.loc 1 316 3 view .LVU141
 316:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 495              		.loc 1 316 22 is_stmt 0 view .LVU142
 496 0004 3422     		movs	r2, #52
 497 0006 0021     		movs	r1, #0
 498 0008 2BA8     		add	r0, sp, #172
 499 000a FFF7FEFF 		bl	memset
 500              	.LVL18:
 317:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 501              		.loc 1 317 3 is_stmt 1 view .LVU143
 317:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 502              		.loc 1 317 22 is_stmt 0 view .LVU144
 503 000e 0024     		movs	r4, #0
 504 0010 2694     		str	r4, [sp, #152]
 505 0012 2794     		str	r4, [sp, #156]
 506 0014 2894     		str	r4, [sp, #160]
 507 0016 2994     		str	r4, [sp, #164]
 508 0018 2A94     		str	r4, [sp, #168]
 318:Src/main.c    **** 
 509              		.loc 1 318 3 is_stmt 1 view .LVU145
 318:Src/main.c    **** 
 510              		.loc 1 318 28 is_stmt 0 view .LVU146
 511 001a 9022     		movs	r2, #144
 512 001c 2146     		mov	r1, r4
 513 001e 02A8     		add	r0, sp, #8
 514 0020 FFF7FEFF 		bl	memset
 515              	.LVL19:
 322:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 516              		.loc 1 322 3 is_stmt 1 view .LVU147
 517              	.LBB44:
 322:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 518              		.loc 1 322 3 view .LVU148
 322:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 519              		.loc 1 322 3 view .LVU149
 520 0024 244B     		ldr	r3, .L21
 521 0026 1A6C     		ldr	r2, [r3, #64]
 522 0028 42F08052 		orr	r2, r2, #268435456
 523 002c 1A64     		str	r2, [r3, #64]
 322:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 524              		.loc 1 322 3 view .LVU150
 525 002e 1B6C     		ldr	r3, [r3, #64]
 526 0030 03F08053 		and	r3, r3, #268435456
 527 0034 0093     		str	r3, [sp]
 322:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 528              		.loc 1 322 3 view .LVU151
 529 0036 009B     		ldr	r3, [sp]
 530              	.LBE44:
 323:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 531              		.loc 1 323 3 view .LVU152
 532              	.LBB45:
 323:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 533              		.loc 1 323 3 view .LVU153
 323:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 534              		.loc 1 323 3 view .LVU154
 535 0038 204A     		ldr	r2, .L21+4
 536 003a 1368     		ldr	r3, [r2]
 537 003c 23F44043 		bic	r3, r3, #49152
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 23


 538 0040 43F48043 		orr	r3, r3, #16384
 539 0044 1360     		str	r3, [r2]
 323:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 540              		.loc 1 323 3 view .LVU155
 541 0046 1368     		ldr	r3, [r2]
 542 0048 03F44043 		and	r3, r3, #49152
 543 004c 0193     		str	r3, [sp, #4]
 323:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 544              		.loc 1 323 3 view .LVU156
 545 004e 019B     		ldr	r3, [sp, #4]
 546              	.LBE45:
 326:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 547              		.loc 1 326 3 view .LVU157
 326:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 548              		.loc 1 326 36 is_stmt 0 view .LVU158
 549 0050 0126     		movs	r6, #1
 550 0052 2B96     		str	r6, [sp, #172]
 327:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 551              		.loc 1 327 3 is_stmt 1 view .LVU159
 327:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 552              		.loc 1 327 30 is_stmt 0 view .LVU160
 553 0054 4FF48033 		mov	r3, #65536
 554 0058 2C93     		str	r3, [sp, #176]
 328:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 555              		.loc 1 328 3 is_stmt 1 view .LVU161
 328:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 556              		.loc 1 328 34 is_stmt 0 view .LVU162
 557 005a 0225     		movs	r5, #2
 558 005c 3195     		str	r5, [sp, #196]
 329:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 559              		.loc 1 329 3 is_stmt 1 view .LVU163
 329:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 560              		.loc 1 329 35 is_stmt 0 view .LVU164
 561 005e 4FF48003 		mov	r3, #4194304
 562 0062 3293     		str	r3, [sp, #200]
 330:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 192;
 563              		.loc 1 330 3 is_stmt 1 view .LVU165
 330:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 192;
 564              		.loc 1 330 30 is_stmt 0 view .LVU166
 565 0064 1923     		movs	r3, #25
 566 0066 3393     		str	r3, [sp, #204]
 331:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 567              		.loc 1 331 3 is_stmt 1 view .LVU167
 331:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 568              		.loc 1 331 30 is_stmt 0 view .LVU168
 569 0068 C027     		movs	r7, #192
 570 006a 3497     		str	r7, [sp, #208]
 332:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 571              		.loc 1 332 3 is_stmt 1 view .LVU169
 332:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 572              		.loc 1 332 30 is_stmt 0 view .LVU170
 573 006c 0423     		movs	r3, #4
 574 006e 3593     		str	r3, [sp, #212]
 333:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 575              		.loc 1 333 3 is_stmt 1 view .LVU171
 333:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 576              		.loc 1 333 30 is_stmt 0 view .LVU172
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 24


 577 0070 3693     		str	r3, [sp, #216]
 334:Src/main.c    ****   {
 578              		.loc 1 334 3 is_stmt 1 view .LVU173
 334:Src/main.c    ****   {
 579              		.loc 1 334 7 is_stmt 0 view .LVU174
 580 0072 2BA8     		add	r0, sp, #172
 581 0074 FFF7FEFF 		bl	HAL_RCC_OscConfig
 582              	.LVL20:
 340:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 583              		.loc 1 340 3 is_stmt 1 view .LVU175
 340:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 584              		.loc 1 340 31 is_stmt 0 view .LVU176
 585 0078 0F23     		movs	r3, #15
 586 007a 2693     		str	r3, [sp, #152]
 342:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 587              		.loc 1 342 3 is_stmt 1 view .LVU177
 342:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 588              		.loc 1 342 34 is_stmt 0 view .LVU178
 589 007c 2795     		str	r5, [sp, #156]
 343:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 590              		.loc 1 343 3 is_stmt 1 view .LVU179
 343:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 591              		.loc 1 343 35 is_stmt 0 view .LVU180
 592 007e 2894     		str	r4, [sp, #160]
 344:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV8;
 593              		.loc 1 344 3 is_stmt 1 view .LVU181
 344:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV8;
 594              		.loc 1 344 36 is_stmt 0 view .LVU182
 595 0080 4FF4C053 		mov	r3, #6144
 596 0084 2993     		str	r3, [sp, #164]
 345:Src/main.c    **** 
 597              		.loc 1 345 3 is_stmt 1 view .LVU183
 345:Src/main.c    **** 
 598              		.loc 1 345 36 is_stmt 0 view .LVU184
 599 0086 2A93     		str	r3, [sp, #168]
 347:Src/main.c    ****   {
 600              		.loc 1 347 3 is_stmt 1 view .LVU185
 347:Src/main.c    ****   {
 601              		.loc 1 347 7 is_stmt 0 view .LVU186
 602 0088 3146     		mov	r1, r6
 603 008a 26A8     		add	r0, sp, #152
 604 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 605              	.LVL21:
 351:Src/main.c    ****                               |RCC_PERIPHCLK_SDMMC2|RCC_PERIPHCLK_I2S
 606              		.loc 1 351 3 is_stmt 1 view .LVU187
 351:Src/main.c    ****                               |RCC_PERIPHCLK_SDMMC2|RCC_PERIPHCLK_I2S
 607              		.loc 1 351 44 is_stmt 0 view .LVU188
 608 0090 0B4B     		ldr	r3, .L21+8
 609 0092 0293     		str	r3, [sp, #8]
 354:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SP = RCC_PLLP_DIV2;
 610              		.loc 1 354 3 is_stmt 1 view .LVU189
 354:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SP = RCC_PLLP_DIV2;
 611              		.loc 1 354 38 is_stmt 0 view .LVU190
 612 0094 0397     		str	r7, [sp, #12]
 355:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 613              		.loc 1 355 3 is_stmt 1 view .LVU191
 355:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 25


 614              		.loc 1 355 38 is_stmt 0 view .LVU192
 615 0096 0695     		str	r5, [sp, #24]
 356:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 616              		.loc 1 356 3 is_stmt 1 view .LVU193
 356:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 617              		.loc 1 356 38 is_stmt 0 view .LVU194
 618 0098 0495     		str	r5, [sp, #16]
 357:Src/main.c    ****   PeriphClkInitStruct.PLLI2SDivQ = 1;
 619              		.loc 1 357 3 is_stmt 1 view .LVU195
 357:Src/main.c    ****   PeriphClkInitStruct.PLLI2SDivQ = 1;
 620              		.loc 1 357 38 is_stmt 0 view .LVU196
 621 009a 0595     		str	r5, [sp, #20]
 358:Src/main.c    ****   PeriphClkInitStruct.I2sClockSelection = RCC_I2SCLKSOURCE_PLLI2S;
 622              		.loc 1 358 3 is_stmt 1 view .LVU197
 358:Src/main.c    ****   PeriphClkInitStruct.I2sClockSelection = RCC_I2SCLKSOURCE_PLLI2S;
 623              		.loc 1 358 34 is_stmt 0 view .LVU198
 624 009c 0B96     		str	r6, [sp, #44]
 359:Src/main.c    ****   PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 625              		.loc 1 359 3 is_stmt 1 view .LVU199
 359:Src/main.c    ****   PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 626              		.loc 1 359 41 is_stmt 0 view .LVU200
 627 009e 0F94     		str	r4, [sp, #60]
 360:Src/main.c    ****   PeriphClkInitStruct.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 628              		.loc 1 360 3 is_stmt 1 view .LVU201
 360:Src/main.c    ****   PeriphClkInitStruct.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 629              		.loc 1 360 44 is_stmt 0 view .LVU202
 630 00a0 1394     		str	r4, [sp, #76]
 361:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 631              		.loc 1 361 3 is_stmt 1 view .LVU203
 361:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 632              		.loc 1 361 44 is_stmt 0 view .LVU204
 633 00a2 1494     		str	r4, [sp, #80]
 362:Src/main.c    ****   PeriphClkInitStruct.Sdmmc2ClockSelection = RCC_SDMMC2CLKSOURCE_SYSCLK;
 634              		.loc 1 362 3 is_stmt 1 view .LVU205
 362:Src/main.c    ****   PeriphClkInitStruct.Sdmmc2ClockSelection = RCC_SDMMC2CLKSOURCE_SYSCLK;
 635              		.loc 1 362 43 is_stmt 0 view .LVU206
 636 00a4 2194     		str	r4, [sp, #132]
 363:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 637              		.loc 1 363 3 is_stmt 1 view .LVU207
 363:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 638              		.loc 1 363 44 is_stmt 0 view .LVU208
 639 00a6 4FF00053 		mov	r3, #536870912
 640 00aa 2393     		str	r3, [sp, #140]
 364:Src/main.c    ****   {
 641              		.loc 1 364 3 is_stmt 1 view .LVU209
 364:Src/main.c    ****   {
 642              		.loc 1 364 7 is_stmt 0 view .LVU210
 643 00ac 02A8     		add	r0, sp, #8
 644 00ae FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 645              	.LVL22:
 368:Src/main.c    **** 
 646              		.loc 1 368 1 view .LVU211
 647 00b2 39B0     		add	sp, sp, #228
 648              	.LCFI9:
 649              		.cfi_def_cfa_offset 20
 650              		@ sp needed
 651 00b4 F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 26


 652              	.L22:
 653 00b6 00BF     		.align	2
 654              	.L21:
 655 00b8 00380240 		.word	1073887232
 656 00bc 00700040 		.word	1073770496
 657 00c0 C1002004 		.word	69206209
 658              		.cfi_endproc
 659              	.LFE146:
 661              		.section	.text.myprintf,"ax",%progbits
 662              		.align	1
 663              		.global	myprintf
 664              		.syntax unified
 665              		.thumb
 666              		.thumb_func
 667              		.fpu fpv5-d16
 669              	myprintf:
 670              	.LVL23:
 671              	.LFB155:
 666:Src/main.c    **** 
 667:Src/main.c    **** /* USER CODE BEGIN 4 */
 668:Src/main.c    **** void myprintf(const char *fmt, ...) {
 672              		.loc 1 668 37 is_stmt 1 view -0
 673              		.cfi_startproc
 674              		@ args = 4, pretend = 16, frame = 8
 675              		@ frame_needed = 0, uses_anonymous_args = 1
 676              		.loc 1 668 37 is_stmt 0 view .LVU213
 677 0000 0FB4     		push	{r0, r1, r2, r3}
 678              	.LCFI10:
 679              		.cfi_def_cfa_offset 16
 680              		.cfi_offset 0, -16
 681              		.cfi_offset 1, -12
 682              		.cfi_offset 2, -8
 683              		.cfi_offset 3, -4
 684 0002 00B5     		push	{lr}
 685              	.LCFI11:
 686              		.cfi_def_cfa_offset 20
 687              		.cfi_offset 14, -20
 688 0004 83B0     		sub	sp, sp, #12
 689              	.LCFI12:
 690              		.cfi_def_cfa_offset 32
 691 0006 04AB     		add	r3, sp, #16
 692 0008 53F8041B 		ldr	r1, [r3], #4
 669:Src/main.c    ****   va_list args;
 693              		.loc 1 669 3 is_stmt 1 view .LVU214
 670:Src/main.c    ****   va_start(args, fmt);
 694              		.loc 1 670 3 view .LVU215
 695 000c 0193     		str	r3, [sp, #4]
 671:Src/main.c    ****   SEGGER_RTT_printf(0, fmt, &args);
 696              		.loc 1 671 3 view .LVU216
 697 000e 01AA     		add	r2, sp, #4
 698 0010 0020     		movs	r0, #0
 699 0012 FFF7FEFF 		bl	SEGGER_RTT_printf
 700              	.LVL24:
 672:Src/main.c    ****   va_end(args);
 701              		.loc 1 672 3 view .LVU217
 673:Src/main.c    **** }
 702              		.loc 1 673 1 is_stmt 0 view .LVU218
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 27


 703 0016 03B0     		add	sp, sp, #12
 704              	.LCFI13:
 705              		.cfi_def_cfa_offset 20
 706              		@ sp needed
 707 0018 5DF804EB 		ldr	lr, [sp], #4
 708              	.LCFI14:
 709              		.cfi_restore 14
 710              		.cfi_def_cfa_offset 16
 711 001c 04B0     		add	sp, sp, #16
 712              	.LCFI15:
 713              		.cfi_restore 3
 714              		.cfi_restore 2
 715              		.cfi_restore 1
 716              		.cfi_restore 0
 717              		.cfi_def_cfa_offset 0
 718 001e 7047     		bx	lr
 719              		.cfi_endproc
 720              	.LFE155:
 722              		.section	.text.main,"ax",%progbits
 723              		.align	1
 724              		.global	main
 725              		.syntax unified
 726              		.thumb
 727              		.thumb_func
 728              		.fpu fpv5-d16
 730              	main:
 731              	.LFB144:
 100:Src/main.c    ****   /* USER CODE BEGIN 1 */
 732              		.loc 1 100 1 is_stmt 1 view -0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 1176
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736 0000 30B5     		push	{r4, r5, lr}
 737              	.LCFI16:
 738              		.cfi_def_cfa_offset 12
 739              		.cfi_offset 4, -12
 740              		.cfi_offset 5, -8
 741              		.cfi_offset 14, -4
 742 0002 ADF2A44D 		subw	sp, sp, #1188
 743              	.LCFI17:
 744              		.cfi_def_cfa_offset 1200
 103:Src/main.c    ****   //File object
 745              		.loc 1 103 3 view .LVU220
 105:Src/main.c    **** 
 746              		.loc 1 105 3 view .LVU221
 110:Src/main.c    **** 
 747              		.loc 1 110 3 view .LVU222
 748              	.LBB70:
 749              	.LBI70:
 750              		.file 2 "Drivers/CMSIS/Include/core_cm7.h"
   1:Drivers/CMSIS/Include/core_cm7.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm7.h ****  * @file     core_cm7.h
   3:Drivers/CMSIS/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm7.h ****  * @version  V5.0.8
   5:Drivers/CMSIS/Include/core_cm7.h ****  * @date     04. June 2018
   6:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm7.h **** /*
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 28


   8:Drivers/CMSIS/Include/core_cm7.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm7.h ****  *
  10:Drivers/CMSIS/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm7.h ****  *
  12:Drivers/CMSIS/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm7.h ****  *
  16:Drivers/CMSIS/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm7.h ****  *
  18:Drivers/CMSIS/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm7.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm7.h ****  */
  24:Drivers/CMSIS/Include/core_cm7.h **** 
  25:Drivers/CMSIS/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm7.h **** #endif
  30:Drivers/CMSIS/Include/core_cm7.h **** 
  31:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm7.h **** 
  34:Drivers/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm7.h **** 
  36:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm7.h **** #endif
  39:Drivers/CMSIS/Include/core_cm7.h **** 
  40:Drivers/CMSIS/Include/core_cm7.h **** /**
  41:Drivers/CMSIS/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm7.h **** 
  44:Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm7.h **** 
  47:Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm7.h **** 
  50:Drivers/CMSIS/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm7.h ****  */
  53:Drivers/CMSIS/Include/core_cm7.h **** 
  54:Drivers/CMSIS/Include/core_cm7.h **** 
  55:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm7.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm7.h **** /**
  59:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:Drivers/CMSIS/Include/core_cm7.h ****   @{
  61:Drivers/CMSIS/Include/core_cm7.h ****  */
  62:Drivers/CMSIS/Include/core_cm7.h **** 
  63:Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 29


  65:Drivers/CMSIS/Include/core_cm7.h **** /* CMSIS CM7 definitions */
  66:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [31:1
  67:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( __CM_CMSIS_VERSION_SUB)                  /*!< \deprecated [15:0
  68:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< \deprecated CMSIS
  70:Drivers/CMSIS/Include/core_cm7.h **** 
  71:Drivers/CMSIS/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm7.h **** 
  73:Drivers/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm7.h **** */
  76:Drivers/CMSIS/Include/core_cm7.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm7.h ****     #else
  81:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm7.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm7.h ****   #else
  85:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm7.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm7.h **** 
  88:Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARM_PCS_VFP
  90:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Include/core_cm7.h ****     #else
  93:Drivers/CMSIS/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  95:Drivers/CMSIS/Include/core_cm7.h ****     #endif
  96:Drivers/CMSIS/Include/core_cm7.h ****   #else
  97:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Include/core_cm7.h ****   #endif
  99:Drivers/CMSIS/Include/core_cm7.h **** 
 100:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 104:Drivers/CMSIS/Include/core_cm7.h ****     #else
 105:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 108:Drivers/CMSIS/Include/core_cm7.h ****   #else
 109:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 110:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 111:Drivers/CMSIS/Include/core_cm7.h **** 
 112:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Include/core_cm7.h ****     #else
 117:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 119:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 120:Drivers/CMSIS/Include/core_cm7.h ****   #else
 121:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 30


 122:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 123:Drivers/CMSIS/Include/core_cm7.h **** 
 124:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm7.h ****     #else
 129:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm7.h ****   #else
 133:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm7.h **** 
 136:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm7.h ****     #else
 141:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm7.h ****   #else
 145:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm7.h **** 
 148:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm7.h ****     #else
 153:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm7.h ****   #else
 157:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm7.h **** 
 160:Drivers/CMSIS/Include/core_cm7.h **** #endif
 161:Drivers/CMSIS/Include/core_cm7.h **** 
 162:Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm7.h **** 
 164:Drivers/CMSIS/Include/core_cm7.h **** 
 165:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Include/core_cm7.h **** }
 167:Drivers/CMSIS/Include/core_cm7.h **** #endif
 168:Drivers/CMSIS/Include/core_cm7.h **** 
 169:Drivers/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 170:Drivers/CMSIS/Include/core_cm7.h **** 
 171:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Include/core_cm7.h **** 
 173:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm7.h **** 
 176:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
 178:Drivers/CMSIS/Include/core_cm7.h **** #endif
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 31


 179:Drivers/CMSIS/Include/core_cm7.h **** 
 180:Drivers/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __CM7_REV
 183:Drivers/CMSIS/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 184:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 186:Drivers/CMSIS/Include/core_cm7.h **** 
 187:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm7.h **** 
 192:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm7.h **** 
 197:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 198:Drivers/CMSIS/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 199:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm7.h **** 
 202:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 203:Drivers/CMSIS/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 204:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm7.h **** 
 207:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 208:Drivers/CMSIS/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 209:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 210:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 211:Drivers/CMSIS/Include/core_cm7.h **** 
 212:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 213:Drivers/CMSIS/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 214:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 215:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 216:Drivers/CMSIS/Include/core_cm7.h **** 
 217:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 218:Drivers/CMSIS/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 219:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 220:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 221:Drivers/CMSIS/Include/core_cm7.h **** #endif
 222:Drivers/CMSIS/Include/core_cm7.h **** 
 223:Drivers/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 224:Drivers/CMSIS/Include/core_cm7.h **** /**
 225:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 226:Drivers/CMSIS/Include/core_cm7.h **** 
 227:Drivers/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 228:Drivers/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 229:Drivers/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 230:Drivers/CMSIS/Include/core_cm7.h **** */
 231:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 232:Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 233:Drivers/CMSIS/Include/core_cm7.h **** #else
 234:Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 235:Drivers/CMSIS/Include/core_cm7.h **** #endif
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 32


 236:Drivers/CMSIS/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 237:Drivers/CMSIS/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 238:Drivers/CMSIS/Include/core_cm7.h **** 
 239:Drivers/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 240:Drivers/CMSIS/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 241:Drivers/CMSIS/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 242:Drivers/CMSIS/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 243:Drivers/CMSIS/Include/core_cm7.h **** 
 244:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 245:Drivers/CMSIS/Include/core_cm7.h **** 
 246:Drivers/CMSIS/Include/core_cm7.h **** 
 247:Drivers/CMSIS/Include/core_cm7.h **** 
 248:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
 249:Drivers/CMSIS/Include/core_cm7.h ****  *                 Register Abstraction
 250:Drivers/CMSIS/Include/core_cm7.h ****   Core Register contain:
 251:Drivers/CMSIS/Include/core_cm7.h ****   - Core Register
 252:Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Register
 253:Drivers/CMSIS/Include/core_cm7.h ****   - Core SCB Register
 254:Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Register
 255:Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Register
 256:Drivers/CMSIS/Include/core_cm7.h ****   - Core MPU Register
 257:Drivers/CMSIS/Include/core_cm7.h ****   - Core FPU Register
 258:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
 259:Drivers/CMSIS/Include/core_cm7.h **** /**
 260:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 261:Drivers/CMSIS/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 262:Drivers/CMSIS/Include/core_cm7.h **** */
 263:Drivers/CMSIS/Include/core_cm7.h **** 
 264:Drivers/CMSIS/Include/core_cm7.h **** /**
 265:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 266:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 267:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Core Register type definitions.
 268:Drivers/CMSIS/Include/core_cm7.h ****   @{
 269:Drivers/CMSIS/Include/core_cm7.h ****  */
 270:Drivers/CMSIS/Include/core_cm7.h **** 
 271:Drivers/CMSIS/Include/core_cm7.h **** /**
 272:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 273:Drivers/CMSIS/Include/core_cm7.h ****  */
 274:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 275:Drivers/CMSIS/Include/core_cm7.h **** {
 276:Drivers/CMSIS/Include/core_cm7.h ****   struct
 277:Drivers/CMSIS/Include/core_cm7.h ****   {
 278:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 279:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 280:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 281:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 282:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 283:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 284:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 285:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 286:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 287:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 288:Drivers/CMSIS/Include/core_cm7.h **** } APSR_Type;
 289:Drivers/CMSIS/Include/core_cm7.h **** 
 290:Drivers/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 291:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 292:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 33


 293:Drivers/CMSIS/Include/core_cm7.h **** 
 294:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 295:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 296:Drivers/CMSIS/Include/core_cm7.h **** 
 297:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 298:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 299:Drivers/CMSIS/Include/core_cm7.h **** 
 300:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 301:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 302:Drivers/CMSIS/Include/core_cm7.h **** 
 303:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 304:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 305:Drivers/CMSIS/Include/core_cm7.h **** 
 306:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 307:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 308:Drivers/CMSIS/Include/core_cm7.h **** 
 309:Drivers/CMSIS/Include/core_cm7.h **** 
 310:Drivers/CMSIS/Include/core_cm7.h **** /**
 311:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 312:Drivers/CMSIS/Include/core_cm7.h ****  */
 313:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 314:Drivers/CMSIS/Include/core_cm7.h **** {
 315:Drivers/CMSIS/Include/core_cm7.h ****   struct
 316:Drivers/CMSIS/Include/core_cm7.h ****   {
 317:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 318:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 319:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 320:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:Drivers/CMSIS/Include/core_cm7.h **** } IPSR_Type;
 322:Drivers/CMSIS/Include/core_cm7.h **** 
 323:Drivers/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 324:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 325:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 326:Drivers/CMSIS/Include/core_cm7.h **** 
 327:Drivers/CMSIS/Include/core_cm7.h **** 
 328:Drivers/CMSIS/Include/core_cm7.h **** /**
 329:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 330:Drivers/CMSIS/Include/core_cm7.h ****  */
 331:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 332:Drivers/CMSIS/Include/core_cm7.h **** {
 333:Drivers/CMSIS/Include/core_cm7.h ****   struct
 334:Drivers/CMSIS/Include/core_cm7.h ****   {
 335:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 336:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 337:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 338:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 339:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 340:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 341:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 342:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 343:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 344:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 345:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 346:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 347:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 348:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 349:Drivers/CMSIS/Include/core_cm7.h **** } xPSR_Type;
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 34


 350:Drivers/CMSIS/Include/core_cm7.h **** 
 351:Drivers/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
 352:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 353:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 354:Drivers/CMSIS/Include/core_cm7.h **** 
 355:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 356:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 357:Drivers/CMSIS/Include/core_cm7.h **** 
 358:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 359:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 360:Drivers/CMSIS/Include/core_cm7.h **** 
 361:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 362:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 363:Drivers/CMSIS/Include/core_cm7.h **** 
 364:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 365:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 366:Drivers/CMSIS/Include/core_cm7.h **** 
 367:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 368:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 369:Drivers/CMSIS/Include/core_cm7.h **** 
 370:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 371:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 372:Drivers/CMSIS/Include/core_cm7.h **** 
 373:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 374:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 375:Drivers/CMSIS/Include/core_cm7.h **** 
 376:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 377:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 378:Drivers/CMSIS/Include/core_cm7.h **** 
 379:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 380:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 381:Drivers/CMSIS/Include/core_cm7.h **** 
 382:Drivers/CMSIS/Include/core_cm7.h **** 
 383:Drivers/CMSIS/Include/core_cm7.h **** /**
 384:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 385:Drivers/CMSIS/Include/core_cm7.h ****  */
 386:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 387:Drivers/CMSIS/Include/core_cm7.h **** {
 388:Drivers/CMSIS/Include/core_cm7.h ****   struct
 389:Drivers/CMSIS/Include/core_cm7.h ****   {
 390:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 391:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 392:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 393:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 394:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 395:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 396:Drivers/CMSIS/Include/core_cm7.h **** } CONTROL_Type;
 397:Drivers/CMSIS/Include/core_cm7.h **** 
 398:Drivers/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 399:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 400:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 401:Drivers/CMSIS/Include/core_cm7.h **** 
 402:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 403:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 404:Drivers/CMSIS/Include/core_cm7.h **** 
 405:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 406:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 35


 407:Drivers/CMSIS/Include/core_cm7.h **** 
 408:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 409:Drivers/CMSIS/Include/core_cm7.h **** 
 410:Drivers/CMSIS/Include/core_cm7.h **** 
 411:Drivers/CMSIS/Include/core_cm7.h **** /**
 412:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 413:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 414:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 415:Drivers/CMSIS/Include/core_cm7.h ****   @{
 416:Drivers/CMSIS/Include/core_cm7.h ****  */
 417:Drivers/CMSIS/Include/core_cm7.h **** 
 418:Drivers/CMSIS/Include/core_cm7.h **** /**
 419:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 420:Drivers/CMSIS/Include/core_cm7.h ****  */
 421:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 422:Drivers/CMSIS/Include/core_cm7.h **** {
 423:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 424:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 425:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 426:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RSERVED1[24U];
 427:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 428:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 429:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 430:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 431:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 432:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 433:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 434:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 435:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 436:Drivers/CMSIS/Include/core_cm7.h **** }  NVIC_Type;
 437:Drivers/CMSIS/Include/core_cm7.h **** 
 438:Drivers/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 439:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 440:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 441:Drivers/CMSIS/Include/core_cm7.h **** 
 442:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 443:Drivers/CMSIS/Include/core_cm7.h **** 
 444:Drivers/CMSIS/Include/core_cm7.h **** 
 445:Drivers/CMSIS/Include/core_cm7.h **** /**
 446:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 447:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 448:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 449:Drivers/CMSIS/Include/core_cm7.h ****   @{
 450:Drivers/CMSIS/Include/core_cm7.h ****  */
 451:Drivers/CMSIS/Include/core_cm7.h **** 
 452:Drivers/CMSIS/Include/core_cm7.h **** /**
 453:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 454:Drivers/CMSIS/Include/core_cm7.h ****  */
 455:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 456:Drivers/CMSIS/Include/core_cm7.h **** {
 457:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 458:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 459:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 460:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 461:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 462:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 463:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 36


 464:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 465:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 466:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 467:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 468:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 469:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 470:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 471:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 472:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 473:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 474:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 475:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 476:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 477:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 478:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 479:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 480:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 481:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 482:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 483:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 484:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 485:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 486:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 487:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 2
 488:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 489:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 490:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 491:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 492:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 493:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 494:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 495:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 496:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 497:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 498:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 499:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 500:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 501:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 502:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 503:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 504:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 505:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 506:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 507:Drivers/CMSIS/Include/core_cm7.h **** } SCB_Type;
 508:Drivers/CMSIS/Include/core_cm7.h **** 
 509:Drivers/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 510:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 511:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm7.h **** 
 513:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 514:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm7.h **** 
 516:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 517:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm7.h **** 
 519:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 520:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 37


 521:Drivers/CMSIS/Include/core_cm7.h **** 
 522:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 523:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm7.h **** 
 525:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 526:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm7.h **** 
 529:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm7.h **** 
 532:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 534:Drivers/CMSIS/Include/core_cm7.h **** 
 535:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 537:Drivers/CMSIS/Include/core_cm7.h **** 
 538:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 540:Drivers/CMSIS/Include/core_cm7.h **** 
 541:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 543:Drivers/CMSIS/Include/core_cm7.h **** 
 544:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm7.h **** 
 547:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm7.h **** 
 550:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm7.h **** 
 553:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm7.h **** 
 556:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 557:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm7.h **** 
 560:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 561:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm7.h **** 
 564:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm7.h **** 
 567:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm7.h **** 
 570:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm7.h **** 
 573:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm7.h **** 
 576:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 38


 578:Drivers/CMSIS/Include/core_cm7.h **** 
 579:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm7.h **** 
 582:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 583:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm7.h **** 
 586:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm7.h **** 
 589:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm7.h **** 
 592:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 593:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 594:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm7.h **** 
 596:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 597:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm7.h **** 
 599:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm7.h **** 
 602:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm7.h **** 
 605:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 606:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm7.h **** 
 608:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 609:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm7.h **** 
 611:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 612:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm7.h **** 
 614:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 616:Drivers/CMSIS/Include/core_cm7.h **** 
 617:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 619:Drivers/CMSIS/Include/core_cm7.h **** 
 620:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 621:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 622:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm7.h **** 
 624:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 625:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm7.h **** 
 627:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm7.h **** 
 630:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm7.h **** 
 633:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 39


 635:Drivers/CMSIS/Include/core_cm7.h **** 
 636:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm7.h **** 
 639:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm7.h **** 
 642:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 643:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm7.h **** 
 645:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 646:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm7.h **** 
 648:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 649:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm7.h **** 
 651:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 652:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm7.h **** 
 654:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 655:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm7.h **** 
 657:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 658:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm7.h **** 
 660:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 661:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 662:Drivers/CMSIS/Include/core_cm7.h **** 
 663:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 664:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 665:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 666:Drivers/CMSIS/Include/core_cm7.h **** 
 667:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 668:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm7.h **** 
 670:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 671:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm7.h **** 
 673:Drivers/CMSIS/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 674:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 676:Drivers/CMSIS/Include/core_cm7.h **** 
 677:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 679:Drivers/CMSIS/Include/core_cm7.h **** 
 680:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 681:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 682:Drivers/CMSIS/Include/core_cm7.h **** 
 683:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 684:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 685:Drivers/CMSIS/Include/core_cm7.h **** 
 686:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 687:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm7.h **** 
 689:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 690:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 691:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 40


 692:Drivers/CMSIS/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 693:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 694:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 695:Drivers/CMSIS/Include/core_cm7.h **** 
 696:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 697:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm7.h **** 
 699:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 700:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm7.h **** 
 702:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 703:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm7.h **** 
 705:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 706:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 707:Drivers/CMSIS/Include/core_cm7.h **** 
 708:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 709:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 710:Drivers/CMSIS/Include/core_cm7.h **** 
 711:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 712:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 713:Drivers/CMSIS/Include/core_cm7.h **** 
 714:Drivers/CMSIS/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 715:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 716:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 717:Drivers/CMSIS/Include/core_cm7.h **** 
 718:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 719:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 720:Drivers/CMSIS/Include/core_cm7.h **** 
 721:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 722:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 723:Drivers/CMSIS/Include/core_cm7.h **** 
 724:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 725:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 726:Drivers/CMSIS/Include/core_cm7.h **** 
 727:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 728:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 729:Drivers/CMSIS/Include/core_cm7.h **** 
 730:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 731:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 732:Drivers/CMSIS/Include/core_cm7.h **** 
 733:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 734:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 735:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 736:Drivers/CMSIS/Include/core_cm7.h **** 
 737:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 738:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 739:Drivers/CMSIS/Include/core_cm7.h **** 
 740:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 741:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 742:Drivers/CMSIS/Include/core_cm7.h **** 
 743:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 744:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 745:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 746:Drivers/CMSIS/Include/core_cm7.h **** 
 747:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 748:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 41


 749:Drivers/CMSIS/Include/core_cm7.h **** 
 750:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 751:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 752:Drivers/CMSIS/Include/core_cm7.h **** 
 753:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 754:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 755:Drivers/CMSIS/Include/core_cm7.h **** 
 756:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 757:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 758:Drivers/CMSIS/Include/core_cm7.h **** 
 759:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 760:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 761:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 762:Drivers/CMSIS/Include/core_cm7.h **** 
 763:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 764:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 765:Drivers/CMSIS/Include/core_cm7.h **** 
 766:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 767:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 768:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 769:Drivers/CMSIS/Include/core_cm7.h **** 
 770:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 771:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 772:Drivers/CMSIS/Include/core_cm7.h **** 
 773:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 774:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 775:Drivers/CMSIS/Include/core_cm7.h **** 
 776:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 777:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 778:Drivers/CMSIS/Include/core_cm7.h **** 
 779:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 780:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 781:Drivers/CMSIS/Include/core_cm7.h **** 
 782:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 783:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 784:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 785:Drivers/CMSIS/Include/core_cm7.h **** 
 786:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 787:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 788:Drivers/CMSIS/Include/core_cm7.h **** 
 789:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 790:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 791:Drivers/CMSIS/Include/core_cm7.h **** 
 792:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 793:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 794:Drivers/CMSIS/Include/core_cm7.h **** 
 795:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 796:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 797:Drivers/CMSIS/Include/core_cm7.h **** 
 798:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 799:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 800:Drivers/CMSIS/Include/core_cm7.h **** 
 801:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 802:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 803:Drivers/CMSIS/Include/core_cm7.h **** 
 804:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 805:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 42


 806:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 807:Drivers/CMSIS/Include/core_cm7.h **** 
 808:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 809:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 810:Drivers/CMSIS/Include/core_cm7.h **** 
 811:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 812:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 813:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 814:Drivers/CMSIS/Include/core_cm7.h **** 
 815:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 816:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 817:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 818:Drivers/CMSIS/Include/core_cm7.h **** 
 819:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 820:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 821:Drivers/CMSIS/Include/core_cm7.h **** 
 822:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 823:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 824:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 825:Drivers/CMSIS/Include/core_cm7.h **** 
 826:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 827:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 828:Drivers/CMSIS/Include/core_cm7.h **** 
 829:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 830:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 831:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 832:Drivers/CMSIS/Include/core_cm7.h **** 
 833:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 834:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 835:Drivers/CMSIS/Include/core_cm7.h **** 
 836:Drivers/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 837:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 838:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 839:Drivers/CMSIS/Include/core_cm7.h **** 
 840:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 841:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 842:Drivers/CMSIS/Include/core_cm7.h **** 
 843:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 844:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 845:Drivers/CMSIS/Include/core_cm7.h **** 
 846:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 847:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 848:Drivers/CMSIS/Include/core_cm7.h **** 
 849:Drivers/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 850:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 851:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 852:Drivers/CMSIS/Include/core_cm7.h **** 
 853:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 854:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 855:Drivers/CMSIS/Include/core_cm7.h **** 
 856:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 857:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 858:Drivers/CMSIS/Include/core_cm7.h **** 
 859:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 860:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 861:Drivers/CMSIS/Include/core_cm7.h **** 
 862:Drivers/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 43


 863:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 864:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 865:Drivers/CMSIS/Include/core_cm7.h **** 
 866:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 867:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 868:Drivers/CMSIS/Include/core_cm7.h **** 
 869:Drivers/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 870:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 871:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 872:Drivers/CMSIS/Include/core_cm7.h **** 
 873:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 874:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 875:Drivers/CMSIS/Include/core_cm7.h **** 
 876:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 877:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 878:Drivers/CMSIS/Include/core_cm7.h **** 
 879:Drivers/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 880:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 881:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 882:Drivers/CMSIS/Include/core_cm7.h **** 
 883:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 884:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 885:Drivers/CMSIS/Include/core_cm7.h **** 
 886:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 887:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 888:Drivers/CMSIS/Include/core_cm7.h **** 
 889:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 890:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 891:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 892:Drivers/CMSIS/Include/core_cm7.h **** 
 893:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 894:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 895:Drivers/CMSIS/Include/core_cm7.h **** 
 896:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 897:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 898:Drivers/CMSIS/Include/core_cm7.h **** 
 899:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 900:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 901:Drivers/CMSIS/Include/core_cm7.h **** 
 902:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 903:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 904:Drivers/CMSIS/Include/core_cm7.h **** 
 905:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 906:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 907:Drivers/CMSIS/Include/core_cm7.h **** 
 908:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 909:Drivers/CMSIS/Include/core_cm7.h **** 
 910:Drivers/CMSIS/Include/core_cm7.h **** 
 911:Drivers/CMSIS/Include/core_cm7.h **** /**
 912:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 913:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 914:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 915:Drivers/CMSIS/Include/core_cm7.h ****   @{
 916:Drivers/CMSIS/Include/core_cm7.h ****  */
 917:Drivers/CMSIS/Include/core_cm7.h **** 
 918:Drivers/CMSIS/Include/core_cm7.h **** /**
 919:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 44


 920:Drivers/CMSIS/Include/core_cm7.h ****  */
 921:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 922:Drivers/CMSIS/Include/core_cm7.h **** {
 923:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 924:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 925:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 926:Drivers/CMSIS/Include/core_cm7.h **** } SCnSCB_Type;
 927:Drivers/CMSIS/Include/core_cm7.h **** 
 928:Drivers/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 929:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 930:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 931:Drivers/CMSIS/Include/core_cm7.h **** 
 932:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 933:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 934:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 935:Drivers/CMSIS/Include/core_cm7.h **** 
 936:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 937:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 938:Drivers/CMSIS/Include/core_cm7.h **** 
 939:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 940:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 941:Drivers/CMSIS/Include/core_cm7.h **** 
 942:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 943:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 944:Drivers/CMSIS/Include/core_cm7.h **** 
 945:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 946:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 947:Drivers/CMSIS/Include/core_cm7.h **** 
 948:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 949:Drivers/CMSIS/Include/core_cm7.h **** 
 950:Drivers/CMSIS/Include/core_cm7.h **** 
 951:Drivers/CMSIS/Include/core_cm7.h **** /**
 952:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 953:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 954:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 955:Drivers/CMSIS/Include/core_cm7.h ****   @{
 956:Drivers/CMSIS/Include/core_cm7.h ****  */
 957:Drivers/CMSIS/Include/core_cm7.h **** 
 958:Drivers/CMSIS/Include/core_cm7.h **** /**
 959:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 960:Drivers/CMSIS/Include/core_cm7.h ****  */
 961:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 962:Drivers/CMSIS/Include/core_cm7.h **** {
 963:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 964:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 965:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 966:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 967:Drivers/CMSIS/Include/core_cm7.h **** } SysTick_Type;
 968:Drivers/CMSIS/Include/core_cm7.h **** 
 969:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 970:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 971:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 972:Drivers/CMSIS/Include/core_cm7.h **** 
 973:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 974:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 975:Drivers/CMSIS/Include/core_cm7.h **** 
 976:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 45


 977:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 978:Drivers/CMSIS/Include/core_cm7.h **** 
 979:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 980:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 981:Drivers/CMSIS/Include/core_cm7.h **** 
 982:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
 983:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 984:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 985:Drivers/CMSIS/Include/core_cm7.h **** 
 986:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
 987:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 988:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 989:Drivers/CMSIS/Include/core_cm7.h **** 
 990:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
 991:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 992:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 993:Drivers/CMSIS/Include/core_cm7.h **** 
 994:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 995:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 996:Drivers/CMSIS/Include/core_cm7.h **** 
 997:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 998:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 999:Drivers/CMSIS/Include/core_cm7.h **** 
1000:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
1001:Drivers/CMSIS/Include/core_cm7.h **** 
1002:Drivers/CMSIS/Include/core_cm7.h **** 
1003:Drivers/CMSIS/Include/core_cm7.h **** /**
1004:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1005:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1006:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1007:Drivers/CMSIS/Include/core_cm7.h ****   @{
1008:Drivers/CMSIS/Include/core_cm7.h ****  */
1009:Drivers/CMSIS/Include/core_cm7.h **** 
1010:Drivers/CMSIS/Include/core_cm7.h **** /**
1011:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1012:Drivers/CMSIS/Include/core_cm7.h ****  */
1013:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1014:Drivers/CMSIS/Include/core_cm7.h **** {
1015:Drivers/CMSIS/Include/core_cm7.h ****   __OM  union
1016:Drivers/CMSIS/Include/core_cm7.h ****   {
1017:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1018:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1019:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1020:Drivers/CMSIS/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1021:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1022:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1023:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1024:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1025:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1026:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1027:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[29U];
1028:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
1029:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
1030:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
1031:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1032:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1033:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 46


1034:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1035:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1036:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1037:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1038:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1039:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1040:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1041:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1042:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1043:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1044:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1045:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1046:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1047:Drivers/CMSIS/Include/core_cm7.h **** } ITM_Type;
1048:Drivers/CMSIS/Include/core_cm7.h **** 
1049:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1050:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1051:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
1052:Drivers/CMSIS/Include/core_cm7.h **** 
1053:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1054:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1055:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1056:Drivers/CMSIS/Include/core_cm7.h **** 
1057:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1058:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1059:Drivers/CMSIS/Include/core_cm7.h **** 
1060:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1061:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1062:Drivers/CMSIS/Include/core_cm7.h **** 
1063:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1064:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1065:Drivers/CMSIS/Include/core_cm7.h **** 
1066:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1067:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1068:Drivers/CMSIS/Include/core_cm7.h **** 
1069:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1070:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1071:Drivers/CMSIS/Include/core_cm7.h **** 
1072:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1073:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1074:Drivers/CMSIS/Include/core_cm7.h **** 
1075:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1076:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1077:Drivers/CMSIS/Include/core_cm7.h **** 
1078:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1079:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1080:Drivers/CMSIS/Include/core_cm7.h **** 
1081:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Write Register Definitions */
1082:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
1083:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
1084:Drivers/CMSIS/Include/core_cm7.h **** 
1085:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Read Register Definitions */
1086:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
1087:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
1088:Drivers/CMSIS/Include/core_cm7.h **** 
1089:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Mode Control Register Definitions */
1090:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 47


1091:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
1092:Drivers/CMSIS/Include/core_cm7.h **** 
1093:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1094:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1095:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1096:Drivers/CMSIS/Include/core_cm7.h **** 
1097:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1098:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1099:Drivers/CMSIS/Include/core_cm7.h **** 
1100:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1101:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1102:Drivers/CMSIS/Include/core_cm7.h **** 
1103:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1104:Drivers/CMSIS/Include/core_cm7.h **** 
1105:Drivers/CMSIS/Include/core_cm7.h **** 
1106:Drivers/CMSIS/Include/core_cm7.h **** /**
1107:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1108:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1109:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1110:Drivers/CMSIS/Include/core_cm7.h ****   @{
1111:Drivers/CMSIS/Include/core_cm7.h ****  */
1112:Drivers/CMSIS/Include/core_cm7.h **** 
1113:Drivers/CMSIS/Include/core_cm7.h **** /**
1114:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1115:Drivers/CMSIS/Include/core_cm7.h ****  */
1116:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1117:Drivers/CMSIS/Include/core_cm7.h **** {
1118:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1119:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1120:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1121:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1122:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1123:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1124:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1125:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1126:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1127:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1128:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1129:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1130:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1131:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1132:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1133:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1134:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1135:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1136:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1137:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1138:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1139:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1140:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1141:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1142:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1143:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1144:Drivers/CMSIS/Include/core_cm7.h **** } DWT_Type;
1145:Drivers/CMSIS/Include/core_cm7.h **** 
1146:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1147:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 48


1148:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1149:Drivers/CMSIS/Include/core_cm7.h **** 
1150:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1151:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1152:Drivers/CMSIS/Include/core_cm7.h **** 
1153:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1154:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1155:Drivers/CMSIS/Include/core_cm7.h **** 
1156:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1157:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1158:Drivers/CMSIS/Include/core_cm7.h **** 
1159:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1160:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1161:Drivers/CMSIS/Include/core_cm7.h **** 
1162:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1163:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1164:Drivers/CMSIS/Include/core_cm7.h **** 
1165:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1166:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1167:Drivers/CMSIS/Include/core_cm7.h **** 
1168:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1169:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1170:Drivers/CMSIS/Include/core_cm7.h **** 
1171:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1172:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1173:Drivers/CMSIS/Include/core_cm7.h **** 
1174:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1175:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1176:Drivers/CMSIS/Include/core_cm7.h **** 
1177:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1178:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1179:Drivers/CMSIS/Include/core_cm7.h **** 
1180:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1181:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1182:Drivers/CMSIS/Include/core_cm7.h **** 
1183:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1184:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1185:Drivers/CMSIS/Include/core_cm7.h **** 
1186:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1187:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1188:Drivers/CMSIS/Include/core_cm7.h **** 
1189:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1190:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1191:Drivers/CMSIS/Include/core_cm7.h **** 
1192:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1193:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1194:Drivers/CMSIS/Include/core_cm7.h **** 
1195:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1196:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1197:Drivers/CMSIS/Include/core_cm7.h **** 
1198:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1199:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1200:Drivers/CMSIS/Include/core_cm7.h **** 
1201:Drivers/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1202:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1203:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1204:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 49


1205:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1206:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1207:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1208:Drivers/CMSIS/Include/core_cm7.h **** 
1209:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1210:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1211:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1212:Drivers/CMSIS/Include/core_cm7.h **** 
1213:Drivers/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1214:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1215:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1216:Drivers/CMSIS/Include/core_cm7.h **** 
1217:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1218:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1219:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1220:Drivers/CMSIS/Include/core_cm7.h **** 
1221:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1222:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1223:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1224:Drivers/CMSIS/Include/core_cm7.h **** 
1225:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1226:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1227:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1228:Drivers/CMSIS/Include/core_cm7.h **** 
1229:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1230:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1231:Drivers/CMSIS/Include/core_cm7.h **** 
1232:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1233:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1234:Drivers/CMSIS/Include/core_cm7.h **** 
1235:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1236:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1237:Drivers/CMSIS/Include/core_cm7.h **** 
1238:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1239:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1240:Drivers/CMSIS/Include/core_cm7.h **** 
1241:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1242:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1243:Drivers/CMSIS/Include/core_cm7.h **** 
1244:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1245:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1246:Drivers/CMSIS/Include/core_cm7.h **** 
1247:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1248:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1249:Drivers/CMSIS/Include/core_cm7.h **** 
1250:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1251:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1252:Drivers/CMSIS/Include/core_cm7.h **** 
1253:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1254:Drivers/CMSIS/Include/core_cm7.h **** 
1255:Drivers/CMSIS/Include/core_cm7.h **** 
1256:Drivers/CMSIS/Include/core_cm7.h **** /**
1257:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1258:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1259:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1260:Drivers/CMSIS/Include/core_cm7.h ****   @{
1261:Drivers/CMSIS/Include/core_cm7.h ****  */
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 50


1262:Drivers/CMSIS/Include/core_cm7.h **** 
1263:Drivers/CMSIS/Include/core_cm7.h **** /**
1264:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1265:Drivers/CMSIS/Include/core_cm7.h ****  */
1266:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1267:Drivers/CMSIS/Include/core_cm7.h **** {
1268:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1269:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1270:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1271:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1272:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1273:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1274:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1275:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1276:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1277:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1278:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1279:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1280:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1281:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1282:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1283:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1284:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1285:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1286:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1287:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1288:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1289:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1290:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1291:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1292:Drivers/CMSIS/Include/core_cm7.h **** } TPI_Type;
1293:Drivers/CMSIS/Include/core_cm7.h **** 
1294:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1295:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1296:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1297:Drivers/CMSIS/Include/core_cm7.h **** 
1298:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1299:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1300:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1301:Drivers/CMSIS/Include/core_cm7.h **** 
1302:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1303:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1304:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1305:Drivers/CMSIS/Include/core_cm7.h **** 
1306:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1307:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1308:Drivers/CMSIS/Include/core_cm7.h **** 
1309:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1310:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1311:Drivers/CMSIS/Include/core_cm7.h **** 
1312:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1313:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1314:Drivers/CMSIS/Include/core_cm7.h **** 
1315:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1316:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1317:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1318:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 51


1319:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1320:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1321:Drivers/CMSIS/Include/core_cm7.h **** 
1322:Drivers/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1323:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1324:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1325:Drivers/CMSIS/Include/core_cm7.h **** 
1326:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1327:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1328:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1329:Drivers/CMSIS/Include/core_cm7.h **** 
1330:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1331:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1332:Drivers/CMSIS/Include/core_cm7.h **** 
1333:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1334:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1335:Drivers/CMSIS/Include/core_cm7.h **** 
1336:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1337:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1338:Drivers/CMSIS/Include/core_cm7.h **** 
1339:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1340:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1341:Drivers/CMSIS/Include/core_cm7.h **** 
1342:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1343:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1344:Drivers/CMSIS/Include/core_cm7.h **** 
1345:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1346:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1347:Drivers/CMSIS/Include/core_cm7.h **** 
1348:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1349:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1350:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1351:Drivers/CMSIS/Include/core_cm7.h **** 
1352:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1353:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1354:Drivers/CMSIS/Include/core_cm7.h **** 
1355:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1356:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1357:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1358:Drivers/CMSIS/Include/core_cm7.h **** 
1359:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1360:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1361:Drivers/CMSIS/Include/core_cm7.h **** 
1362:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1363:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1364:Drivers/CMSIS/Include/core_cm7.h **** 
1365:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1366:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1367:Drivers/CMSIS/Include/core_cm7.h **** 
1368:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1369:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1370:Drivers/CMSIS/Include/core_cm7.h **** 
1371:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1372:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1373:Drivers/CMSIS/Include/core_cm7.h **** 
1374:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1375:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 52


1376:Drivers/CMSIS/Include/core_cm7.h **** 
1377:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1378:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1379:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1380:Drivers/CMSIS/Include/core_cm7.h **** 
1381:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1382:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1383:Drivers/CMSIS/Include/core_cm7.h **** 
1384:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1385:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1386:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1387:Drivers/CMSIS/Include/core_cm7.h **** 
1388:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1389:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1390:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1391:Drivers/CMSIS/Include/core_cm7.h **** 
1392:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1393:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1394:Drivers/CMSIS/Include/core_cm7.h **** 
1395:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1396:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1397:Drivers/CMSIS/Include/core_cm7.h **** 
1398:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1399:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1400:Drivers/CMSIS/Include/core_cm7.h **** 
1401:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1402:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1403:Drivers/CMSIS/Include/core_cm7.h **** 
1404:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1405:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1406:Drivers/CMSIS/Include/core_cm7.h **** 
1407:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1408:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1409:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1410:Drivers/CMSIS/Include/core_cm7.h **** 
1411:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1412:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1413:Drivers/CMSIS/Include/core_cm7.h **** 
1414:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1415:Drivers/CMSIS/Include/core_cm7.h **** 
1416:Drivers/CMSIS/Include/core_cm7.h **** 
1417:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1418:Drivers/CMSIS/Include/core_cm7.h **** /**
1419:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1420:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1421:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1422:Drivers/CMSIS/Include/core_cm7.h ****   @{
1423:Drivers/CMSIS/Include/core_cm7.h ****  */
1424:Drivers/CMSIS/Include/core_cm7.h **** 
1425:Drivers/CMSIS/Include/core_cm7.h **** /**
1426:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1427:Drivers/CMSIS/Include/core_cm7.h ****  */
1428:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1429:Drivers/CMSIS/Include/core_cm7.h **** {
1430:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1431:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1432:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 53


1433:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1434:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1435:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1436:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1437:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1438:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1439:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1440:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1441:Drivers/CMSIS/Include/core_cm7.h **** } MPU_Type;
1442:Drivers/CMSIS/Include/core_cm7.h **** 
1443:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_RALIASES                  4U
1444:Drivers/CMSIS/Include/core_cm7.h **** 
1445:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1446:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1447:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1448:Drivers/CMSIS/Include/core_cm7.h **** 
1449:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1450:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1451:Drivers/CMSIS/Include/core_cm7.h **** 
1452:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1453:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1454:Drivers/CMSIS/Include/core_cm7.h **** 
1455:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1456:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1457:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1458:Drivers/CMSIS/Include/core_cm7.h **** 
1459:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1460:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1461:Drivers/CMSIS/Include/core_cm7.h **** 
1462:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1463:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1464:Drivers/CMSIS/Include/core_cm7.h **** 
1465:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1466:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1467:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1468:Drivers/CMSIS/Include/core_cm7.h **** 
1469:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1470:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1471:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1472:Drivers/CMSIS/Include/core_cm7.h **** 
1473:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1474:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1475:Drivers/CMSIS/Include/core_cm7.h **** 
1476:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1477:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1478:Drivers/CMSIS/Include/core_cm7.h **** 
1479:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1480:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1481:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1482:Drivers/CMSIS/Include/core_cm7.h **** 
1483:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1484:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1485:Drivers/CMSIS/Include/core_cm7.h **** 
1486:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1487:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1488:Drivers/CMSIS/Include/core_cm7.h **** 
1489:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 54


1490:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1491:Drivers/CMSIS/Include/core_cm7.h **** 
1492:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1493:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1494:Drivers/CMSIS/Include/core_cm7.h **** 
1495:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1496:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1497:Drivers/CMSIS/Include/core_cm7.h **** 
1498:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1499:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1500:Drivers/CMSIS/Include/core_cm7.h **** 
1501:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1502:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1503:Drivers/CMSIS/Include/core_cm7.h **** 
1504:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1505:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1506:Drivers/CMSIS/Include/core_cm7.h **** 
1507:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1508:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1509:Drivers/CMSIS/Include/core_cm7.h **** 
1510:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1511:Drivers/CMSIS/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1512:Drivers/CMSIS/Include/core_cm7.h **** 
1513:Drivers/CMSIS/Include/core_cm7.h **** 
1514:Drivers/CMSIS/Include/core_cm7.h **** /**
1515:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1516:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1517:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1518:Drivers/CMSIS/Include/core_cm7.h ****   @{
1519:Drivers/CMSIS/Include/core_cm7.h ****  */
1520:Drivers/CMSIS/Include/core_cm7.h **** 
1521:Drivers/CMSIS/Include/core_cm7.h **** /**
1522:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1523:Drivers/CMSIS/Include/core_cm7.h ****  */
1524:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1525:Drivers/CMSIS/Include/core_cm7.h **** {
1526:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1527:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1528:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1529:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1530:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1531:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1532:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1533:Drivers/CMSIS/Include/core_cm7.h **** } FPU_Type;
1534:Drivers/CMSIS/Include/core_cm7.h **** 
1535:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1536:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1537:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1538:Drivers/CMSIS/Include/core_cm7.h **** 
1539:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1540:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1541:Drivers/CMSIS/Include/core_cm7.h **** 
1542:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1543:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1544:Drivers/CMSIS/Include/core_cm7.h **** 
1545:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1546:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 55


1547:Drivers/CMSIS/Include/core_cm7.h **** 
1548:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1549:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1550:Drivers/CMSIS/Include/core_cm7.h **** 
1551:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1552:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1553:Drivers/CMSIS/Include/core_cm7.h **** 
1554:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1555:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1556:Drivers/CMSIS/Include/core_cm7.h **** 
1557:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1558:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1559:Drivers/CMSIS/Include/core_cm7.h **** 
1560:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1561:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1562:Drivers/CMSIS/Include/core_cm7.h **** 
1563:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1564:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1565:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1566:Drivers/CMSIS/Include/core_cm7.h **** 
1567:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1568:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1569:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1570:Drivers/CMSIS/Include/core_cm7.h **** 
1571:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1572:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1573:Drivers/CMSIS/Include/core_cm7.h **** 
1574:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1575:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1576:Drivers/CMSIS/Include/core_cm7.h **** 
1577:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1578:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1579:Drivers/CMSIS/Include/core_cm7.h **** 
1580:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1581:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1582:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1583:Drivers/CMSIS/Include/core_cm7.h **** 
1584:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1585:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1586:Drivers/CMSIS/Include/core_cm7.h **** 
1587:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1588:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1589:Drivers/CMSIS/Include/core_cm7.h **** 
1590:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1591:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1592:Drivers/CMSIS/Include/core_cm7.h **** 
1593:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1594:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1595:Drivers/CMSIS/Include/core_cm7.h **** 
1596:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1597:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1598:Drivers/CMSIS/Include/core_cm7.h **** 
1599:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1600:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1601:Drivers/CMSIS/Include/core_cm7.h **** 
1602:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1603:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 56


1604:Drivers/CMSIS/Include/core_cm7.h **** 
1605:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1606:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1607:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1608:Drivers/CMSIS/Include/core_cm7.h **** 
1609:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1610:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1611:Drivers/CMSIS/Include/core_cm7.h **** 
1612:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1613:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1614:Drivers/CMSIS/Include/core_cm7.h **** 
1615:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1616:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1617:Drivers/CMSIS/Include/core_cm7.h **** 
1618:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1619:Drivers/CMSIS/Include/core_cm7.h **** 
1620:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1621:Drivers/CMSIS/Include/core_cm7.h **** 
1622:Drivers/CMSIS/Include/core_cm7.h **** 
1623:Drivers/CMSIS/Include/core_cm7.h **** /**
1624:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1625:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1626:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1627:Drivers/CMSIS/Include/core_cm7.h ****   @{
1628:Drivers/CMSIS/Include/core_cm7.h ****  */
1629:Drivers/CMSIS/Include/core_cm7.h **** 
1630:Drivers/CMSIS/Include/core_cm7.h **** /**
1631:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1632:Drivers/CMSIS/Include/core_cm7.h ****  */
1633:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1634:Drivers/CMSIS/Include/core_cm7.h **** {
1635:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1636:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1637:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1638:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1639:Drivers/CMSIS/Include/core_cm7.h **** } CoreDebug_Type;
1640:Drivers/CMSIS/Include/core_cm7.h **** 
1641:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1642:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1643:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1644:Drivers/CMSIS/Include/core_cm7.h **** 
1645:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1646:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1647:Drivers/CMSIS/Include/core_cm7.h **** 
1648:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1649:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1650:Drivers/CMSIS/Include/core_cm7.h **** 
1651:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1652:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1653:Drivers/CMSIS/Include/core_cm7.h **** 
1654:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1655:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1656:Drivers/CMSIS/Include/core_cm7.h **** 
1657:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1658:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1659:Drivers/CMSIS/Include/core_cm7.h **** 
1660:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 57


1661:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1662:Drivers/CMSIS/Include/core_cm7.h **** 
1663:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1664:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1665:Drivers/CMSIS/Include/core_cm7.h **** 
1666:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1667:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1668:Drivers/CMSIS/Include/core_cm7.h **** 
1669:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1670:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1671:Drivers/CMSIS/Include/core_cm7.h **** 
1672:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1673:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1674:Drivers/CMSIS/Include/core_cm7.h **** 
1675:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1676:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1677:Drivers/CMSIS/Include/core_cm7.h **** 
1678:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1679:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1680:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1681:Drivers/CMSIS/Include/core_cm7.h **** 
1682:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1683:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1684:Drivers/CMSIS/Include/core_cm7.h **** 
1685:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1686:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1687:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1688:Drivers/CMSIS/Include/core_cm7.h **** 
1689:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1690:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1691:Drivers/CMSIS/Include/core_cm7.h **** 
1692:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1693:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1694:Drivers/CMSIS/Include/core_cm7.h **** 
1695:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1696:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1697:Drivers/CMSIS/Include/core_cm7.h **** 
1698:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1699:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1700:Drivers/CMSIS/Include/core_cm7.h **** 
1701:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1702:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1703:Drivers/CMSIS/Include/core_cm7.h **** 
1704:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1705:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1706:Drivers/CMSIS/Include/core_cm7.h **** 
1707:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1708:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1709:Drivers/CMSIS/Include/core_cm7.h **** 
1710:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1711:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1712:Drivers/CMSIS/Include/core_cm7.h **** 
1713:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1714:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1715:Drivers/CMSIS/Include/core_cm7.h **** 
1716:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1717:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 58


1718:Drivers/CMSIS/Include/core_cm7.h **** 
1719:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1720:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1721:Drivers/CMSIS/Include/core_cm7.h **** 
1722:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1723:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1724:Drivers/CMSIS/Include/core_cm7.h **** 
1725:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1726:Drivers/CMSIS/Include/core_cm7.h **** 
1727:Drivers/CMSIS/Include/core_cm7.h **** 
1728:Drivers/CMSIS/Include/core_cm7.h **** /**
1729:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1730:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1731:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1732:Drivers/CMSIS/Include/core_cm7.h ****   @{
1733:Drivers/CMSIS/Include/core_cm7.h ****  */
1734:Drivers/CMSIS/Include/core_cm7.h **** 
1735:Drivers/CMSIS/Include/core_cm7.h **** /**
1736:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1737:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1738:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1739:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1740:Drivers/CMSIS/Include/core_cm7.h **** */
1741:Drivers/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1742:Drivers/CMSIS/Include/core_cm7.h **** 
1743:Drivers/CMSIS/Include/core_cm7.h **** /**
1744:Drivers/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1745:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1746:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1747:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1748:Drivers/CMSIS/Include/core_cm7.h **** */
1749:Drivers/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1750:Drivers/CMSIS/Include/core_cm7.h **** 
1751:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1752:Drivers/CMSIS/Include/core_cm7.h **** 
1753:Drivers/CMSIS/Include/core_cm7.h **** 
1754:Drivers/CMSIS/Include/core_cm7.h **** /**
1755:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1756:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1757:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1758:Drivers/CMSIS/Include/core_cm7.h ****   @{
1759:Drivers/CMSIS/Include/core_cm7.h ****  */
1760:Drivers/CMSIS/Include/core_cm7.h **** 
1761:Drivers/CMSIS/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1762:Drivers/CMSIS/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1763:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1764:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1765:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1766:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1767:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1768:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1769:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1770:Drivers/CMSIS/Include/core_cm7.h **** 
1771:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1772:Drivers/CMSIS/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1773:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1774:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 59


1775:Drivers/CMSIS/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1776:Drivers/CMSIS/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1777:Drivers/CMSIS/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1778:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1779:Drivers/CMSIS/Include/core_cm7.h **** 
1780:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1781:Drivers/CMSIS/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1782:Drivers/CMSIS/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1783:Drivers/CMSIS/Include/core_cm7.h **** #endif
1784:Drivers/CMSIS/Include/core_cm7.h **** 
1785:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1786:Drivers/CMSIS/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1787:Drivers/CMSIS/Include/core_cm7.h **** 
1788:Drivers/CMSIS/Include/core_cm7.h **** /*@} */
1789:Drivers/CMSIS/Include/core_cm7.h **** 
1790:Drivers/CMSIS/Include/core_cm7.h **** 
1791:Drivers/CMSIS/Include/core_cm7.h **** 
1792:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
1793:Drivers/CMSIS/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1794:Drivers/CMSIS/Include/core_cm7.h ****   Core Function Interface contains:
1795:Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Functions
1796:Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Functions
1797:Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Functions
1798:Drivers/CMSIS/Include/core_cm7.h ****   - Core Register Access Functions
1799:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
1800:Drivers/CMSIS/Include/core_cm7.h **** /**
1801:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1802:Drivers/CMSIS/Include/core_cm7.h **** */
1803:Drivers/CMSIS/Include/core_cm7.h **** 
1804:Drivers/CMSIS/Include/core_cm7.h **** 
1805:Drivers/CMSIS/Include/core_cm7.h **** 
1806:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1807:Drivers/CMSIS/Include/core_cm7.h **** /**
1808:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1809:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1810:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1811:Drivers/CMSIS/Include/core_cm7.h ****   @{
1812:Drivers/CMSIS/Include/core_cm7.h ****  */
1813:Drivers/CMSIS/Include/core_cm7.h **** 
1814:Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_NVIC_VIRTUAL
1815:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1816:Drivers/CMSIS/Include/core_cm7.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1817:Drivers/CMSIS/Include/core_cm7.h ****   #endif
1818:Drivers/CMSIS/Include/core_cm7.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1819:Drivers/CMSIS/Include/core_cm7.h **** #else
1820:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1821:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1822:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1823:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1824:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1825:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1826:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1827:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1828:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1829:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1830:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1831:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 60


1832:Drivers/CMSIS/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1833:Drivers/CMSIS/Include/core_cm7.h **** 
1834:Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1835:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1836:Drivers/CMSIS/Include/core_cm7.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1837:Drivers/CMSIS/Include/core_cm7.h ****   #endif
1838:Drivers/CMSIS/Include/core_cm7.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1839:Drivers/CMSIS/Include/core_cm7.h **** #else
1840:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1841:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1842:Drivers/CMSIS/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1843:Drivers/CMSIS/Include/core_cm7.h **** 
1844:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1845:Drivers/CMSIS/Include/core_cm7.h **** 
1846:Drivers/CMSIS/Include/core_cm7.h **** 
1847:Drivers/CMSIS/Include/core_cm7.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1848:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1849:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1850:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1851:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1852:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1853:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1854:Drivers/CMSIS/Include/core_cm7.h **** 
1855:Drivers/CMSIS/Include/core_cm7.h **** 
1856:Drivers/CMSIS/Include/core_cm7.h **** /**
1857:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Priority Grouping
1858:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1859:Drivers/CMSIS/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1860:Drivers/CMSIS/Include/core_cm7.h ****            Only values from 0..7 are used.
1861:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1862:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1863:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1864:Drivers/CMSIS/Include/core_cm7.h ****  */
1865:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1866:Drivers/CMSIS/Include/core_cm7.h **** {
1867:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t reg_value;
1868:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1869:Drivers/CMSIS/Include/core_cm7.h **** 
1870:Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1871:Drivers/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1872:Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1873:Drivers/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1874:Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1875:Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
1876:Drivers/CMSIS/Include/core_cm7.h **** }
1877:Drivers/CMSIS/Include/core_cm7.h **** 
1878:Drivers/CMSIS/Include/core_cm7.h **** 
1879:Drivers/CMSIS/Include/core_cm7.h **** /**
1880:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Priority Grouping
1881:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1882:Drivers/CMSIS/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1883:Drivers/CMSIS/Include/core_cm7.h ****  */
1884:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1885:Drivers/CMSIS/Include/core_cm7.h **** {
1886:Drivers/CMSIS/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1887:Drivers/CMSIS/Include/core_cm7.h **** }
1888:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 61


1889:Drivers/CMSIS/Include/core_cm7.h **** 
1890:Drivers/CMSIS/Include/core_cm7.h **** /**
1891:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable Interrupt
1892:Drivers/CMSIS/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1893:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1894:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1895:Drivers/CMSIS/Include/core_cm7.h ****  */
1896:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1897:Drivers/CMSIS/Include/core_cm7.h **** {
1898:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1899:Drivers/CMSIS/Include/core_cm7.h ****   {
1900:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1901:Drivers/CMSIS/Include/core_cm7.h ****   }
1902:Drivers/CMSIS/Include/core_cm7.h **** }
1903:Drivers/CMSIS/Include/core_cm7.h **** 
1904:Drivers/CMSIS/Include/core_cm7.h **** 
1905:Drivers/CMSIS/Include/core_cm7.h **** /**
1906:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
1907:Drivers/CMSIS/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1908:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1909:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
1910:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
1911:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1912:Drivers/CMSIS/Include/core_cm7.h ****  */
1913:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1914:Drivers/CMSIS/Include/core_cm7.h **** {
1915:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1916:Drivers/CMSIS/Include/core_cm7.h ****   {
1917:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1918:Drivers/CMSIS/Include/core_cm7.h ****   }
1919:Drivers/CMSIS/Include/core_cm7.h ****   else
1920:Drivers/CMSIS/Include/core_cm7.h ****   {
1921:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1922:Drivers/CMSIS/Include/core_cm7.h ****   }
1923:Drivers/CMSIS/Include/core_cm7.h **** }
1924:Drivers/CMSIS/Include/core_cm7.h **** 
1925:Drivers/CMSIS/Include/core_cm7.h **** 
1926:Drivers/CMSIS/Include/core_cm7.h **** /**
1927:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable Interrupt
1928:Drivers/CMSIS/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1929:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1930:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1931:Drivers/CMSIS/Include/core_cm7.h ****  */
1932:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1933:Drivers/CMSIS/Include/core_cm7.h **** {
1934:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1935:Drivers/CMSIS/Include/core_cm7.h ****   {
1936:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1937:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
1938:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
1939:Drivers/CMSIS/Include/core_cm7.h ****   }
1940:Drivers/CMSIS/Include/core_cm7.h **** }
1941:Drivers/CMSIS/Include/core_cm7.h **** 
1942:Drivers/CMSIS/Include/core_cm7.h **** 
1943:Drivers/CMSIS/Include/core_cm7.h **** /**
1944:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1945:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 62


1946:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1947:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1948:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1949:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1950:Drivers/CMSIS/Include/core_cm7.h ****  */
1951:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1952:Drivers/CMSIS/Include/core_cm7.h **** {
1953:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1954:Drivers/CMSIS/Include/core_cm7.h ****   {
1955:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1956:Drivers/CMSIS/Include/core_cm7.h ****   }
1957:Drivers/CMSIS/Include/core_cm7.h ****   else
1958:Drivers/CMSIS/Include/core_cm7.h ****   {
1959:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1960:Drivers/CMSIS/Include/core_cm7.h ****   }
1961:Drivers/CMSIS/Include/core_cm7.h **** }
1962:Drivers/CMSIS/Include/core_cm7.h **** 
1963:Drivers/CMSIS/Include/core_cm7.h **** 
1964:Drivers/CMSIS/Include/core_cm7.h **** /**
1965:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1966:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1967:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1968:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1969:Drivers/CMSIS/Include/core_cm7.h ****  */
1970:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1971:Drivers/CMSIS/Include/core_cm7.h **** {
1972:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1973:Drivers/CMSIS/Include/core_cm7.h ****   {
1974:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1975:Drivers/CMSIS/Include/core_cm7.h ****   }
1976:Drivers/CMSIS/Include/core_cm7.h **** }
1977:Drivers/CMSIS/Include/core_cm7.h **** 
1978:Drivers/CMSIS/Include/core_cm7.h **** 
1979:Drivers/CMSIS/Include/core_cm7.h **** /**
1980:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1981:Drivers/CMSIS/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1982:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1983:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1984:Drivers/CMSIS/Include/core_cm7.h ****  */
1985:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1986:Drivers/CMSIS/Include/core_cm7.h **** {
1987:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1988:Drivers/CMSIS/Include/core_cm7.h ****   {
1989:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1990:Drivers/CMSIS/Include/core_cm7.h ****   }
1991:Drivers/CMSIS/Include/core_cm7.h **** }
1992:Drivers/CMSIS/Include/core_cm7.h **** 
1993:Drivers/CMSIS/Include/core_cm7.h **** 
1994:Drivers/CMSIS/Include/core_cm7.h **** /**
1995:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Active Interrupt
1996:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1997:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1998:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
1999:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is active.
2000:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
2001:Drivers/CMSIS/Include/core_cm7.h ****  */
2002:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 63


2003:Drivers/CMSIS/Include/core_cm7.h **** {
2004:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2005:Drivers/CMSIS/Include/core_cm7.h ****   {
2006:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2007:Drivers/CMSIS/Include/core_cm7.h ****   }
2008:Drivers/CMSIS/Include/core_cm7.h ****   else
2009:Drivers/CMSIS/Include/core_cm7.h ****   {
2010:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
2011:Drivers/CMSIS/Include/core_cm7.h ****   }
2012:Drivers/CMSIS/Include/core_cm7.h **** }
2013:Drivers/CMSIS/Include/core_cm7.h **** 
2014:Drivers/CMSIS/Include/core_cm7.h **** 
2015:Drivers/CMSIS/Include/core_cm7.h **** /**
2016:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Priority
2017:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
2018:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2019:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2020:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
2021:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
2022:Drivers/CMSIS/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
2023:Drivers/CMSIS/Include/core_cm7.h ****  */
2024:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
2025:Drivers/CMSIS/Include/core_cm7.h **** {
2026:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2027:Drivers/CMSIS/Include/core_cm7.h ****   {
2028:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2029:Drivers/CMSIS/Include/core_cm7.h ****   }
2030:Drivers/CMSIS/Include/core_cm7.h ****   else
2031:Drivers/CMSIS/Include/core_cm7.h ****   {
2032:Drivers/CMSIS/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2033:Drivers/CMSIS/Include/core_cm7.h ****   }
2034:Drivers/CMSIS/Include/core_cm7.h **** }
2035:Drivers/CMSIS/Include/core_cm7.h **** 
2036:Drivers/CMSIS/Include/core_cm7.h **** 
2037:Drivers/CMSIS/Include/core_cm7.h **** /**
2038:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Priority
2039:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2040:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2041:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2042:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2043:Drivers/CMSIS/Include/core_cm7.h ****   \return             Interrupt Priority.
2044:Drivers/CMSIS/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2045:Drivers/CMSIS/Include/core_cm7.h ****  */
2046:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2047:Drivers/CMSIS/Include/core_cm7.h **** {
2048:Drivers/CMSIS/Include/core_cm7.h **** 
2049:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2050:Drivers/CMSIS/Include/core_cm7.h ****   {
2051:Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)));
2052:Drivers/CMSIS/Include/core_cm7.h ****   }
2053:Drivers/CMSIS/Include/core_cm7.h ****   else
2054:Drivers/CMSIS/Include/core_cm7.h ****   {
2055:Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
2056:Drivers/CMSIS/Include/core_cm7.h ****   }
2057:Drivers/CMSIS/Include/core_cm7.h **** }
2058:Drivers/CMSIS/Include/core_cm7.h **** 
2059:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 64


2060:Drivers/CMSIS/Include/core_cm7.h **** /**
2061:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Encode Priority
2062:Drivers/CMSIS/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2063:Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
2064:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2065:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2066:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2067:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2068:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2069:Drivers/CMSIS/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2070:Drivers/CMSIS/Include/core_cm7.h ****  */
2071:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2072:Drivers/CMSIS/Include/core_cm7.h **** {
2073:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2074:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2075:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2076:Drivers/CMSIS/Include/core_cm7.h **** 
2077:Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2078:Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2079:Drivers/CMSIS/Include/core_cm7.h **** 
2080:Drivers/CMSIS/Include/core_cm7.h ****   return (
2081:Drivers/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
2082:Drivers/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
2083:Drivers/CMSIS/Include/core_cm7.h ****          );
2084:Drivers/CMSIS/Include/core_cm7.h **** }
2085:Drivers/CMSIS/Include/core_cm7.h **** 
2086:Drivers/CMSIS/Include/core_cm7.h **** 
2087:Drivers/CMSIS/Include/core_cm7.h **** /**
2088:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Decode Priority
2089:Drivers/CMSIS/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
2090:Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2091:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2092:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2093:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2094:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2095:Drivers/CMSIS/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2096:Drivers/CMSIS/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2097:Drivers/CMSIS/Include/core_cm7.h ****  */
2098:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2099:Drivers/CMSIS/Include/core_cm7.h **** {
2100:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2101:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2102:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2103:Drivers/CMSIS/Include/core_cm7.h **** 
2104:Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2105:Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2106:Drivers/CMSIS/Include/core_cm7.h **** 
2107:Drivers/CMSIS/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
2108:Drivers/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
2109:Drivers/CMSIS/Include/core_cm7.h **** }
2110:Drivers/CMSIS/Include/core_cm7.h **** 
2111:Drivers/CMSIS/Include/core_cm7.h **** 
2112:Drivers/CMSIS/Include/core_cm7.h **** /**
2113:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Vector
2114:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2115:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2116:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 65


2117:Drivers/CMSIS/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2118:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
2119:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2120:Drivers/CMSIS/Include/core_cm7.h ****  */
2121:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2122:Drivers/CMSIS/Include/core_cm7.h **** {
2123:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2124:Drivers/CMSIS/Include/core_cm7.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
2125:Drivers/CMSIS/Include/core_cm7.h **** }
2126:Drivers/CMSIS/Include/core_cm7.h **** 
2127:Drivers/CMSIS/Include/core_cm7.h **** 
2128:Drivers/CMSIS/Include/core_cm7.h **** /**
2129:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2130:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2131:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2132:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2133:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
2134:Drivers/CMSIS/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2135:Drivers/CMSIS/Include/core_cm7.h ****  */
2136:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2137:Drivers/CMSIS/Include/core_cm7.h **** {
2138:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2139:Drivers/CMSIS/Include/core_cm7.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
2140:Drivers/CMSIS/Include/core_cm7.h **** }
2141:Drivers/CMSIS/Include/core_cm7.h **** 
2142:Drivers/CMSIS/Include/core_cm7.h **** 
2143:Drivers/CMSIS/Include/core_cm7.h **** /**
2144:Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Reset
2145:Drivers/CMSIS/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2146:Drivers/CMSIS/Include/core_cm7.h ****  */
2147:Drivers/CMSIS/Include/core_cm7.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
2148:Drivers/CMSIS/Include/core_cm7.h **** {
2149:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2150:Drivers/CMSIS/Include/core_cm7.h ****                                                                        buffered write are completed
2151:Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
2152:Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
2153:Drivers/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2154:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2155:Drivers/CMSIS/Include/core_cm7.h **** 
2156:Drivers/CMSIS/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2157:Drivers/CMSIS/Include/core_cm7.h ****   {
2158:Drivers/CMSIS/Include/core_cm7.h ****     __NOP();
2159:Drivers/CMSIS/Include/core_cm7.h ****   }
2160:Drivers/CMSIS/Include/core_cm7.h **** }
2161:Drivers/CMSIS/Include/core_cm7.h **** 
2162:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2163:Drivers/CMSIS/Include/core_cm7.h **** 
2164:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  MPU functions  #################################### */
2165:Drivers/CMSIS/Include/core_cm7.h **** 
2166:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
2167:Drivers/CMSIS/Include/core_cm7.h **** 
2168:Drivers/CMSIS/Include/core_cm7.h **** #include "mpu_armv7.h"
2169:Drivers/CMSIS/Include/core_cm7.h **** 
2170:Drivers/CMSIS/Include/core_cm7.h **** #endif
2171:Drivers/CMSIS/Include/core_cm7.h **** 
2172:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2173:Drivers/CMSIS/Include/core_cm7.h **** /**
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 66


2174:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2175:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2176:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2177:Drivers/CMSIS/Include/core_cm7.h ****   @{
2178:Drivers/CMSIS/Include/core_cm7.h ****  */
2179:Drivers/CMSIS/Include/core_cm7.h **** 
2180:Drivers/CMSIS/Include/core_cm7.h **** /**
2181:Drivers/CMSIS/Include/core_cm7.h ****   \brief   get FPU type
2182:Drivers/CMSIS/Include/core_cm7.h ****   \details returns the FPU type
2183:Drivers/CMSIS/Include/core_cm7.h ****   \returns
2184:Drivers/CMSIS/Include/core_cm7.h ****    - \b  0: No FPU
2185:Drivers/CMSIS/Include/core_cm7.h ****    - \b  1: Single precision FPU
2186:Drivers/CMSIS/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2187:Drivers/CMSIS/Include/core_cm7.h ****  */
2188:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2189:Drivers/CMSIS/Include/core_cm7.h **** {
2190:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t mvfr0;
2191:Drivers/CMSIS/Include/core_cm7.h **** 
2192:Drivers/CMSIS/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2193:Drivers/CMSIS/Include/core_cm7.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2194:Drivers/CMSIS/Include/core_cm7.h ****   {
2195:Drivers/CMSIS/Include/core_cm7.h ****     return 2U;           /* Double + Single precision FPU */
2196:Drivers/CMSIS/Include/core_cm7.h ****   }
2197:Drivers/CMSIS/Include/core_cm7.h ****   else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2198:Drivers/CMSIS/Include/core_cm7.h ****   {
2199:Drivers/CMSIS/Include/core_cm7.h ****     return 1U;           /* Single precision FPU */
2200:Drivers/CMSIS/Include/core_cm7.h ****   }
2201:Drivers/CMSIS/Include/core_cm7.h ****   else
2202:Drivers/CMSIS/Include/core_cm7.h ****   {
2203:Drivers/CMSIS/Include/core_cm7.h ****     return 0U;           /* No FPU */
2204:Drivers/CMSIS/Include/core_cm7.h ****   }
2205:Drivers/CMSIS/Include/core_cm7.h **** }
2206:Drivers/CMSIS/Include/core_cm7.h **** 
2207:Drivers/CMSIS/Include/core_cm7.h **** 
2208:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2209:Drivers/CMSIS/Include/core_cm7.h **** 
2210:Drivers/CMSIS/Include/core_cm7.h **** 
2211:Drivers/CMSIS/Include/core_cm7.h **** 
2212:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2213:Drivers/CMSIS/Include/core_cm7.h **** /**
2214:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2215:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2216:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2217:Drivers/CMSIS/Include/core_cm7.h ****   @{
2218:Drivers/CMSIS/Include/core_cm7.h ****  */
2219:Drivers/CMSIS/Include/core_cm7.h **** 
2220:Drivers/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2221:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2222:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2223:Drivers/CMSIS/Include/core_cm7.h **** 
2224:Drivers/CMSIS/Include/core_cm7.h **** 
2225:Drivers/CMSIS/Include/core_cm7.h **** /**
2226:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable I-Cache
2227:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on I-Cache
2228:Drivers/CMSIS/Include/core_cm7.h ****   */
2229:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableICache (void)
 751              		.loc 2 2229 22 view .LVU223
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 67


 752              	.LBB71:
2230:Drivers/CMSIS/Include/core_cm7.h **** {
2231:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2232:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 753              		.loc 2 2232 5 view .LVU224
 754              	.LBB72:
 755              	.LBI72:
 756              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 68


  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 69


 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 70


 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 71


 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 72


 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 73


 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 74


 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 75


 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 76


 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 77


 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 78


 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 79


 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 80


 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 81


 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 82


 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 757              		.loc 3 877 27 view .LVU225
 758              	.LBB73:
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 759              		.loc 3 879 3 view .LVU226
 760              		.syntax unified
 761              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 762 0006 BFF34F8F 		dsb 0xF
 763              	@ 0 "" 2
 764              		.thumb
 765              		.syntax unified
 766              	.LBE73:
 767              	.LBE72:
2233:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
 768              		.loc 2 2233 5 view .LVU227
 769              	.LBB74:
 770              	.LBI74:
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771              		.loc 3 866 27 view .LVU228
 772              	.LBB75:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 773              		.loc 3 868 3 view .LVU229
 774              		.syntax unified
 775              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 776 000a BFF36F8F 		isb 0xF
 777              	@ 0 "" 2
 778              		.thumb
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 83


 779              		.syntax unified
 780              	.LBE75:
 781              	.LBE74:
2234:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 782              		.loc 2 2234 5 view .LVU230
 783              		.loc 2 2234 18 is_stmt 0 view .LVU231
 784 000e 994B     		ldr	r3, .L53
 785 0010 0021     		movs	r1, #0
 786 0012 C3F85012 		str	r1, [r3, #592]
2235:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 787              		.loc 2 2235 5 is_stmt 1 view .LVU232
 788              	.LBB76:
 789              	.LBI76:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 790              		.loc 3 877 27 view .LVU233
 791              	.LBB77:
 792              		.loc 3 879 3 view .LVU234
 793              		.syntax unified
 794              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 795 0016 BFF34F8F 		dsb 0xF
 796              	@ 0 "" 2
 797              		.thumb
 798              		.syntax unified
 799              	.LBE77:
 800              	.LBE76:
2236:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
 801              		.loc 2 2236 5 view .LVU235
 802              	.LBB78:
 803              	.LBI78:
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 804              		.loc 3 866 27 view .LVU236
 805              	.LBB79:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 806              		.loc 3 868 3 view .LVU237
 807              		.syntax unified
 808              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 809 001a BFF36F8F 		isb 0xF
 810              	@ 0 "" 2
 811              		.thumb
 812              		.syntax unified
 813              	.LBE79:
 814              	.LBE78:
2237:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 815              		.loc 2 2237 5 view .LVU238
 816              		.loc 2 2237 14 is_stmt 0 view .LVU239
 817 001e 5A69     		ldr	r2, [r3, #20]
 818 0020 42F40032 		orr	r2, r2, #131072
 819 0024 5A61     		str	r2, [r3, #20]
2238:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 820              		.loc 2 2238 5 is_stmt 1 view .LVU240
 821              	.LBB80:
 822              	.LBI80:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 823              		.loc 3 877 27 view .LVU241
 824              	.LBB81:
 825              		.loc 3 879 3 view .LVU242
 826              		.syntax unified
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 84


 827              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 828 0026 BFF34F8F 		dsb 0xF
 829              	@ 0 "" 2
 830              		.thumb
 831              		.syntax unified
 832              	.LBE81:
 833              	.LBE80:
2239:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
 834              		.loc 2 2239 5 view .LVU243
 835              	.LBB82:
 836              	.LBI82:
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 837              		.loc 3 866 27 view .LVU244
 838              	.LBB83:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 839              		.loc 3 868 3 view .LVU245
 840              		.syntax unified
 841              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 842 002a BFF36F8F 		isb 0xF
 843              	@ 0 "" 2
 844              		.thumb
 845              		.syntax unified
 846              	.LBE83:
 847              	.LBE82:
 848              	.LBE71:
 849              	.LBE70:
 113:Src/main.c    **** 
 850              		.loc 1 113 3 view .LVU246
 851              	.LBB84:
 852              	.LBI84:
2240:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2241:Drivers/CMSIS/Include/core_cm7.h **** }
2242:Drivers/CMSIS/Include/core_cm7.h **** 
2243:Drivers/CMSIS/Include/core_cm7.h **** 
2244:Drivers/CMSIS/Include/core_cm7.h **** /**
2245:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable I-Cache
2246:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off I-Cache
2247:Drivers/CMSIS/Include/core_cm7.h ****   */
2248:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableICache (void)
2249:Drivers/CMSIS/Include/core_cm7.h **** {
2250:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2251:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2252:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2253:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2254:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2255:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2256:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2257:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2258:Drivers/CMSIS/Include/core_cm7.h **** }
2259:Drivers/CMSIS/Include/core_cm7.h **** 
2260:Drivers/CMSIS/Include/core_cm7.h **** 
2261:Drivers/CMSIS/Include/core_cm7.h **** /**
2262:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2263:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache
2264:Drivers/CMSIS/Include/core_cm7.h ****   */
2265:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateICache (void)
2266:Drivers/CMSIS/Include/core_cm7.h **** {
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 85


2267:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2268:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2269:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2270:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2271:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2272:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2273:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2274:Drivers/CMSIS/Include/core_cm7.h **** }
2275:Drivers/CMSIS/Include/core_cm7.h **** 
2276:Drivers/CMSIS/Include/core_cm7.h **** 
2277:Drivers/CMSIS/Include/core_cm7.h **** /**
2278:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable D-Cache
2279:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on D-Cache
2280:Drivers/CMSIS/Include/core_cm7.h ****   */
2281:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableDCache (void)
 853              		.loc 2 2281 22 view .LVU247
 854              	.LBB85:
2282:Drivers/CMSIS/Include/core_cm7.h **** {
2283:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2284:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
 855              		.loc 2 2284 5 view .LVU248
2285:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
 856              		.loc 2 2285 5 view .LVU249
2286:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
 857              		.loc 2 2286 5 view .LVU250
2287:Drivers/CMSIS/Include/core_cm7.h **** 
2288:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 858              		.loc 2 2288 5 view .LVU251
 859              		.loc 2 2288 17 is_stmt 0 view .LVU252
 860 002e C3F88410 		str	r1, [r3, #132]
2289:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 861              		.loc 2 2289 5 is_stmt 1 view .LVU253
 862              	.LBB86:
 863              	.LBI86:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 864              		.loc 3 877 27 view .LVU254
 865              	.LBB87:
 866              		.loc 3 879 3 view .LVU255
 867              		.syntax unified
 868              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 869 0032 BFF34F8F 		dsb 0xF
 870              	@ 0 "" 2
 871              		.thumb
 872              		.syntax unified
 873              	.LBE87:
 874              	.LBE86:
2290:Drivers/CMSIS/Include/core_cm7.h **** 
2291:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
 875              		.loc 2 2291 5 view .LVU256
 876              		.loc 2 2291 12 is_stmt 0 view .LVU257
 877 0036 D3F88040 		ldr	r4, [r3, #128]
 878              	.LVL25:
2292:Drivers/CMSIS/Include/core_cm7.h **** 
2293:Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2294:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 879              		.loc 2 2294 5 is_stmt 1 view .LVU258
 880              		.loc 2 2294 10 is_stmt 0 view .LVU259
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 86


 881 003a C4F34E30 		ubfx	r0, r4, #13, #15
 882              	.LVL26:
 883              		.loc 2 2294 10 view .LVU260
 884 003e 0FE0     		b	.L27
 885              	.LVL27:
 886              	.L48:
2295:Drivers/CMSIS/Include/core_cm7.h ****     do {
2296:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2297:Drivers/CMSIS/Include/core_cm7.h ****       do {
2298:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2299:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2300:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2301:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2302:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2303:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
 887              		.loc 2 2303 20 view .LVU261
 888 0040 1A46     		mov	r2, r3
 889              	.LVL28:
 890              	.L26:
2297:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 891              		.loc 2 2297 7 is_stmt 1 view .LVU262
2298:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 892              		.loc 2 2298 9 view .LVU263
2298:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 893              		.loc 2 2298 52 is_stmt 0 view .LVU264
 894 0042 43F6E073 		movw	r3, #16352
 895 0046 03EA4013 		and	r3, r3, r0, lsl #5
2298:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 896              		.loc 2 2298 73 view .LVU265
 897 004a 43EA8273 		orr	r3, r3, r2, lsl #30
2298:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 898              		.loc 2 2298 20 view .LVU266
 899 004e 8949     		ldr	r1, .L53
 900 0050 C1F86032 		str	r3, [r1, #608]
 901              		.loc 2 2303 20 view .LVU267
 902 0054 531E     		subs	r3, r2, #1
 903              	.LVL29:
 904              		.loc 2 2303 7 view .LVU268
 905 0056 002A     		cmp	r2, #0
 906 0058 F2D1     		bne	.L48
2304:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
 907              		.loc 2 2304 17 view .LVU269
 908 005a 431E     		subs	r3, r0, #1
 909              	.LVL30:
 910              		.loc 2 2304 5 view .LVU270
 911 005c 18B1     		cbz	r0, .L51
 912              		.loc 2 2304 17 view .LVU271
 913 005e 1846     		mov	r0, r3
 914              	.LVL31:
 915              	.L27:
2295:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 916              		.loc 2 2295 5 is_stmt 1 view .LVU272
2296:Drivers/CMSIS/Include/core_cm7.h ****       do {
 917              		.loc 2 2296 7 view .LVU273
2296:Drivers/CMSIS/Include/core_cm7.h ****       do {
 918              		.loc 2 2296 12 is_stmt 0 view .LVU274
 919 0060 C4F3C902 		ubfx	r2, r4, #3, #10
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 87


 920              	.LVL32:
2296:Drivers/CMSIS/Include/core_cm7.h ****       do {
 921              		.loc 2 2296 12 view .LVU275
 922 0064 EDE7     		b	.L26
 923              	.LVL33:
 924              	.L51:
2305:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 925              		.loc 2 2305 5 is_stmt 1 view .LVU276
 926              	.LBB88:
 927              	.LBI88:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 928              		.loc 3 877 27 view .LVU277
 929              	.LBB89:
 930              		.loc 3 879 3 view .LVU278
 931              		.syntax unified
 932              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 933 0066 BFF34F8F 		dsb 0xF
 934              	@ 0 "" 2
 935              		.thumb
 936              		.syntax unified
 937              	.LBE89:
 938              	.LBE88:
2306:Drivers/CMSIS/Include/core_cm7.h **** 
2307:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 939              		.loc 2 2307 5 view .LVU279
 940              		.loc 2 2307 14 is_stmt 0 view .LVU280
 941 006a 4B69     		ldr	r3, [r1, #20]
 942              	.LVL34:
 943              		.loc 2 2307 14 view .LVU281
 944 006c 43F48033 		orr	r3, r3, #65536
 945 0070 4B61     		str	r3, [r1, #20]
2308:Drivers/CMSIS/Include/core_cm7.h **** 
2309:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 946              		.loc 2 2309 5 is_stmt 1 view .LVU282
 947              	.LBB90:
 948              	.LBI90:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 949              		.loc 3 877 27 view .LVU283
 950              	.LBB91:
 951              		.loc 3 879 3 view .LVU284
 952              		.syntax unified
 953              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 954 0072 BFF34F8F 		dsb 0xF
 955              	@ 0 "" 2
 956              		.thumb
 957              		.syntax unified
 958              	.LBE91:
 959              	.LBE90:
2310:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
 960              		.loc 2 2310 5 view .LVU285
 961              	.LBB92:
 962              	.LBI92:
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 963              		.loc 3 866 27 view .LVU286
 964              	.LBB93:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 965              		.loc 3 868 3 view .LVU287
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 88


 966              		.syntax unified
 967              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 968 0076 BFF36F8F 		isb 0xF
 969              	@ 0 "" 2
 970              	.LVL35:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 971              		.loc 3 868 3 is_stmt 0 view .LVU288
 972              		.thumb
 973              		.syntax unified
 974              	.LBE93:
 975              	.LBE92:
 976              	.LBE85:
 977              	.LBE84:
 118:Src/main.c    **** 
 978              		.loc 1 118 3 is_stmt 1 view .LVU289
 979 007a FFF7FEFF 		bl	HAL_Init
 980              	.LVL36:
 125:Src/main.c    **** 
 981              		.loc 1 125 3 view .LVU290
 982 007e FFF7FEFF 		bl	SystemClock_Config
 983              	.LVL37:
 132:Src/main.c    ****   MX_I2S1_Init();
 984              		.loc 1 132 3 view .LVU291
 985 0082 FFF7FEFF 		bl	MX_GPIO_Init
 986              	.LVL38:
 133:Src/main.c    ****   // MX_QUADSPI_Init();
 987              		.loc 1 133 3 view .LVU292
 988 0086 FFF7FEFF 		bl	MX_I2S1_Init
 989              	.LVL39:
 135:Src/main.c    ****   // MX_SPI4_Init();
 990              		.loc 1 135 3 view .LVU293
 991 008a FFF7FEFF 		bl	MX_SDMMC2_SD_Init
 992              	.LVL40:
 140:Src/main.c    ****   /* USER CODE BEGIN 2 */
 993              		.loc 1 140 3 view .LVU294
 994 008e FFF7FEFF 		bl	MX_FATFS_Init
 995              	.LVL41:
 144:Src/main.c    ****   uint8_t channel = 0;
 996              		.loc 1 144 3 view .LVU295
 145:Src/main.c    ****   uint8_t last_channel = 0;
 997              		.loc 1 145 3 view .LVU296
 146:Src/main.c    ****   uint16_t data[2] = {0};
 998              		.loc 1 146 3 view .LVU297
 147:Src/main.c    ****   uint16_t status[2] = {0};
 999              		.loc 1 147 3 view .LVU298
 147:Src/main.c    ****   uint16_t status[2] = {0};
 1000              		.loc 1 147 12 is_stmt 0 view .LVU299
 1001 0092 0024     		movs	r4, #0
 1002 0094 0F94     		str	r4, [sp, #60]
 148:Src/main.c    **** 
 1003              		.loc 1 148 3 is_stmt 1 view .LVU300
 148:Src/main.c    **** 
 1004              		.loc 1 148 12 is_stmt 0 view .LVU301
 1005 0096 0E94     		str	r4, [sp, #56]
 150:Src/main.c    ****     HAL_I2S_Receive(&hi2s1, data, status, 1, 100);
 1006              		.loc 1 150 3 is_stmt 1 view .LVU302
 146:Src/main.c    ****   uint16_t data[2] = {0};
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 89


 1007              		.loc 1 146 11 is_stmt 0 view .LVU303
 1008 0098 2546     		mov	r5, r4
 150:Src/main.c    ****     HAL_I2S_Receive(&hi2s1, data, status, 1, 100);
 1009              		.loc 1 150 8 view .LVU304
 1010 009a 10E0     		b	.L28
 1011              	.LVL42:
 1012              	.L30:
 157:Src/main.c    ****             break;
 1013              		.loc 1 157 13 is_stmt 1 view .LVU305
 157:Src/main.c    ****             break;
 1014              		.loc 1 157 69 is_stmt 0 view .LVU306
 1015 009c BDF83C10 		ldrh	r1, [sp, #60]
 157:Src/main.c    ****             break;
 1016              		.loc 1 157 85 view .LVU307
 1017 00a0 BDF83E20 		ldrh	r2, [sp, #62]
 157:Src/main.c    ****             break;
 1018              		.loc 1 157 79 view .LVU308
 1019 00a4 42EA0142 		orr	r2, r2, r1, lsl #16
 157:Src/main.c    ****             break;
 1020              		.loc 1 157 48 view .LVU309
 1021 00a8 7348     		ldr	r0, .L53+4
 1022 00aa 0168     		ldr	r1, [r0]
 1023 00ac 4D1C     		adds	r5, r1, #1
 1024              	.LVL43:
 157:Src/main.c    ****             break;
 1025              		.loc 1 157 48 view .LVU310
 1026 00ae 0560     		str	r5, [r0]
 157:Src/main.c    ****             break;
 1027              		.loc 1 157 90 view .LVU311
 1028 00b0 1212     		asrs	r2, r2, #8
 157:Src/main.c    ****             break;
 1029              		.loc 1 157 52 view .LVU312
 1030 00b2 7248     		ldr	r0, .L53+8
 1031 00b4 40F82120 		str	r2, [r0, r1, lsl #2]
 158:Src/main.c    ****           case 0x4:
 1032              		.loc 1 158 13 is_stmt 1 view .LVU313
 163:Src/main.c    ****       }
 1033              		.loc 1 163 22 is_stmt 0 view .LVU314
 1034 00b8 1D46     		mov	r5, r3
 1035              	.LVL44:
 1036              	.L29:
 166:Src/main.c    ****   }
 1037              		.loc 1 166 5 is_stmt 1 view .LVU315
 166:Src/main.c    ****   }
 1038              		.loc 1 166 10 is_stmt 0 view .LVU316
 1039 00ba 0134     		adds	r4, r4, #1
 1040              	.LVL45:
 166:Src/main.c    ****   }
 1041              		.loc 1 166 10 view .LVU317
 1042 00bc A4B2     		uxth	r4, r4
 1043              	.LVL46:
 1044              	.L28:
 150:Src/main.c    ****     HAL_I2S_Receive(&hi2s1, data, status, 1, 100);
 1045              		.loc 1 150 8 view .LVU318
 1046 00be 42F20F73 		movw	r3, #9999
 1047 00c2 9C42     		cmp	r4, r3
 1048 00c4 26D8     		bhi	.L52
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 90


 151:Src/main.c    ****     if(status[0] == status[1]) {
 1049              		.loc 1 151 5 is_stmt 1 view .LVU319
 1050 00c6 6423     		movs	r3, #100
 1051 00c8 0093     		str	r3, [sp]
 1052 00ca 0123     		movs	r3, #1
 1053 00cc 0EAA     		add	r2, sp, #56
 1054 00ce 0FA9     		add	r1, sp, #60
 1055 00d0 6B48     		ldr	r0, .L53+12
 1056 00d2 FFF7FEFF 		bl	HAL_I2S_Receive
 1057              	.LVL47:
 152:Src/main.c    ****       channel = (uint8_t) status[0] & 0x4;
 1058              		.loc 1 152 5 view .LVU320
 152:Src/main.c    ****       channel = (uint8_t) status[0] & 0x4;
 1059              		.loc 1 152 14 is_stmt 0 view .LVU321
 1060 00d6 BDF83830 		ldrh	r3, [sp, #56]
 152:Src/main.c    ****       channel = (uint8_t) status[0] & 0x4;
 1061              		.loc 1 152 27 view .LVU322
 1062 00da BDF83A20 		ldrh	r2, [sp, #58]
 152:Src/main.c    ****       channel = (uint8_t) status[0] & 0x4;
 1063              		.loc 1 152 7 view .LVU323
 1064 00de 9342     		cmp	r3, r2
 1065 00e0 EBD1     		bne	.L29
 153:Src/main.c    ****       if(channel != last_channel) {
 1066              		.loc 1 153 7 is_stmt 1 view .LVU324
 153:Src/main.c    ****       if(channel != last_channel) {
 1067              		.loc 1 153 15 is_stmt 0 view .LVU325
 1068 00e2 03F00403 		and	r3, r3, #4
 1069              	.LVL48:
 154:Src/main.c    ****         switch(channel) {
 1070              		.loc 1 154 7 is_stmt 1 view .LVU326
 154:Src/main.c    ****         switch(channel) {
 1071              		.loc 1 154 9 is_stmt 0 view .LVU327
 1072 00e6 9D42     		cmp	r5, r3
 1073 00e8 E7D0     		beq	.L29
 155:Src/main.c    ****           case 0x0:
 1074              		.loc 1 155 9 is_stmt 1 view .LVU328
 1075 00ea 002B     		cmp	r3, #0
 1076 00ec D6D0     		beq	.L30
 1077 00ee 0BB9     		cbnz	r3, .L31
 163:Src/main.c    ****       }
 1078              		.loc 1 163 22 is_stmt 0 view .LVU329
 1079 00f0 1D46     		mov	r5, r3
 1080              	.LVL49:
 163:Src/main.c    ****       }
 1081              		.loc 1 163 22 view .LVU330
 1082 00f2 E2E7     		b	.L29
 1083              	.LVL50:
 1084              	.L31:
 160:Src/main.c    ****             break;
 1085              		.loc 1 160 13 is_stmt 1 view .LVU331
 160:Src/main.c    ****             break;
 1086              		.loc 1 160 69 is_stmt 0 view .LVU332
 1087 00f4 BDF83C10 		ldrh	r1, [sp, #60]
 160:Src/main.c    ****             break;
 1088              		.loc 1 160 85 view .LVU333
 1089 00f8 BDF83E20 		ldrh	r2, [sp, #62]
 160:Src/main.c    ****             break;
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 91


 1090              		.loc 1 160 79 view .LVU334
 1091 00fc 42EA0142 		orr	r2, r2, r1, lsl #16
 160:Src/main.c    ****             break;
 1092              		.loc 1 160 48 view .LVU335
 1093 0100 6048     		ldr	r0, .L53+16
 1094 0102 0168     		ldr	r1, [r0]
 1095 0104 4D1C     		adds	r5, r1, #1
 1096              	.LVL51:
 160:Src/main.c    ****             break;
 1097              		.loc 1 160 48 view .LVU336
 1098 0106 0560     		str	r5, [r0]
 160:Src/main.c    ****             break;
 1099              		.loc 1 160 90 view .LVU337
 1100 0108 1212     		asrs	r2, r2, #8
 160:Src/main.c    ****             break;
 1101              		.loc 1 160 52 view .LVU338
 1102 010a 5F48     		ldr	r0, .L53+20
 1103 010c 40F82120 		str	r2, [r0, r1, lsl #2]
 161:Src/main.c    ****         }
 1104              		.loc 1 161 13 is_stmt 1 view .LVU339
 163:Src/main.c    ****       }
 1105              		.loc 1 163 22 is_stmt 0 view .LVU340
 1106 0110 1D46     		mov	r5, r3
 161:Src/main.c    ****         }
 1107              		.loc 1 161 13 view .LVU341
 1108 0112 D2E7     		b	.L29
 1109              	.LVL52:
 1110              	.L52:
 169:Src/main.c    ****   uint32_t limit = (I2S_RxBuffer_L_Index > I2S_RxBuffer_R_Index) ? I2S_RxBuffer_R_Index : I2S_RxBuf
 1111              		.loc 1 169 3 is_stmt 1 view .LVU342
 170:Src/main.c    ****   while(count < limit) {
 1112              		.loc 1 170 3 view .LVU343
 170:Src/main.c    ****   while(count < limit) {
 1113              		.loc 1 170 89 is_stmt 0 view .LVU344
 1114 0114 584B     		ldr	r3, .L53+4
 1115 0116 1D68     		ldr	r5, [r3]
 1116              	.LVL53:
 170:Src/main.c    ****   while(count < limit) {
 1117              		.loc 1 170 89 view .LVU345
 1118 0118 5A4B     		ldr	r3, .L53+16
 1119 011a 1B68     		ldr	r3, [r3]
 170:Src/main.c    ****   while(count < limit) {
 1120              		.loc 1 170 12 view .LVU346
 1121 011c 9D42     		cmp	r5, r3
 1122 011e 28BF     		it	cs
 1123 0120 1D46     		movcs	r5, r3
 1124              	.LVL54:
 171:Src/main.c    ****     SEGGER_RTT_printf(0, "%d, %d, %d\r\n", count, I2S_RxBuffer_L[count], I2S_RxBuffer_R[count]);
 1125              		.loc 1 171 3 is_stmt 1 view .LVU347
 169:Src/main.c    ****   uint32_t limit = (I2S_RxBuffer_L_Index > I2S_RxBuffer_R_Index) ? I2S_RxBuffer_R_Index : I2S_RxBuf
 1126              		.loc 1 169 9 is_stmt 0 view .LVU348
 1127 0122 0024     		movs	r4, #0
 171:Src/main.c    ****     SEGGER_RTT_printf(0, "%d, %d, %d\r\n", count, I2S_RxBuffer_L[count], I2S_RxBuffer_R[count]);
 1128              		.loc 1 171 8 view .LVU349
 1129 0124 10E0     		b	.L33
 1130              	.LVL55:
 1131              	.L34:
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 92


 172:Src/main.c    ****     HAL_Delay(1);
 1132              		.loc 1 172 5 is_stmt 1 view .LVU350
 1133 0126 584B     		ldr	r3, .L53+20
 1134 0128 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1135 012c 0093     		str	r3, [sp]
 1136 012e 534B     		ldr	r3, .L53+8
 1137 0130 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1138 0134 2246     		mov	r2, r4
 1139 0136 5549     		ldr	r1, .L53+24
 1140 0138 0020     		movs	r0, #0
 1141 013a FFF7FEFF 		bl	SEGGER_RTT_printf
 1142              	.LVL56:
 173:Src/main.c    ****     count++;
 1143              		.loc 1 173 5 view .LVU351
 1144 013e 0120     		movs	r0, #1
 1145 0140 FFF7FEFF 		bl	HAL_Delay
 1146              	.LVL57:
 174:Src/main.c    ****   }
 1147              		.loc 1 174 5 view .LVU352
 174:Src/main.c    ****   }
 1148              		.loc 1 174 10 is_stmt 0 view .LVU353
 1149 0144 0134     		adds	r4, r4, #1
 1150              	.LVL58:
 174:Src/main.c    ****   }
 1151              		.loc 1 174 10 view .LVU354
 1152 0146 A4B2     		uxth	r4, r4
 1153              	.LVL59:
 1154              	.L33:
 171:Src/main.c    ****     SEGGER_RTT_printf(0, "%d, %d, %d\r\n", count, I2S_RxBuffer_L[count], I2S_RxBuffer_R[count]);
 1155              		.loc 1 171 8 view .LVU355
 1156 0148 AC42     		cmp	r4, r5
 1157 014a ECD3     		bcc	.L34
 178:Src/main.c    **** 
 1158              		.loc 1 178 3 is_stmt 1 view .LVU356
 180:Src/main.c    ****   HAL_Delay(1000);
 1159              		.loc 1 180 3 view .LVU357
 1160 014c FFF7FEFF 		bl	BSP_SD_Init
 1161              	.LVL60:
 181:Src/main.c    **** 
 1162              		.loc 1 181 3 view .LVU358
 1163 0150 4FF47A70 		mov	r0, #1000
 1164 0154 FFF7FEFF 		bl	HAL_Delay
 1165              	.LVL61:
 183:Src/main.c    ****   SEGGER_RTT_printf(0, "Status: %d\n", sd_status );
 1166              		.loc 1 183 3 view .LVU359
 183:Src/main.c    ****   SEGGER_RTT_printf(0, "Status: %d\n", sd_status );
 1167              		.loc 1 183 39 is_stmt 0 view .LVU360
 1168 0158 4D48     		ldr	r0, .L53+28
 1169 015a FFF7FEFF 		bl	HAL_SD_GetCardState
 1170              	.LVL62:
 184:Src/main.c    **** 
 1171              		.loc 1 184 3 is_stmt 1 view .LVU361
 1172 015e 0246     		mov	r2, r0
 1173 0160 4C49     		ldr	r1, .L53+32
 1174 0162 0020     		movs	r0, #0
 1175              	.LVL63:
 184:Src/main.c    **** 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 93


 1176              		.loc 1 184 3 is_stmt 0 view .LVU362
 1177 0164 FFF7FEFF 		bl	SEGGER_RTT_printf
 1178              	.LVL64:
 193:Src/main.c    ****   if (fres != FR_OK) {
 1179              		.loc 1 193 3 is_stmt 1 view .LVU363
 193:Src/main.c    ****   if (fres != FR_OK) {
 1180              		.loc 1 193 10 is_stmt 0 view .LVU364
 1181 0168 0122     		movs	r2, #1
 1182 016a 4B49     		ldr	r1, .L53+36
 1183 016c 9CA8     		add	r0, sp, #624
 1184 016e FFF7FEFF 		bl	f_mount
 1185              	.LVL65:
 194:Src/main.c    ****     myprintf("f_mount error (%i)\r\n", fres);
 1186              		.loc 1 194 3 is_stmt 1 view .LVU365
 194:Src/main.c    ****     myprintf("f_mount error (%i)\r\n", fres);
 1187              		.loc 1 194 6 is_stmt 0 view .LVU366
 1188 0172 0146     		mov	r1, r0
 1189 0174 18B1     		cbz	r0, .L35
 195:Src/main.c    ****     while(1);
 1190              		.loc 1 195 5 is_stmt 1 view .LVU367
 1191 0176 4948     		ldr	r0, .L53+40
 1192              	.LVL66:
 195:Src/main.c    ****     while(1);
 1193              		.loc 1 195 5 is_stmt 0 view .LVU368
 1194 0178 FFF7FEFF 		bl	myprintf
 1195              	.LVL67:
 1196              	.L36:
 196:Src/main.c    ****   }
 1197              		.loc 1 196 5 is_stmt 1 discriminator 1 view .LVU369
 196:Src/main.c    ****   }
 1198              		.loc 1 196 13 discriminator 1 view .LVU370
 1199 017c FEE7     		b	.L36
 1200              	.LVL68:
 1201              	.L35:
 199:Src/main.c    **** 
 1202              		.loc 1 199 3 view .LVU371
 201:Src/main.c    **** 
 1203              		.loc 1 201 3 view .LVU372
 203:Src/main.c    ****   if (fres != FR_OK) {
 1204              		.loc 1 203 3 view .LVU373
 203:Src/main.c    ****   if (fres != FR_OK) {
 1205              		.loc 1 203 10 is_stmt 0 view .LVU374
 1206 017e 0CAA     		add	r2, sp, #48
 1207 0180 0DA9     		add	r1, sp, #52
 1208 0182 4748     		ldr	r0, .L53+44
 1209              	.LVL69:
 203:Src/main.c    ****   if (fres != FR_OK) {
 1210              		.loc 1 203 10 view .LVU375
 1211 0184 FFF7FEFF 		bl	f_getfree
 1212              	.LVL70:
 204:Src/main.c    ****     myprintf("f_getfree error (%i)\r\n", fres);
 1213              		.loc 1 204 3 is_stmt 1 view .LVU376
 204:Src/main.c    ****     myprintf("f_getfree error (%i)\r\n", fres);
 1214              		.loc 1 204 6 is_stmt 0 view .LVU377
 1215 0188 0146     		mov	r1, r0
 1216 018a 18B1     		cbz	r0, .L37
 205:Src/main.c    ****     while(1);
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 94


 1217              		.loc 1 205 5 is_stmt 1 view .LVU378
 1218 018c 4548     		ldr	r0, .L53+48
 1219              	.LVL71:
 205:Src/main.c    ****     while(1);
 1220              		.loc 1 205 5 is_stmt 0 view .LVU379
 1221 018e FFF7FEFF 		bl	myprintf
 1222              	.LVL72:
 1223              	.L38:
 206:Src/main.c    ****   }
 1224              		.loc 1 206 5 is_stmt 1 discriminator 2 view .LVU380
 206:Src/main.c    ****   }
 1225              		.loc 1 206 13 discriminator 2 view .LVU381
 1226 0192 FEE7     		b	.L38
 1227              	.LVL73:
 1228              	.L37:
 209:Src/main.c    ****   free_sectors = free_clusters * getFreeFs->csize;
 1229              		.loc 1 209 3 view .LVU382
 209:Src/main.c    ****   free_sectors = free_clusters * getFreeFs->csize;
 1230              		.loc 1 209 29 is_stmt 0 view .LVU383
 1231 0194 0C9A     		ldr	r2, [sp, #48]
 1232 0196 5369     		ldr	r3, [r2, #20]
 209:Src/main.c    ****   free_sectors = free_clusters * getFreeFs->csize;
 1233              		.loc 1 209 40 view .LVU384
 1234 0198 023B     		subs	r3, r3, #2
 209:Src/main.c    ****   free_sectors = free_clusters * getFreeFs->csize;
 1235              		.loc 1 209 56 view .LVU385
 1236 019a 5089     		ldrh	r0, [r2, #10]
 1237              	.LVL74:
 209:Src/main.c    ****   free_sectors = free_clusters * getFreeFs->csize;
 1238              		.loc 1 209 17 view .LVU386
 1239 019c 00FB03F1 		mul	r1, r0, r3
 1240              	.LVL75:
 210:Src/main.c    **** 
 1241              		.loc 1 210 3 is_stmt 1 view .LVU387
 210:Src/main.c    **** 
 1242              		.loc 1 210 32 is_stmt 0 view .LVU388
 1243 01a0 0D9A     		ldr	r2, [sp, #52]
 210:Src/main.c    **** 
 1244              		.loc 1 210 16 view .LVU389
 1245 01a2 02FB00F2 		mul	r2, r2, r0
 1246              	.LVL76:
 212:Src/main.c    **** 
 1247              		.loc 1 212 3 is_stmt 1 view .LVU390
 1248 01a6 5208     		lsrs	r2, r2, #1
 1249              	.LVL77:
 212:Src/main.c    **** 
 1250              		.loc 1 212 3 is_stmt 0 view .LVU391
 1251 01a8 4908     		lsrs	r1, r1, #1
 1252              	.LVL78:
 212:Src/main.c    **** 
 1253              		.loc 1 212 3 view .LVU392
 1254 01aa 3F48     		ldr	r0, .L53+52
 1255              	.LVL79:
 212:Src/main.c    **** 
 1256              		.loc 1 212 3 view .LVU393
 1257 01ac FFF7FEFF 		bl	myprintf
 1258              	.LVL80:
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 95


 214:Src/main.c    ****       strcpy(buffer, "/");
 1259              		.loc 1 214 3 is_stmt 1 view .LVU394
 215:Src/main.c    ****       fres = scan_files(buffer);
 1260              		.loc 1 215 7 view .LVU395
 1261 01b0 3E48     		ldr	r0, .L53+56
 1262 01b2 394B     		ldr	r3, .L53+36
 1263 01b4 1B88     		ldrh	r3, [r3]	@ unaligned
 1264 01b6 0380     		strh	r3, [r0]	@ unaligned
 216:Src/main.c    ****   }
 1265              		.loc 1 216 7 view .LVU396
 216:Src/main.c    ****   }
 1266              		.loc 1 216 14 is_stmt 0 view .LVU397
 1267 01b8 FFF7FEFF 		bl	scan_files
 1268              	.LVL81:
 220:Src/main.c    ****   if (fres != FR_OK) {
 1269              		.loc 1 220 3 is_stmt 1 view .LVU398
 220:Src/main.c    ****   if (fres != FR_OK) {
 1270              		.loc 1 220 10 is_stmt 0 view .LVU399
 1271 01bc 0122     		movs	r2, #1
 1272 01be 3C49     		ldr	r1, .L53+60
 1273 01c0 10A8     		add	r0, sp, #64
 1274 01c2 FFF7FEFF 		bl	f_open
 1275              	.LVL82:
 221:Src/main.c    ****     myprintf("f_open error (%i)\r\n", fres);
 1276              		.loc 1 221 3 is_stmt 1 view .LVU400
 221:Src/main.c    ****     myprintf("f_open error (%i)\r\n", fres);
 1277              		.loc 1 221 6 is_stmt 0 view .LVU401
 1278 01c6 0446     		mov	r4, r0
 1279              	.LVL83:
 221:Src/main.c    ****     myprintf("f_open error (%i)\r\n", fres);
 1280              		.loc 1 221 6 view .LVU402
 1281 01c8 20B1     		cbz	r0, .L39
 222:Src/main.c    ****     while(1);
 1282              		.loc 1 222 5 is_stmt 1 view .LVU403
 1283 01ca 0146     		mov	r1, r0
 1284 01cc 3948     		ldr	r0, .L53+64
 1285              	.LVL84:
 222:Src/main.c    ****     while(1);
 1286              		.loc 1 222 5 is_stmt 0 view .LVU404
 1287 01ce FFF7FEFF 		bl	myprintf
 1288              	.LVL85:
 1289              	.L40:
 223:Src/main.c    ****   }
 1290              		.loc 1 223 5 is_stmt 1 discriminator 3 view .LVU405
 223:Src/main.c    ****   }
 1291              		.loc 1 223 13 discriminator 3 view .LVU406
 1292 01d2 FEE7     		b	.L40
 1293              	.LVL86:
 1294              	.L39:
 225:Src/main.c    **** 
 1295              		.loc 1 225 3 view .LVU407
 1296 01d4 3848     		ldr	r0, .L53+68
 1297              	.LVL87:
 225:Src/main.c    **** 
 1298              		.loc 1 225 3 is_stmt 0 view .LVU408
 1299 01d6 FFF7FEFF 		bl	myprintf
 1300              	.LVL88:
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 96


 227:Src/main.c    ****   
 1301              		.loc 1 227 3 is_stmt 1 view .LVU409
 231:Src/main.c    ****   if(rres != 0) {
 1302              		.loc 1 231 3 view .LVU410
 231:Src/main.c    ****   if(rres != 0) {
 1303              		.loc 1 231 17 is_stmt 0 view .LVU411
 1304 01da 10AA     		add	r2, sp, #64
 1305 01dc 1E21     		movs	r1, #30
 1306 01de 04A8     		add	r0, sp, #16
 1307 01e0 FFF7FEFF 		bl	f_gets
 1308              	.LVL89:
 232:Src/main.c    ****     myprintf("Read string from 'test.txt' contents: ");
 1309              		.loc 1 232 3 is_stmt 1 view .LVU412
 232:Src/main.c    ****     myprintf("Read string from 'test.txt' contents: ");
 1310              		.loc 1 232 5 is_stmt 0 view .LVU413
 1311 01e4 0028     		cmp	r0, #0
 1312 01e6 38D0     		beq	.L41
 233:Src/main.c    ****     SEGGER_RTT_WriteString(0, readBuf);
 1313              		.loc 1 233 5 is_stmt 1 view .LVU414
 1314 01e8 3448     		ldr	r0, .L53+72
 1315              	.LVL90:
 233:Src/main.c    ****     SEGGER_RTT_WriteString(0, readBuf);
 1316              		.loc 1 233 5 is_stmt 0 view .LVU415
 1317 01ea FFF7FEFF 		bl	myprintf
 1318              	.LVL91:
 234:Src/main.c    ****     SEGGER_RTT_WriteString(0, "\r\n");
 1319              		.loc 1 234 5 is_stmt 1 view .LVU416
 1320 01ee 04A9     		add	r1, sp, #16
 1321 01f0 0020     		movs	r0, #0
 1322 01f2 FFF7FEFF 		bl	SEGGER_RTT_WriteString
 1323              	.LVL92:
 235:Src/main.c    **** 
 1324              		.loc 1 235 5 view .LVU417
 1325 01f6 3249     		ldr	r1, .L53+76
 1326 01f8 0020     		movs	r0, #0
 1327 01fa FFF7FEFF 		bl	SEGGER_RTT_WriteString
 1328              	.LVL93:
 1329              	.L42:
 242:Src/main.c    **** 
 1330              		.loc 1 242 3 view .LVU418
 1331 01fe 10A8     		add	r0, sp, #64
 1332 0200 FFF7FEFF 		bl	f_close
 1333              	.LVL94:
 244:Src/main.c    ****   if(fres == FR_OK) {
 1334              		.loc 1 244 3 view .LVU419
 244:Src/main.c    ****   if(fres == FR_OK) {
 1335              		.loc 1 244 10 is_stmt 0 view .LVU420
 1336 0204 1A22     		movs	r2, #26
 1337 0206 2F49     		ldr	r1, .L53+80
 1338 0208 10A8     		add	r0, sp, #64
 1339 020a FFF7FEFF 		bl	f_open
 1340              	.LVL95:
 245:Src/main.c    ****     myprintf("I was able to open 'write.txt' for writing\r\n");
 1341              		.loc 1 245 3 is_stmt 1 view .LVU421
 245:Src/main.c    ****     myprintf("I was able to open 'write.txt' for writing\r\n");
 1342              		.loc 1 245 5 is_stmt 0 view .LVU422
 1343 020e 0146     		mov	r1, r0
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 97


 1344 0210 40BB     		cbnz	r0, .L43
 246:Src/main.c    ****   } else {
 1345              		.loc 1 246 5 is_stmt 1 view .LVU423
 1346 0212 2D48     		ldr	r0, .L53+84
 1347              	.LVL96:
 246:Src/main.c    ****   } else {
 1348              		.loc 1 246 5 is_stmt 0 view .LVU424
 1349 0214 FFF7FEFF 		bl	myprintf
 1350              	.LVL97:
 1351              	.L44:
 251:Src/main.c    ****   UINT bytesWrote; 
 1352              		.loc 1 251 3 is_stmt 1 view .LVU425
 1353 0218 1322     		movs	r2, #19
 1354 021a 2C49     		ldr	r1, .L53+88
 1355 021c 04A8     		add	r0, sp, #16
 1356 021e FFF7FEFF 		bl	strncpy
 1357              	.LVL98:
 252:Src/main.c    ****   fres = f_write(&fil, readBuf, 19, &bytesWrote);
 1358              		.loc 1 252 3 view .LVU426
 253:Src/main.c    ****   if(fres == FR_OK) {
 1359              		.loc 1 253 3 view .LVU427
 253:Src/main.c    ****   if(fres == FR_OK) {
 1360              		.loc 1 253 10 is_stmt 0 view .LVU428
 1361 0222 03AB     		add	r3, sp, #12
 1362 0224 1322     		movs	r2, #19
 1363 0226 04A9     		add	r1, sp, #16
 1364 0228 10A8     		add	r0, sp, #64
 1365 022a FFF7FEFF 		bl	f_write
 1366              	.LVL99:
 254:Src/main.c    ****     myprintf("Wrote %i bytes to 'write.txt'!\r\n", bytesWrote);
 1367              		.loc 1 254 3 is_stmt 1 view .LVU429
 254:Src/main.c    ****     myprintf("Wrote %i bytes to 'write.txt'!\r\n", bytesWrote);
 1368              		.loc 1 254 5 is_stmt 0 view .LVU430
 1369 022e E8B9     		cbnz	r0, .L45
 255:Src/main.c    ****   } else {
 1370              		.loc 1 255 5 is_stmt 1 view .LVU431
 1371 0230 0399     		ldr	r1, [sp, #12]
 1372 0232 2748     		ldr	r0, .L53+92
 1373              	.LVL100:
 255:Src/main.c    ****   } else {
 1374              		.loc 1 255 5 is_stmt 0 view .LVU432
 1375 0234 FFF7FEFF 		bl	myprintf
 1376              	.LVL101:
 1377              	.L46:
 261:Src/main.c    **** 
 1378              		.loc 1 261 3 is_stmt 1 view .LVU433
 1379 0238 10A8     		add	r0, sp, #64
 1380 023a FFF7FEFF 		bl	f_close
 1381              	.LVL102:
 264:Src/main.c    ****   
 1382              		.loc 1 264 3 view .LVU434
 1383 023e 0022     		movs	r2, #0
 1384 0240 1749     		ldr	r1, .L53+44
 1385 0242 1046     		mov	r0, r2
 1386 0244 FFF7FEFF 		bl	f_mount
 1387              	.LVL103:
 1388              	.L47:
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 98


 266:Src/main.c    ****   {
 1389              		.loc 1 266 3 discriminator 1 view .LVU435
 269:Src/main.c    ****     HAL_Delay(500);
 1390              		.loc 1 269 5 discriminator 1 view .LVU436
 1391 0248 0121     		movs	r1, #1
 1392 024a 2248     		ldr	r0, .L53+96
 1393 024c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1394              	.LVL104:
 270:Src/main.c    ****     /* USER CODE BEGIN 3 */
 1395              		.loc 1 270 5 discriminator 1 view .LVU437
 1396 0250 4FF4FA70 		mov	r0, #500
 1397 0254 FFF7FEFF 		bl	HAL_Delay
 1398              	.LVL105:
 1399 0258 F6E7     		b	.L47
 1400              	.LVL106:
 1401              	.L41:
 238:Src/main.c    ****   }
 1402              		.loc 1 238 5 view .LVU438
 1403 025a 2146     		mov	r1, r4
 1404 025c 1E48     		ldr	r0, .L53+100
 1405              	.LVL107:
 238:Src/main.c    ****   }
 1406              		.loc 1 238 5 is_stmt 0 view .LVU439
 1407 025e FFF7FEFF 		bl	myprintf
 1408              	.LVL108:
 1409 0262 CCE7     		b	.L42
 1410              	.LVL109:
 1411              	.L43:
 248:Src/main.c    ****   }
 1412              		.loc 1 248 5 is_stmt 1 view .LVU440
 1413 0264 1348     		ldr	r0, .L53+64
 1414              	.LVL110:
 248:Src/main.c    ****   }
 1415              		.loc 1 248 5 is_stmt 0 view .LVU441
 1416 0266 FFF7FEFF 		bl	myprintf
 1417              	.LVL111:
 1418 026a D5E7     		b	.L44
 1419              	.LVL112:
 1420              	.L45:
 257:Src/main.c    ****   }
 1421              		.loc 1 257 5 is_stmt 1 view .LVU442
 1422 026c 1B48     		ldr	r0, .L53+104
 1423              	.LVL113:
 257:Src/main.c    ****   }
 1424              		.loc 1 257 5 is_stmt 0 view .LVU443
 1425 026e FFF7FEFF 		bl	myprintf
 1426              	.LVL114:
 1427 0272 E1E7     		b	.L46
 1428              	.L54:
 1429              		.align	2
 1430              	.L53:
 1431 0274 00ED00E0 		.word	-536810240
 1432 0278 00000000 		.word	.LANCHOR1
 1433 027c 00000000 		.word	I2S_RxBuffer_L
 1434 0280 00000000 		.word	hi2s1
 1435 0284 00000000 		.word	.LANCHOR2
 1436 0288 00000000 		.word	I2S_RxBuffer_R
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 99


 1437 028c 00000000 		.word	.LC1
 1438 0290 00000000 		.word	hsd2
 1439 0294 10000000 		.word	.LC2
 1440 0298 1C000000 		.word	.LC3
 1441 029c 20000000 		.word	.LC4
 1442 02a0 38000000 		.word	.LC5
 1443 02a4 3C000000 		.word	.LC6
 1444 02a8 54000000 		.word	.LC7
 1445 02ac 00000000 		.word	buffer
 1446 02b0 9C000000 		.word	.LC8
 1447 02b4 A8000000 		.word	.LC9
 1448 02b8 BC000000 		.word	.LC10
 1449 02bc EC000000 		.word	.LC11
 1450 02c0 00000000 		.word	.LC0
 1451 02c4 28010000 		.word	.LC13
 1452 02c8 34010000 		.word	.LC14
 1453 02cc 64010000 		.word	.LC15
 1454 02d0 78010000 		.word	.LC16
 1455 02d4 00140240 		.word	1073878016
 1456 02d8 14010000 		.word	.LC12
 1457 02dc 9C010000 		.word	.LC17
 1458              		.cfi_endproc
 1459              	.LFE144:
 1461              		.section	.text.Error_Handler,"ax",%progbits
 1462              		.align	1
 1463              		.global	Error_Handler
 1464              		.syntax unified
 1465              		.thumb
 1466              		.thumb_func
 1467              		.fpu fpv5-d16
 1469              	Error_Handler:
 1470              	.LFB156:
 674:Src/main.c    **** 
 675:Src/main.c    **** /* USER CODE END 4 */
 676:Src/main.c    **** 
 677:Src/main.c    **** /**
 678:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 679:Src/main.c    ****   * @retval None
 680:Src/main.c    ****   */
 681:Src/main.c    **** void Error_Handler(void)
 682:Src/main.c    **** {
 1471              		.loc 1 682 1 is_stmt 1 view -0
 1472              		.cfi_startproc
 1473              		@ args = 0, pretend = 0, frame = 0
 1474              		@ frame_needed = 0, uses_anonymous_args = 0
 1475              		@ link register save eliminated.
 683:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 684:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 685:Src/main.c    **** 
 686:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 687:Src/main.c    **** }
 1476              		.loc 1 687 1 view .LVU445
 1477 0000 7047     		bx	lr
 1478              		.cfi_endproc
 1479              	.LFE156:
 1481              		.global	I2S_RxBuffer_R_Index
 1482              		.global	I2S_RxBuffer_L_Index
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 100


 1483              		.comm	I2S_RxBuffer_R,40000,4
 1484              		.comm	I2S_RxBuffer_L,40000,4
 1485              		.comm	buffer,256,4
 1486              		.comm	hpcd_USB_OTG_FS,1028,4
 1487              		.comm	huart2,128,4
 1488              		.comm	huart1,128,4
 1489              		.comm	hspi4,100,4
 1490              		.comm	hsd2,132,4
 1491              		.comm	hqspi,76,4
 1492              		.comm	hi2s1,64,4
 1493              		.section	.bss.I2S_RxBuffer_L_Index,"aw",%nobits
 1494              		.align	2
 1495              		.set	.LANCHOR1,. + 0
 1498              	I2S_RxBuffer_L_Index:
 1499 0000 00000000 		.space	4
 1500              		.section	.bss.I2S_RxBuffer_R_Index,"aw",%nobits
 1501              		.align	2
 1502              		.set	.LANCHOR2,. + 0
 1505              	I2S_RxBuffer_R_Index:
 1506 0000 00000000 		.space	4
 1507              		.section	.bss.fno.11710,"aw",%nobits
 1508              		.align	2
 1509              		.set	.LANCHOR0,. + 0
 1512              	fno.11710:
 1513 0000 00000000 		.space	24
 1513      00000000 
 1513      00000000 
 1513      00000000 
 1513      00000000 
 1514              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1515              		.align	2
 1516              	.LC1:
 1517 0000 25642C20 		.ascii	"%d, %d, %d\015\012\000"
 1517      25642C20 
 1517      25640D0A 
 1517      00
 1518 000d 000000   		.space	3
 1519              	.LC2:
 1520 0010 53746174 		.ascii	"Status: %d\012\000"
 1520      75733A20 
 1520      25640A00 
 1521              	.LC3:
 1522 001c 2F00     		.ascii	"/\000"
 1523 001e 0000     		.space	2
 1524              	.LC4:
 1525 0020 665F6D6F 		.ascii	"f_mount error (%i)\015\012\000"
 1525      756E7420 
 1525      6572726F 
 1525      72202825 
 1525      69290D0A 
 1526 0035 000000   		.space	3
 1527              	.LC5:
 1528 0038 00       		.ascii	"\000"
 1529 0039 000000   		.space	3
 1530              	.LC6:
 1531 003c 665F6765 		.ascii	"f_getfree error (%i)\015\012\000"
 1531      74667265 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 101


 1531      65206572 
 1531      726F7220 
 1531      28256929 
 1532 0053 00       		.space	1
 1533              	.LC7:
 1534 0054 53442063 		.ascii	"SD card stats:\015\012%10lu KiB total drive space.\015"
 1534      61726420 
 1534      73746174 
 1534      733A0D0A 
 1534      2531306C 
 1535 0081 0A253130 		.ascii	"\012%10lu KiB available.\015\012\000"
 1535      6C75204B 
 1535      69422061 
 1535      7661696C 
 1535      61626C65 
 1536 0099 000000   		.space	3
 1537              	.LC8:
 1538 009c 74657374 		.ascii	"test.txt\000"
 1538      2E747874 
 1538      00
 1539 00a5 000000   		.space	3
 1540              	.LC9:
 1541 00a8 665F6F70 		.ascii	"f_open error (%i)\015\012\000"
 1541      656E2065 
 1541      72726F72 
 1541      20282569 
 1541      290D0A00 
 1542              	.LC10:
 1543 00bc 49207761 		.ascii	"I was able to open 'test.txt' for reading!\015\012\000"
 1543      73206162 
 1543      6C652074 
 1543      6F206F70 
 1543      656E2027 
 1544 00e9 000000   		.space	3
 1545              	.LC11:
 1546 00ec 52656164 		.ascii	"Read string from 'test.txt' contents: \000"
 1546      20737472 
 1546      696E6720 
 1546      66726F6D 
 1546      20277465 
 1547 0113 00       		.space	1
 1548              	.LC12:
 1549 0114 665F6765 		.ascii	"f_gets error (%i)\015\012\000"
 1549      74732065 
 1549      72726F72 
 1549      20282569 
 1549      290D0A00 
 1550              	.LC13:
 1551 0128 77726974 		.ascii	"write.txt\000"
 1551      652E7478 
 1551      7400
 1552 0132 0000     		.space	2
 1553              	.LC14:
 1554 0134 49207761 		.ascii	"I was able to open 'write.txt' for writing\015\012\000"
 1554      73206162 
 1554      6C652074 
 1554      6F206F70 
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 102


 1554      656E2027 
 1555 0161 000000   		.space	3
 1556              	.LC15:
 1557 0164 68656C6C 		.ascii	"hello from mixr!\000"
 1557      6F206672 
 1557      6F6D206D 
 1557      69787221 
 1557      00
 1558 0175 000000   		.space	3
 1559              	.LC16:
 1560 0178 57726F74 		.ascii	"Wrote %i bytes to 'write.txt'!\015\012\000"
 1560      65202569 
 1560      20627974 
 1560      65732074 
 1560      6F202777 
 1561 0199 000000   		.space	3
 1562              	.LC17:
 1563 019c 665F7772 		.ascii	"f_write error (%i)\015\012\000"
 1563      69746520 
 1563      6572726F 
 1563      72202825 
 1563      69290D0A 
 1564              		.section	.rodata.scan_files.str1.4,"aMS",%progbits,1
 1565              		.align	2
 1566              	.LC0:
 1567 0000 0D0A00   		.ascii	"\015\012\000"
 1568              		.text
 1569              	.Letext0:
 1570              		.file 4 "/Users/evan/mixr/software/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machin
 1571              		.file 5 "/Users/evan/mixr/software/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_s
 1572              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1573              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f769xx.h"
 1574              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1575              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 1576              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 1577              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1578              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1579              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2s.h"
 1580              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_qspi.h"
 1581              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 1582              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 1583              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 1584              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 1585              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_usb.h"
 1586              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pcd.h"
 1587              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1588              		.file 22 "Middlewares/Third_Party/FatFs/src/integer.h"
 1589              		.file 23 "/Users/evan/mixr/software/gcc-arm-none-eabi-8-2019-q3-update/lib/gcc/arm-none-eabi/8.3.1
 1590              		.file 24 "/Users/evan/mixr/software/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_
 1591              		.file 25 "/Users/evan/mixr/software/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/r
 1592              		.file 26 "/Users/evan/mixr/software/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/l
 1593              		.file 27 "/Users/evan/mixr/software/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/stdli
 1594              		.file 28 "Middlewares/Third_Party/FatFs/src/ff.h"
 1595              		.file 29 "Middlewares/Third_Party/FatFs/src/diskio.h"
 1596              		.file 30 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 1597              		.file 31 "Inc/sd_diskio.h"
 1598              		.file 32 "Inc/fatfs.h"
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 103


 1599              		.file 33 "/Users/evan/mixr/software/gcc-arm-none-eabi-8-2019-q3-update/lib/gcc/arm-none-eabi/8.3.1
 1600              		.file 34 "/Users/evan/mixr/software/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/stdio
 1601              		.file 35 "Inc/SEGGER_RTT.h"
 1602              		.file 36 "Inc/bsp_driver_sd.h"
 1603              		.file 37 "/Users/evan/mixr/software/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/strin
 1604              		.file 38 "<built-in>"
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 104


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:17     .text.MX_SDMMC2_SD_Init:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:24     .text.MX_SDMMC2_SD_Init:0000000000000000 MX_SDMMC2_SD_Init
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:61     .text.MX_SDMMC2_SD_Init:0000000000000018 $d
                            *COM*:0000000000000084 hsd2
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:67     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:73     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:300    .text.MX_GPIO_Init:0000000000000104 $d
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:309    .text.MX_I2S1_Init:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:315    .text.MX_I2S1_Init:0000000000000000 MX_I2S1_Init
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:367    .text.MX_I2S1_Init:0000000000000030 $d
                            *COM*:0000000000000040 hi2s1
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:373    .text.scan_files:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:380    .text.scan_files:0000000000000000 scan_files
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:463    .text.scan_files:0000000000000040 $d
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:470    .text.SystemClock_Config:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:477    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:655    .text.SystemClock_Config:00000000000000b8 $d
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:662    .text.myprintf:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:669    .text.myprintf:0000000000000000 myprintf
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:723    .text.main:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:730    .text.main:0000000000000000 main
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:1431   .text.main:0000000000000274 $d
                            *COM*:0000000000009c40 I2S_RxBuffer_L
                            *COM*:0000000000009c40 I2S_RxBuffer_R
                            *COM*:0000000000000100 buffer
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:1462   .text.Error_Handler:0000000000000000 $t
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:1469   .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:1505   .bss.I2S_RxBuffer_R_Index:0000000000000000 I2S_RxBuffer_R_Index
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:1498   .bss.I2S_RxBuffer_L_Index:0000000000000000 I2S_RxBuffer_L_Index
                            *COM*:0000000000000404 hpcd_USB_OTG_FS
                            *COM*:0000000000000080 huart2
                            *COM*:0000000000000080 huart1
                            *COM*:0000000000000064 hspi4
                            *COM*:000000000000004c hqspi
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:1494   .bss.I2S_RxBuffer_L_Index:0000000000000000 $d
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:1501   .bss.I2S_RxBuffer_R_Index:0000000000000000 $d
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:1508   .bss.fno.11710:0000000000000000 $d
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:1512   .bss.fno.11710:0000000000000000 fno.11710
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:1515   .rodata.main.str1.4:0000000000000000 $d
/var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s:1565   .rodata.scan_files.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_I2S_Init
f_opendir
f_readdir
SEGGER_RTT_WriteString
f_closedir
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
SEGGER_RTT_printf
HAL_Init
ARM GAS  /var/folders/4f/bvl6__ys6qq7h5n0wwljfc200000gn/T//ccEZRhM1.s 			page 105


MX_FATFS_Init
HAL_I2S_Receive
HAL_Delay
BSP_SD_Init
HAL_SD_GetCardState
f_mount
f_getfree
f_open
f_gets
f_close
strncpy
f_write
HAL_GPIO_TogglePin
